name: aws-lc-rs tests
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true
env:
  GOPROXY: https://proxy.golang.org,direct
  AWS_LC_SYS_CMAKE_BUILDER: 1
  RUST_NIGHTLY_TOOLCHAIN: nightly
  RUST_SCRIPT_NIGHTLY_TOOLCHAIN: nightly
jobs:
  aws-lc-rs-bindgen:
    if: github.repository_owner == 'aws'
    runs-on: ${{ matrix.os }}
    name: aws-lc-rs bindgen on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-14-xlarge, windows-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          repository: aws/aws-lc-rs
          path: ./aws-lc-rs
          submodules: false
      - name: Remove aws-lc submodule from crate directory
        working-directory: ./aws-lc-rs/aws-lc-sys
        shell: bash
        run: |
          rm -rf aws-lc
      - uses: actions/checkout@v3
        with:
          path: ./aws-lc-rs/aws-lc-sys/aws-lc
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_SCRIPT_NIGHTLY_TOOLCHAIN }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/setup-go@v4
        with:
          go-version: '>=1.20'
      - name: Install current Bash on macOS
        if: runner.os == 'macOS'
        run: brew install bash coreutils
      - uses: ilammy/setup-nasm@v1
        if: runner.os == 'Windows'
      - name: No-prefix build for ${{ matrix.os }}
        env:
          AWS_LC_SYS_NO_PREFIX: "1"
          # Ensure that we collect symbols unique to C99 builds
          AWS_LC_SYS_C_STD: "99"
        working-directory: ./aws-lc-rs
        run: |
          cargo test -p aws-lc-sys --features bindgen
      - name: Delete current symbol files and headers
        working-directory: ./aws-lc-rs
        shell: bash
        run: |
          rm -rf ./aws-lc-sys/symbols/* ./aws-lc-sys/generated-include/*
          mkdir -p ./aws-lc-sys/symbols ./aws-lc-sys/generated-include/openssl
      - name: Collect symbols
        working-directory: ./aws-lc-rs
        shell: bash
        run: |
          ./scripts/build/collect_symbols.sh -c aws-lc-sys
      - name: Generate Prefix Headers
        working-directory: ./aws-lc-rs
        shell: bash
        run: ./scripts/generate/_generate_prefix_headers.sh -c aws-lc-sys
      - name: Update sys-crate metadata
        working-directory: ./aws-lc-rs
        shell: bash
        run: ./scripts/ci/update_sys_crate_metadata.sh aws-lc-sys
      - name: Clean
        working-directory: ./aws-lc-rs
        run: |
          cargo clean
      - name: Generate bindings for ${{ matrix.os }}
        env:
          AWS_LC_SYS_PREGENERATING_BINDINGS: "1"
        working-directory: ./aws-lc-rs
        run: |
          cargo test -p aws-lc-sys --features bindgen
      - name: Collect source from ${{ matrix.os }}
        if: runner.os != 'Windows'
        working-directory: ./aws-lc-rs
        run: ./scripts/build/collect_build_src.sh