name: Integration tests
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true
env:
  CC: gcc
jobs:
  libssh2:
    if: github.repository_owner == 'aws'
    runs-on: ubuntu-latest
    steps:
      - name: Install OS Dependencies
        run: |
          sudo apt-get update -o Acquire::Languages=none -o Acquire::Translation=none
          sudo apt-get -y --no-install-recommends install cmake gcc ninja-build golang make
      - uses: actions/checkout@v4
      - name: Run libssh2 integration tests
        run: |
          ./tests/ci/integration/run_libssh2_integration.sh
  libevent:
    if: github.repository_owner == 'aws'
    runs-on: ubuntu-latest
    steps:
      - name: Install OS Dependencies
        run: |
          sudo apt-get update -o Acquire::Languages=none -o Acquire::Translation=none
          sudo apt-get -y --no-install-recommends install \
          cmake gcc ninja-build golang
      - uses: actions/checkout@v4
      - name: Run libevent build
        run: |
          ./tests/ci/integration/run_libevent_integration.sh
  librdkafka:
    if: github.repository_owner == 'aws'
    runs-on: ubuntu-latest
    steps:
      - name: Install OS Dependencies
        run: |
          sudo apt-get update -o Acquire::Languages=none -o Acquire::Translation=none
          sudo apt-get -y --no-install-recommends install \
          cmake gcc ninja-build golang
      - uses: actions/checkout@v4
      - name: Run librdkafka build
        run: |
          ./tests/ci/integration/run_librdkafka_integration.sh
  rust-openssl:
    if: github.repository_owner == 'aws'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout aws-lc
        uses: actions/checkout@v4
        with:
          path: aws-lc
      - name: Checkout rust-openssl
        uses: actions/checkout@v4
        with:
          repository: sfackler/rust-openssl
          path: rust-openssl
      - uses: dtolnay/rust-toolchain@stable
        id: toolchain
      - name: Set Rust toolchain override
        run: rustup override set ${{ steps.toolchain.outputs.name }}
      - name: Install bindgen-cli
        run: cargo install --locked bindgen-cli
      - name: Run rust-openssl integration tests
        env:
          RUST_OPENSSL_SRC_DIR: "${{ github.workspace }}/rust-openssl"
        run: |
          pushd "${GITHUB_WORKSPACE}/aws-lc"
          ./tests/ci/integration/run_rust_openssl_integration.sh
