name: integration-omnibus
on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true
env:
  GOPROXY: https://proxy.golang.org,direct
permissions:
  contents: read

jobs:
  integrations:
    name: ${{ matrix.name }}-${{ matrix.arch }}
    runs-on:
      - codebuild-aws-lc-ci-github-actions-${{ github.run_id }}-${{ github.run_attempt }}
        image:${{ matrix.arch == 'x86_64' && 'linux-5.0' || matrix.arch == 'aarch64' && 'arm-3.0' }}
        instance-size:${{ matrix.size }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # s2n-tls Integration Tests
          - name: s2n-tls
            arch: x86_64
            size: small
            image: ubuntu:20.04
            compiler: clang-9
            run: ./tests/ci/integration/run_s2n_integration.sh

          # AWS Common Runtime (CRT) Integration Tests
          - name: aws-crt
            arch: x86_64
            size: small
            image: amazonlinux:2023
            compiler: gcc-11
            run: ./tests/ci/integration/run_crt_integration.sh
          - name: aws-crt
            arch: aarch64
            size: small
            image: amazonlinux:2023
            compiler: gcc-11
            run: ./tests/ci/integration/run_crt_integration.sh

          # libgit2
          - name: libgit2
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_libgit2_integration.sh

          # OpenSSH Integration Tests
          - name: openssh-master
            arch: x86_64
            size: small
            image: amazonlinux:2023
            compiler: clang-15
            openssh_branch: master
            run: ./tests/ci/integration/run_openssh_integration.sh
          - name: openssh-v8.9
            arch: x86_64
            size: small
            image: amazonlinux:2023
            compiler: clang-15
            openssh_branch: V_8_9
            run: ./tests/ci/integration/run_openssh_integration.sh
          - name: openssh-master
            arch: aarch64
            size: 2xlarge
            image: amazonlinux:2023
            compiler: clang-15
            openssh_branch: master
            run: ./tests/ci/integration/run_openssh_integration.sh
          - name: openssh-v8.9
            arch: aarch64
            size: 2xlarge
            image: amazonlinux:2023
            compiler: clang-15
            openssh_branch: V_8_9
            run: ./tests/ci/integration/run_openssh_integration.sh

          # PostgreSQL Integration Tests
          - name: postgresql
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            user: postgres
            run: ./tests/ci/integration/run_postgres_integration.sh
          - name: postgresql
            arch: aarch64
            size: large
            image: ubuntu:22.04
            compiler: gcc-12
            user: postgres
            run: ./tests/ci/integration/run_postgres_integration.sh

          # MySQL Integration Tests
          - name: mysql
            arch: x86_64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            credentials: true
            user: postgres
            run: ./tests/ci/integration/run_mysql_integration.sh
          - name: mysql
            arch: aarch64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            credentials: true
            user: postgres
            run: ./tests/ci/integration/run_mysql_integration.sh

          # MariaDB Integration Tests
          - name: mariadb
            arch: x86_64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_mariadb_integration.sh
          - name: mariadb
            arch: aarch64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_mariadb_integration.sh

          # Curl Integration Tests
          - name: curl
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-11
            ipv6: true
            run: ./tests/ci/integration/run_curl_integration.sh
          - name: curl
            arch: aarch64
            size: large
            image: ubuntu:22.04
            compiler: gcc-11
            ipv6: true
            run: ./tests/ci/integration/run_curl_integration.sh

          # NGINX Integration Tests
          - name: nginx
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            user: postgres
            run: ./tests/ci/integration/run_nginx_integration.sh
          - name: nginx
            arch: aarch64
            size: large
            image: ubuntu:22.04
            compiler: gcc-12
            user: postgres
            run: ./tests/ci/integration/run_nginx_integration.sh

          # SSLProxy Integration Tests
          - name: sslproxy
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_sslproxy_integration.sh
          - name: sslproxy
            arch: aarch64 
            size: large
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_sslproxy_integration.sh

          # Monit Integration Tests
          - name: monit
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            credentials: true
            run: ./tests/ci/integration/run_monit_integration.sh

          # librelp Integration Tests
          - name: librelp
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_librelp_integration.sh

          # HAProxy Integration Tests
          - name: haproxy
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_haproxy_integration.sh

          # Trousers Integration Tests
          - name: trousers
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_trousers_integration.sh

          # NTP Integration Tests
          - name: ntp
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_ntp_integration.sh

          # PQ TLS Integration Tests
          - name: pq-tls
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_pq_tls_integration.sh

          # tpm2-tss Integration Tests
          - name: tpm2-tss
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_tpm2_tss_integration.sh

          # tcpdump Integration Tests
          - name: tcpdump
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_tcpdump_integration.sh

          # OpenLDAP Integration Tests
          - name: openldap-master
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_openldap_integration.sh master
          - name: openldap-v2.5
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_openldap_integration.sh OPENLDAP_REL_ENG_2_5

          # Cyrus SASL Integration Tests
          - name: cyrus-sasl 
            arch: x86_64
            size: small 
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_cyrus_sasl_integration.sh

          # Amazon Corretto Crypto Provider Integration Tests
          - name: accp
            arch: x86_64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            accp_fips: false
            run: ./tests/ci/integration/run_accp_integration.sh
          - name: accp-fips
            arch: x86_64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            accp_fips: true
            run: ./tests/ci/integration/run_accp_integration.sh
        
          # NMAP Integration Tests
          - name: nmap
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_nmap_integration.sh

          # IBM TPM Integration Tests
          - name: ibmtpm
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_ibmtpm_integration.sh

          # libwebsockets Integration Tests
          - name: libwebsockets
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_libwebsockets_integration.sh
          
          # GRPC Integration Tests
          - name: grpc
            arch: x86_64
            size: 2xlarge
            image: ubuntu:22.04
            compiler: gcc-12
            ipv6: true
            run: ./tests/ci/integration/run_grpc_integration.sh

          # Bind9 Integration Tests
          - name: bind9
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            ipv6: true
            options: --privileged
            run: ./tests/ci/integration/run_bind9_integration.sh

          # strongSwan Integration Tests
          - name: strongswan
            arch: x86_64
            size: small
            image: ubuntu:22.04
            compiler: gcc-12
            ipv6: true
            run: ./tests/ci/integration/run_strongswan_integration.sh

          # OpenVPN Integration Tests
          - name: openvpn-master
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            ipv6: true
            run: ./tests/ci/integration/run_openvpn_integration.sh master
          - name: openvpn-v2.6
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            ipv6: true
            run: ./tests/ci/integration/run_openvpn_integration.sh release/2.6

          # XMLSec Integration Tests
          - name: xmlsec
            arch: x86_64
            size: medium
            image: ubuntu:22.04
            compiler: gcc-12
            options: --privileged
            run: ./tests/ci/integration/run_xmlsec_integration.sh

          # XtraBackup Integration Tests
          - name: xtrabackup
            arch: x86_64
            size: large
            image: ubuntu:22.04
            compiler: gcc-12
            run: ./tests/ci/integration/run_xtrabackup_integration.sh
    env:
      OPENSSH_BRANCH: ${{ matrix.openssh_branch || '' }}
      ACCP_FIPS: ${{ matrix.accp_fips || '' }}
    steps:
      - uses: actions/checkout@v5
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - uses: ./.github/actions/codebuild-docker-run
        name: Run Container
        with:
          image: ${{ steps.login-ecr.outputs.registry }}/aws-lc/${{ matrix.image }}
          env: |
            OPENSSH_BRANCH
            ACCP_FIPS
          options: ${{ matrix.options || '' }}
          user: ${{ matrix.user || '' }}
          ipv6: ${{ matrix.ipv6 || false }}
          withCredentials: ${{ matrix.credentials || false }}
          run: |
            source /opt/compiler-env/setup-${{ matrix.compiler }}.sh
            ${{ matrix.run }}

  python:
    name: python-${{ matrix.version }}${{ matrix.buildFIPS == 1 && '-fips' || '' }}-${{ matrix.crtUseSystemCrypto == 1 && 'crt-vendored-crypto' || 'crt-system-crypto' }}-${{ matrix.arch }}
    runs-on:
      - codebuild-aws-lc-ci-github-actions-${{ github.run_id }}-${{ github.run_attempt }}
        image:linux-5.0
        instance-size:medium
    strategy:
      fail-fast: false
      matrix:
        arch: ["x86_64"]
        version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
          - "3.14"
        buildFIPS: [0, 1]
        crtUseSystemCrypto: [0, 1]
        include:
          - version: main
            buildFIPS: 0
            crtUseSystemCrypto: 0
            arch: x86_64
    env:
      FIPS: ${{ matrix.buildFIPS }}
      AWS_CRT_BUILD_USE_SYSTEM_LIBCRYPTO: ${{ matrix.crtUseSystemCrypto }}
    steps:
      - uses: actions/checkout@v5
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - uses: ./.github/actions/codebuild-docker-run
        name: Run Container
        with:
          image: ${{ steps.login-ecr.outputs.registry }}/aws-lc/ubuntu:22.04
          env: |
            FIPS
            AWS_CRT_BUILD_USE_SYSTEM_LIBCRYPTO
          ipv6: true
          run: |
            source /opt/compiler-env/setup-gcc-12.sh
            ./tests/ci/integration/run_python_integration.sh ${{ matrix.version }}

  ruby:
    name: ruby-${{ matrix.version }}${{ matrix.buildFIPS == 1 && '-fips' || '' }}-${{ matrix.arch }}
    runs-on:
      - codebuild-aws-lc-ci-github-actions-${{ github.run_id }}-${{ github.run_attempt }}
        image:linux-5.0
        instance-size:medium
    strategy:
      fail-fast: false
      matrix:
        arch: ["x86_64"]
        version:
          - master
          - ruby_3_2
          - ruby_3_3
          - ruby_3_4
        buildFIPS: [0, 1]
    env:
      FIPS: ${{ matrix.buildFIPS }}
    steps:
      - uses: actions/checkout@v5
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - uses: ./.github/actions/codebuild-docker-run
        name: Run Container
        with:
          image: ${{ steps.login-ecr.outputs.registry }}/aws-lc/ubuntu-24.04_integration
          env: |
            FIPS
          ipv6: true
          run: |
            source /opt/compiler-env/setup-gcc-12.sh
            ./tests/ci/integration/run_ruby_integration.sh ${{ matrix.version }}
