# escape=`

# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0 OR ISC

FROM mcr.microsoft.com/windows/servercore:ltsc2022 AS base

ADD https://download.microsoft.com/download/6/A/A/6AA4EDFF-645B-48C5-81CC-ED5963AEAD48/vc_redist.x64.exe /vc_redist.x64.exe
RUN start /wait C:\vc_redist.x64.exe /quiet /norestart

# Install chocolatey
# https://stackoverflow.com/questions/76470752/chocolatey-installation-in-docker-started-to-fail-restart-due-to-net-framework
ENV chocolateyVersion=1.4.0
# https://chocolatey.org/docs/troubleshooting#the-request-was-aborted-could-not-create-ssltls-secure-channel
RUN @powershell Set-ExecutionPolicy Bypass -Scope Process -Force; [Net.ServicePointManager]::SecurityProtocol = [Net.ServicePointManager]::SecurityProtocol -bor [Net.SecurityProtocolType]::Tls12; $env:chocolateyUseWindowsCompression = 'true'; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

RUN choco install git --version 2.23.0 -y && `
choco install 7zip.install -y && `
choco install ninja --version 1.9.0.20190208 -y && `
choco install strawberryperl --version 5.32.0.1 -y && `
choco install nasm --version 2.14.02 -y && `
choco install golang --version 1.20.1 -y && `
choco install cmake --version 3.15.4 --installargs 'ADD_CMAKE_TO_PATH=""System""' -y

# Remove Strawberryperl's GCC from path because it override's MSVC's C.
RUN setx /M PATH "%PATH:C:\Strawberry\c\bin;=%"

CMD [ "cmd.exe" ]

FROM base AS vs2015

SHELL ["cmd", "/S", "/C"]

RUN `
    # Download the Build Tools bootstrapper.
    curl -SL --output vs_buildtools.exe https://aka.ms/vs/15/release/vs_buildtools.exe `
    `
    # Install Build Tools. Build Tools for MSVC2015 are not directly downloadable without a Visual Studio
    # subscription, so we'll need to download MSVC2017 and add the MSVC2015 (VC.140) component available to
    # download with it.
    # Reference: https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2017/install/workload-component-id-vs-build-tools?view=vs-2017
    && (start /w vs_buildtools.exe --quiet --wait --norestart --nocache `
        --add Microsoft.VisualStudio.Component.VC.CLI.Support `
        --add Microsoft.VisualStudio.Component.VC.140 `
        --add Microsoft.VisualStudio.Component.VC.CMake.Project `
        || IF "%ERRORLEVEL%"=="3010" EXIT 0) `
    `
    # Cleanup
    && del /q vs_buildtools.exe

# Add msbuild and cl to PATH
RUN setx /M PATH "%PATH%;C:\Program Files (x86)\MSBuild\14.0\bin;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin"

# Dynamically get the installed SDK version
RUN for /f "tokens=*" %a in ('dir /b /ad "C:\Program Files (x86)\Windows Kits\10\Include\10.0*"') do setx /M SDKVERSION %a

# Replace Windows SDK with the correct binary path. vcvarsall.bat for MSVC2015 does not account for the nested directory
RUN rmdir /s /Q "C:\Program Files (x86)\Windows Kits\10\bin\x64" && `
    rmdir /s /Q "C:\Program Files (x86)\Windows Kits\10\bin\x86" && `
    move "C:\Program Files (x86)\Windows Kits\10\bin\%SDKVERSION%\x64" "C:\Program Files (x86)\Windows Kits\10\bin" && `
    move "C:\Program Files (x86)\Windows Kits\10\bin\%SDKVERSION%\x86" "C:\Program Files (x86)\Windows Kits\10\bin"

CMD [ "cmd.exe" ]

FROM base AS vs2017

ENV SDE_VERSION_TAG=sde-external-9.44.0-2024-08-22-win
ENV SDE_MIRROR_URL="https://downloadmirror.intel.com/831748/sde-external-9.44.0-2024-08-22-win.tar.xz"

SHELL ["cmd", "/S", "/C"]
RUN `
    # Download the Build Tools bootstrapper.
    curl -SL --output vs_buildtools.exe https://aka.ms/vs/15/release/vs_buildtools.exe `
    `
    # Install MSVC2017 Build Tools.
    # Reference: https://docs.microsoft.com/en-us/previous-versions/visualstudio/visual-studio-2017/install/workload-component-id-vs-build-tools?view=vs-2017
    && (start /w vs_buildtools.exe --quiet --wait --norestart --nocache `
        --add Microsoft.VisualStudio.Workload.VCTools `
        --add Microsoft.VisualStudio.Component.VC.CLI.Support `
        --add Microsoft.VisualStudio.Component.VC.CMake.Project `
        || IF "%ERRORLEVEL%"=="3010" EXIT 0) `
    `
    # Cleanup
    && del /q vs_buildtools.exe

RUN `
    # Install Windows Intel SDE.
    curl -SL --output temp.tar.xz %SDE_MIRROR_URL% `
    `
    && 7z x temp.tar.xz `
    && 7z x temp.tar `
    && ren %SDE_VERSION_TAG% windows-sde `
    && del temp.tar.xz `
    && del temp.tar

RUN setx /M PATH "%PATH%;C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"

RUN setx /M SDEROOT C:/windows-sde

CMD [ "cmd.exe" ]

FROM base AS vs2019

SHELL ["cmd", "/S", "/C"]
RUN `
    # Download the Build Tools bootstrapper.
    curl -SL --output vs_buildtools.exe https://aka.ms/vs/16/release/vs_buildtools.exe `
    `
    # Install MSVC2019 Build Tools with Windows SDK
    && (start /w vs_buildtools.exe --quiet --wait --norestart --nocache `
        --add Microsoft.VisualStudio.Workload.VCTools `
        --add Microsoft.VisualStudio.Component.VC.CLI.Support `
        --add Microsoft.VisualStudio.Component.VC.CMake.Project `
        --add Microsoft.VisualStudio.Component.Windows10SDK.19041 `
        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
        || IF "%ERRORLEVEL%"=="3010" EXIT 0) `
    `
    # Cleanup
    && del /q vs_buildtools.exe

RUN setx /M PATH "%PATH%;C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"

CMD [ "cmd.exe" ]

FROM base AS vs2022

SHELL ["cmd", "/S", "/C"]
RUN `
    # Download the Build Tools bootstrapper.
    curl -SL --output vs_buildtools.exe https://aka.ms/vs/17/release/vs_buildtools.exe `
    `
    # Install MSVC2022 Build Tools with Windows SDK
    && (start /w vs_buildtools.exe --quiet --wait --norestart --nocache `
        --add Microsoft.VisualStudio.Workload.VCTools `
        --add Microsoft.VisualStudio.Component.VC.CLI.Support `
        --add Microsoft.VisualStudio.Component.VC.CMake.Project `
        --add Microsoft.VisualStudio.Component.Windows10SDK.19041 `
        --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
        || IF "%ERRORLEVEL%"=="3010" EXIT 0) `
    `
    # Cleanup
    && del /q vs_buildtools.exe

# Add MSBuild and Windows SDK tools to PATH
RUN setx /M PATH "%PATH%;C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\MSBuild\17.0\Bin"

RUN setx /M SDEROOT C:/windows-sde

CMD [ "cmd.exe" ]

FROM vs2022 AS ltsc2022_sde

ENV SDE_VERSION_TAG=sde-external-9.44.0-2024-08-22-win
ENV SDE_MIRROR_URL="https://downloadmirror.intel.com/831748/sde-external-9.44.0-2024-08-22-win.tar.xz"

RUN `
    # Install Windows Intel SDE.
    curl -SL --output temp.tar.xz %SDE_MIRROR_URL% `
    `
    && 7z x temp.tar.xz `
    && 7z x temp.tar `
    && ren %SDE_VERSION_TAG% windows-sde `
    && del temp.tar.xz `
    && del temp.tar
