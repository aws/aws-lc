# Declare a dummy target to build all fuzz tests.
add_custom_target(all_fuzz_tests)

macro(fuzzer name)
  add_executable(${name} ${name}.cc)
  target_compile_options(${name} PRIVATE "-Wno-missing-prototypes")
  target_link_libraries(${name} crypto ${ARGN})
  target_include_directories(${name} BEFORE PRIVATE ${AWSLC_BINARY_DIR}/symbol_prefix_include)
  if(LIBFUZZER_FROM_DEPS)
    set_target_properties(${name} PROPERTIES LINK_FLAGS "-fsanitize=fuzzer-no-link")
    target_link_libraries(${name} Fuzzer)
  else()
    set_target_properties(${name} PROPERTIES LINK_FLAGS "-fsanitize=fuzzer")
  endif()
  add_dependencies(all_fuzz_tests ${name})
endmacro()

fuzzer(arm_cpuinfo)
fuzzer(bn_div)
fuzzer(bn_mod_exp)
fuzzer(cert)
fuzzer(client ssl)
fuzzer(conf)
fuzzer(decode_client_hello_inner ssl)
fuzzer(der_roundtrip)
fuzzer(dtls_client ssl)
fuzzer(dtls_server ssl)
fuzzer(ocsp)
fuzzer(ocsp_http)
fuzzer(ocsp_parse_url)
fuzzer(pkcs12)
fuzzer(pkcs7_decrypt)
fuzzer(pkcs7_verify)
fuzzer(pkcs8)
fuzzer(pkcs8_v2)
fuzzer(privkey)
fuzzer(read_pem)
fuzzer(server ssl)
fuzzer(session ssl)
fuzzer(spki)
fuzzer(ssl_ctx_api ssl)
fuzzer(ssl_serialization ssl)
