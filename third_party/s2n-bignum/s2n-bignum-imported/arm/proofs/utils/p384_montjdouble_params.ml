(*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0 OR ISC OR MIT-0
 *)

(* The number of instructions of functions. *)

let count_insts (execth:thm*thm option array) =
  let length_th = fst execth in
  dest_small_numeral (snd (dest_eq (concl length_th))) / 4;;

(* ------------------------------------------------------------------------- *)
(* Building actions for proving correctness of optimization step 1 inlining. *)
(* The inlined code is simply the result of turning 'bl' to macro invocation *)
(* and removing the 'ret' instruction at the end of subroutine.              *)
(* The functions were inlined by hand, not using a script.                   *)
(* ------------------------------------------------------------------------- *)

(* count num insts by subtracting line numbers *)
let num_insns_weakadd = 1058 - 1031 and
    num_insns_cmsub = 1027 - 941 and
    num_insns_cmsub41 = 937 - 893 and
    num_insns_cmsub38 = 1136 - 1062;;
let code_blocks = [
  (* (action("equal"|"call <subroutine>"), # instructions if "equal") *)
  ("equal", Some 2);
  ("call montsqr_p384", None);
  ("call montsqr_p384", None);
  ("equal", Some num_insns_weakadd);
  ("call sub_p384", None);
  ("call montmul_p384", None);
  ("call add_p384", None);
  ("call montsqr_p384", None);
  ("call montmul_p384", None);
  ("call montsqr_p384", None);
  ("equal", Some num_insns_cmsub);
  ("call sub_p384", None);
  ("call montsqr_p384", None);
  ("call sub_p384", None);
  ("call montmul_p384", None);
  ("equal", Some num_insns_cmsub41);
  ("equal", Some num_insns_cmsub38);
];;

(* The number of instructions of functions. *)

let len_montsqr_p384, len_montmul_p384, len_sub_p384,
    len_add_p384 =
  count_insts BIGNUM_MONTSQR_P384_EXEC,
  (* add 2 because p384_montjdouble's montmul_p384 has two more sp updates *)
  2 + count_insts BIGNUM_MONTMUL_P384_EXEC,
  count_insts BIGNUM_SUB_P384_EXEC,
  count_insts BIGNUM_ADD_P384_EXEC;;

let actions1 = ref [];;
let last_n1 = ref 0 and last_n2 = ref 0;;
List.iter (fun code_block ->
  let n1,n2 = !last_n1,!last_n2 in
  match code_block with
  | "equal", Some nsteps ->
    actions1 := !actions1 @ [("equal",n1,n1+nsteps,n2,n2+nsteps)];
    last_n1 := nsteps + n1;
    last_n2 := nsteps + n2;
  | callfn, None ->
    (* nsteps_prologue = # fn arguments
       nsteps_fnbody = # insts of fn except last ret *)
    let nsteps_prologue, nsteps_fnbody = match callfn with
      | "call montsqr_p384" -> 2, len_montsqr_p384 - 1
      | "call montmul_p384" -> 3, len_montmul_p384 - 1
      | "call sub_p384" -> 3, len_sub_p384 - 1
      | "call add_p384" -> 3, len_add_p384 - 1
      | _ -> failwith callfn in begin
    actions1 := !actions1 @
      [(* For argument assignments, use 'replace' not 'equiv' because
          the symbolic expression of memory addresses shouldn't be abbreviated.
          Otherwise symbolic simulator will be confused. *)
       ("replace",n1,n1+nsteps_prologue,n2,n2+nsteps_prologue)];
    let n1 = n1+nsteps_prologue and n2 = n2+nsteps_prologue in begin
    actions1 := !actions1 @
      [(* bl *)
       ("delete", n1, n1+1, n2, n2);
       (* fn body *)
       ("equal",  n1+1, n1+1+nsteps_fnbody,
                  n2, n2+nsteps_fnbody);
       (* ret *)
       ("delete", n1+1+nsteps_fnbody, n1+1+nsteps_fnbody+1,
                  n2+nsteps_fnbody, n2+nsteps_fnbody)];
    last_n1 := n1+1+nsteps_fnbody+1;
    last_n2 := n2+nsteps_fnbody;
    end
    end)
  code_blocks;;


(* ------------------------------------------------------------------------- *)
(* Actions for proving correctness of step 2 memory optimizations.           *)
(* To get this, trim the callee-save register spills & ret from the assembly *)
(* source files after the first stage (inlining) and second stage (mem opt), *)
(* and run                                                                   *)
(* 'tools/gen-actions.py <trimmed first asm> <trimmed second asm>'.          *)
(* ------------------------------------------------------------------------- *)

let actions2 = [
        ("equal", 0, 3, 0, 3);
        ("replace", 3, 8, 3, 7);
        ("equal", 8, 13, 7, 12);
        ("replace", 13, 14, 12, 13);
        ("equal", 14, 15, 13, 14);
        ("replace", 15, 16, 14, 15);
        ("equal", 16, 17, 15, 16);
        ("replace", 17, 18, 16, 17);
        ("equal", 18, 310, 17, 309);
        ("replace", 310, 316, 309, 313);
        ("equal", 316, 321, 313, 318);
        ("replace", 321, 322, 318, 319);
        ("equal", 322, 323, 319, 320);
        ("replace", 323, 324, 320, 321);
        ("equal", 324, 325, 321, 322);
        ("replace", 325, 326, 322, 323);
        ("equal", 326, 434, 323, 431);
        ("replace", 434, 435, 431, 432);
        ("equal", 435, 438, 432, 435);
        ("replace", 438, 439, 435, 436);
        ("equal", 439, 441, 436, 438);
        ("replace", 441, 442, 438, 439);
        ("equal", 442, 488, 439, 485);
        ("replace", 488, 489, 485, 486);
        ("equal", 489, 494, 486, 491);
        ("replace", 494, 495, 491, 492);
        ("equal", 495, 497, 492, 494);
        ("replace", 497, 498, 494, 495);
        ("equal", 498, 612, 495, 609);
        ("replace", 612, 613, 609, 610);
        ("equal", 613, 615, 610, 612);
        ("replace", 615, 616, 612, 613);
        ("equal", 616, 617, 613, 614);
        ("replace", 617, 618, 614, 615);
        ("equal", 618, 645, 615, 642);
        ("delete", 645, 647, 642, 642);
        ("equal", 647, 648, 642, 643);
        ("replace", 648, 649, 643, 644);
        ("equal", 649, 652, 644, 647);
        ("replace", 652, 653, 647, 648);
        ("equal", 653, 656, 648, 651);
        ("replace", 656, 657, 651, 652);
        ("equal", 657, 663, 652, 658);
        ("replace", 663, 664, 658, 659);
        ("equal", 664, 665, 659, 660);
        ("replace", 665, 666, 660, 661);
        ("equal", 666, 672, 661, 667);
        ("replace", 672, 686, 667, 673);
        ("equal", 686, 691, 673, 678);
        ("replace", 691, 693, 678, 680);
        ("equal", 693, 694, 680, 681);
        ("replace", 694, 695, 681, 682);
        ("equal", 695, 705, 682, 692);
        ("replace", 705, 706, 692, 693);
        ("equal", 706, 772, 693, 759);
        ("replace", 772, 773, 759, 760);
        ("equal", 773, 775, 760, 762);
        ("replace", 775, 776, 762, 763);
        ("equal", 776, 824, 763, 811);
        ("replace", 824, 825, 811, 812);
        ("equal", 825, 827, 812, 814);
        ("replace", 827, 828, 814, 815);
        ("equal", 828, 838, 815, 825);
        ("replace", 838, 839, 825, 826);
        ("equal", 839, 907, 826, 894);
        ("replace", 907, 908, 894, 895);
        ("equal", 908, 911, 895, 898);
        ("replace", 911, 912, 898, 899);
        ("equal", 912, 915, 899, 902);
        ("replace", 915, 916, 902, 903);
        ("equal", 916, 921, 903, 908);
        ("replace", 921, 922, 908, 909);
        ("equal", 922, 925, 909, 912);
        ("replace", 925, 926, 912, 913);
        ("equal", 926, 930, 913, 917);
        ("replace", 930, 931, 917, 918);
        ("equal", 931, 987, 918, 974);
        ("replace", 987, 989, 974, 976);
        ("equal", 989, 995, 976, 982);
        ("replace", 995, 996, 982, 983);
        ("equal", 996, 1082, 983, 1069);
        ("replace", 1082, 1083, 1069, 1070);
        ("equal", 1083, 1085, 1070, 1072);
        ("replace", 1085, 1086, 1072, 1073);
        ("equal", 1086, 1087, 1073, 1074);
        ("replace", 1087, 1097, 1074, 1077);
        ("equal", 1097, 1099, 1077, 1079);
        ("replace", 1099, 1101, 1079, 1081);
        ("equal", 1101, 1103, 1081, 1083);
        ("replace", 1103, 1105, 1083, 1085);
        ("equal", 1105, 1130, 1085, 1110);
        ("replace", 1130, 1139, 1110, 1117);
        ("equal", 1139, 1144, 1117, 1122);
        ("replace", 1144, 1145, 1122, 1123);
        ("equal", 1145, 1146, 1123, 1124);
        ("replace", 1146, 1147, 1124, 1125);
        ("equal", 1147, 1148, 1125, 1126);
        ("replace", 1148, 1149, 1126, 1127);
        ("equal", 1149, 1257, 1127, 1235);
        ("replace", 1257, 1258, 1235, 1236);
        ("equal", 1258, 1261, 1236, 1239);
        ("replace", 1261, 1262, 1239, 1240);
        ("equal", 1262, 1264, 1240, 1242);
        ("replace", 1264, 1265, 1242, 1243);
        ("equal", 1265, 1311, 1243, 1289);
        ("replace", 1311, 1312, 1289, 1290);
        ("equal", 1312, 1317, 1290, 1295);
        ("replace", 1317, 1318, 1295, 1296);
        ("equal", 1318, 1320, 1296, 1298);
        ("replace", 1320, 1321, 1298, 1299);
        ("equal", 1321, 1435, 1299, 1413);
        ("replace", 1435, 1436, 1413, 1414);
        ("equal", 1436, 1438, 1414, 1416);
        ("replace", 1438, 1439, 1416, 1417);
        ("equal", 1439, 1440, 1417, 1418);
        ("replace", 1440, 1452, 1418, 1423);
        ("equal", 1452, 1457, 1423, 1428);
        ("replace", 1457, 1459, 1428, 1430);
        ("equal", 1459, 1460, 1430, 1431);
        ("replace", 1460, 1461, 1431, 1432);
        ("equal", 1461, 1471, 1432, 1442);
        ("replace", 1471, 1472, 1442, 1443);
        ("equal", 1472, 1538, 1443, 1509);
        ("replace", 1538, 1539, 1509, 1510);
        ("equal", 1539, 1541, 1510, 1512);
        ("replace", 1541, 1542, 1512, 1513);
        ("equal", 1542, 1586, 1513, 1557);
        ("replace", 1586, 1587, 1557, 1558);
        ("equal", 1587, 1588, 1558, 1559);
        ("replace", 1588, 1589, 1559, 1560);
        ("equal", 1589, 1590, 1560, 1561);
        ("delete", 1590, 1591, 1561, 1561);
        ("equal", 1591, 1593, 1561, 1563);
        ("replace", 1593, 1594, 1563, 1564);
        ("equal", 1594, 1604, 1564, 1574);
        ("replace", 1604, 1605, 1574, 1575);
        ("equal", 1605, 1673, 1575, 1643);
        ("delete", 1673, 1674, 1643, 1643);
        ("equal", 1674, 1677, 1643, 1646);
        ("replace", 1677, 1678, 1646, 1647);
        ("equal", 1678, 1681, 1647, 1650);
        ("replace", 1681, 1683, 1650, 1652);
        ("equal", 1683, 1684, 1652, 1653);
        ("replace", 1684, 1685, 1653, 1654);
        ("equal", 1685, 1686, 1654, 1655);
        ("replace", 1686, 1689, 1655, 1658);
        ("equal", 1689, 1691, 1658, 1660);
        ("delete", 1691, 1692, 1660, 1660);
        ("equal", 1692, 1696, 1660, 1664);
        ("replace", 1696, 1697, 1664, 1665);
        ("equal", 1697, 1753, 1665, 1721);
        ("replace", 1753, 1755, 1721, 1722);
        ("equal", 1755, 1761, 1722, 1728);
        ("replace", 1761, 1762, 1728, 1729);
        ("equal", 1762, 1765, 1729, 1732);
        ("replace", 1765, 1766, 1732, 1733);
        ("equal", 1766, 1767, 1733, 1734);
        ("replace", 1767, 1768, 1734, 1735);
        ("equal", 1768, 1783, 1735, 1750);
        ("replace", 1783, 1785, 1750, 1752);
        ("equal", 1785, 1848, 1752, 1815);
        ("replace", 1848, 1849, 1815, 1816);
        ("equal", 1849, 1851, 1816, 1818);
        ("replace", 1851, 1852, 1818, 1819);
        ("equal", 1852, 1853, 1819, 1820);
        ("replace", 1853, 1864, 1820, 1825);
        ("equal", 1864, 1869, 1825, 1830);
        ("replace", 1869, 1870, 1830, 1831);
        ("equal", 1870, 1871, 1831, 1832);
        ("replace", 1871, 1872, 1832, 1833);
        ("equal", 1872, 1873, 1833, 1834);
        ("replace", 1873, 1874, 1834, 1835);
        ("equal", 1874, 1978, 1835, 1939);
        ("replace", 1978, 1980, 1939, 1941);
        ("equal", 1980, 1982, 1941, 1943);
        ("replace", 1982, 1983, 1943, 1944);
        ("equal", 1983, 1986, 1944, 1947);
        ("delete", 1986, 1987, 1947, 1947);
        ("equal", 1987, 1989, 1947, 1949);
        ("replace", 1989, 1990, 1949, 1950);
        ("equal", 1990, 2036, 1950, 1996);
        ("delete", 2036, 2037, 1996, 1996);
        ("equal", 2037, 2042, 1996, 2001);
        ("replace", 2042, 2043, 2001, 2002);
        ("equal", 2043, 2045, 2002, 2004);
        ("replace", 2045, 2046, 2004, 2005);
        ("equal", 2046, 2058, 2005, 2017);
        ("replace", 2058, 2060, 2017, 2019);
        ("equal", 2060, 2155, 2019, 2114);
        ("replace", 2155, 2156, 2114, 2115);
        ("equal", 2156, 2157, 2115, 2116);
        ("replace", 2157, 2158, 2116, 2117);
        ("equal", 2158, 2160, 2117, 2119);
        ("delete", 2160, 2161, 2119, 2119);
        ("equal", 2161, 2163, 2119, 2121);
        ("replace", 2163, 2164, 2121, 2122);
        ("equal", 2164, 2165, 2122, 2123);
        ("replace", 2165, 2166, 2123, 2124);
        ("equal", 2166, 2252, 2124, 2210);
        ("delete", 2252, 2254, 2210, 2210);
        ("equal", 2254, 2255, 2210, 2211);
        ("delete", 2255, 2256, 2211, 2211);
        ("equal", 2256, 2257, 2211, 2212);
        ("replace", 2257, 2260, 2212, 2215);
        ("equal", 2260, 2263, 2215, 2218);
        ("replace", 2263, 2264, 2218, 2219);
        ("equal", 2264, 2279, 2219, 2234);
        ("replace", 2279, 2288, 2234, 2241);
        ("equal", 2288, 2293, 2241, 2246);
        ("replace", 2293, 2294, 2246, 2247);
        ("equal", 2294, 2295, 2247, 2248);
        ("replace", 2295, 2296, 2248, 2249);
        ("equal", 2296, 2297, 2249, 2250);
        ("replace", 2297, 2298, 2250, 2251);
        ("equal", 2298, 2402, 2251, 2355);
        ("replace", 2402, 2404, 2355, 2357);
        ("equal", 2404, 2406, 2357, 2359);
        ("replace", 2406, 2407, 2359, 2360);
        ("equal", 2407, 2410, 2360, 2363);
        ("delete", 2410, 2411, 2363, 2363);
        ("equal", 2411, 2413, 2363, 2365);
        ("replace", 2413, 2414, 2365, 2366);
        ("equal", 2414, 2460, 2366, 2412);
        ("delete", 2460, 2461, 2412, 2412);
        ("equal", 2461, 2466, 2412, 2417);
        ("replace", 2466, 2467, 2417, 2418);
        ("equal", 2467, 2469, 2418, 2420);
        ("replace", 2469, 2470, 2420, 2421);
        ("equal", 2470, 2482, 2421, 2433);
        ("replace", 2482, 2484, 2433, 2435);
        ("equal", 2484, 2584, 2435, 2535);
        ("replace", 2584, 2585, 2535, 2536);
        ("equal", 2585, 2587, 2536, 2538);
        ("replace", 2587, 2588, 2538, 2539);
        ("equal", 2588, 2589, 2539, 2540);
        ("replace", 2589, 2595, 2540, 2543);
        ("equal", 2595, 2597, 2543, 2545);
        ("replace", 2597, 2599, 2545, 2547);
        ("equal", 2599, 2601, 2547, 2549);
        ("replace", 2601, 2603, 2549, 2551);
        ("equal", 2603, 2617, 2551, 2565);
        ("replace", 2617, 2631, 2565, 2572);
        ("equal", 2631, 2636, 2572, 2577);
        ("replace", 2636, 2638, 2577, 2579);
        ("equal", 2638, 2639, 2579, 2580);
        ("replace", 2639, 2640, 2580, 2581);
        ("equal", 2640, 2650, 2581, 2591);
        ("replace", 2650, 2651, 2591, 2592);
        ("equal", 2651, 2717, 2592, 2658);
        ("replace", 2717, 2718, 2658, 2659);
        ("equal", 2718, 2720, 2659, 2661);
        ("replace", 2720, 2721, 2661, 2662);
        ("equal", 2721, 2765, 2662, 2706);
        ("replace", 2765, 2766, 2706, 2707);
        ("equal", 2766, 2767, 2707, 2708);
        ("replace", 2767, 2768, 2708, 2709);
        ("equal", 2768, 2769, 2709, 2710);
        ("delete", 2769, 2770, 2710, 2710);
        ("equal", 2770, 2772, 2710, 2712);
        ("replace", 2772, 2773, 2712, 2713);
        ("equal", 2773, 2783, 2713, 2723);
        ("replace", 2783, 2784, 2723, 2724);
        ("equal", 2784, 2852, 2724, 2792);
        ("delete", 2852, 2853, 2792, 2792);
        ("equal", 2853, 2856, 2792, 2795);
        ("replace", 2856, 2857, 2795, 2796);
        ("equal", 2857, 2860, 2796, 2799);
        ("replace", 2860, 2862, 2799, 2801);
        ("equal", 2862, 2863, 2801, 2802);
        ("replace", 2863, 2864, 2802, 2803);
        ("equal", 2864, 2865, 2803, 2804);
        ("replace", 2865, 2868, 2804, 2807);
        ("equal", 2868, 2870, 2807, 2809);
        ("delete", 2870, 2871, 2809, 2809);
        ("equal", 2871, 2875, 2809, 2813);
        ("replace", 2875, 2876, 2813, 2814);
        ("equal", 2876, 2932, 2814, 2870);
        ("replace", 2932, 2934, 2870, 2871);
        ("equal", 2934, 2940, 2871, 2877);
        ("replace", 2940, 2941, 2877, 2878);
        ("equal", 2941, 2944, 2878, 2881);
        ("replace", 2944, 2945, 2881, 2882);
        ("equal", 2945, 2946, 2882, 2883);
        ("replace", 2946, 2947, 2883, 2884);
        ("equal", 2947, 2962, 2884, 2899);
        ("replace", 2962, 2964, 2899, 2901);
        ("equal", 2964, 3027, 2901, 2964);
        ("replace", 3027, 3028, 2964, 2965);
        ("equal", 3028, 3029, 2965, 2966);
        ("replace", 3029, 3037, 2966, 2969);
        ("equal", 3037, 3104, 2969, 3036);
        ("delete", 3104, 3105, 3036, 3036);
        ("equal", 3105, 3121, 3036, 3052);
        ("replace", 3121, 3123, 3052, 3054);
        ("equal", 3123, 3155, 3054, 3086);
];;

(* ------------------------------------------------------------------------- *)
(* Full actions.                                                             *)
(* ------------------------------------------------------------------------- *)

let actions_merged = merge_actions (!actions1,actions2);;

(* ------------------------------------------------------------------------- *)
(* Define arrays describing which registers are containing dead values at    *)
(* each program location.                                                    *)
(*                                                                           *)
(* First, let's build dead value info of the original program. These don't   *)
(* consider callee-save register spills and ret.                             *)
(* ------------------------------------------------------------------------- *)

let local_montmul_p384_dead_value_info = [|
  []; (* 1: ldr q3, [x1] *)
  []; (* 2: ldr q25, [x2] *)
  []; (* 3: ldp x13, x23, [x2] *)
  []; (* 4: ldp x3, x21, [x1] *)
  []; (* 5: rev64 v23.4S, v25.4S *)
  [`Q25`]; (* 6: uzp1 v17.4S, v25.4S, v3.4S *)
  []; (* 7: umulh x15, x3, x13 *)
  [`Q23`]; (* 8: mul v6.4S, v23.4S, v3.4S *)
  []; (* 9: uzp1 v3.4S, v3.4S, v3.4S *)
  []; (* 10: ldr q27, [x2, #32] *)
  []; (* 11: ldp x8, x24, [x1, #16] *)
  []; (* 12: subs x6, x3, x21 *)
  []; (* 13: ldr q0, [x1, #32] *)
  []; (* 14: movi v23.2D, #0x00000000ffffffff *)
  []; (* 15: csetm x10, cc *)
  []; (* 16: umulh x19, x21, x23 *)
  []; (* 17: rev64 v4.4S, v27.4S *)
  []; (* 18: uzp2 v25.4S, v27.4S, v27.4S *)
  [`CF`; `NF`; `ZF`; `VF`; `X6`]; (* 19: cneg x4, x6, cc *)
  []; (* 20: subs x7, x23, x13 *)
  []; (* 21: xtn v22.2S, v0.2D *)
  [`Q27`]; (* 22: xtn v24.2S, v27.2D *)
  [`X7`]; (* 23: cneg x20, x7, cc *)
  []; (* 24: ldp x6, x14, [x2, #16] *)
  [`Q4`]; (* 25: mul v27.4S, v4.4S, v0.4S *)
  [`Q6`]; (* 26: uaddlp v20.2D, v6.4S *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 27: cinv x5, x10, cc *)
  []; (* 28: mul x16, x4, x20 *)
  [`Q0`]; (* 29: uzp2 v6.4S, v0.4S, v0.4S *)
  []; (* 30: umull v21.2D, v22.2S, v25.2S *)
  [`Q20`]; (* 31: shl v0.2D, v20.2D, #32 *)
  [`Q17`; `Q3`]; (* 32: umlal v0.2D, v3.2S, v17.2S *)
  []; (* 33: mul x22, x8, x6 *)
  [`Q25`]; (* 34: umull v1.2D, v6.2S, v25.2S *)
  []; (* 35: subs x12, x3, x8 *)
  []; (* 36: umull v20.2D, v22.2S, v24.2S *)
  [`X12`]; (* 37: cneg x17, x12, cc *)
  []; (* 38: umulh x9, x8, x6 *)
  []; (* 39: mov x12, v0.d[1] *)
  [`X16`]; (* 40: eor x11, x16, x5 *)
  [`Q0`]; (* 41: mov x7, v0.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 42: csetm x10, cc *)
  [`Q20`]; (* 43: usra v21.2D, v20.2D, #32 *)
  [`X12`]; (* 44: adds x15, x15, x12 *)
  [`X19`; `X22`]; (* 45: adcs x12, x19, x22 *)
  [`X4`]; (* 46: umulh x20, x4, x20 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 47: adc x19, x9, xzr *)
  []; (* 48: usra v1.2D, v21.2D, #32 *)
  []; (* 49: adds x22, x15, x7 *)
  [`Q21`; `Q23`]; (* 50: and v26.16B, v21.16B, v23.16B *)
  []; (* 51: adcs x16, x12, x15 *)
  [`Q27`]; (* 52: uaddlp v25.2D, v27.4S *)
  []; (* 53: adcs x9, x19, x12 *)
  [`Q6`]; (* 54: umlal v26.2D, v6.2S, v24.2S *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 55: adc x4, x19, xzr *)
  []; (* 56: adds x16, x16, x7 *)
  [`Q25`]; (* 57: shl v27.2D, v25.2D, #32 *)
  [`X15`]; (* 58: adcs x9, x9, x15 *)
  [`X12`]; (* 59: adcs x4, x4, x12 *)
  [`X20`]; (* 60: eor x12, x20, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`]; (* 61: adc x15, x19, xzr *)
  []; (* 62: subs x20, x6, x13 *)
  []; (* 63: cneg x20, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 64: cinv x10, x10, cc *)
  []; (* 65: cmn x5, #0x1 *)
  []; (* 66: mul x19, x17, x20 *)
  [`X22`]; (* 67: adcs x11, x22, x11 *)
  [`X16`]; (* 68: adcs x12, x16, x12 *)
  []; (* 69: adcs x9, x9, x5 *)
  [`X20`]; (* 70: umulh x17, x17, x20 *)
  [`X4`]; (* 71: adcs x22, x4, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 72: adc x5, x15, x5 *)
  []; (* 73: subs x16, x21, x8 *)
  [`X16`]; (* 74: cneg x20, x16, cc *)
  []; (* 75: eor x19, x19, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 76: csetm x4, cc *)
  []; (* 77: subs x16, x6, x23 *)
  []; (* 78: cneg x16, x16, cc *)
  [`Q22`; `Q24`]; (* 79: umlal v27.2D, v22.2S, v24.2S *)
  []; (* 80: mul x15, x20, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 81: cinv x4, x4, cc *)
  []; (* 82: cmn x10, #0x1 *)
  [`Q26`]; (* 83: usra v1.2D, v26.2D, #32 *)
  [`X12`]; (* 84: adcs x19, x12, x19 *)
  []; (* 85: eor x17, x17, x10 *)
  [`X17`]; (* 86: adcs x9, x9, x17 *)
  []; (* 87: adcs x22, x22, x10 *)
  []; (* 88: lsl x12, x7, #32 *)
  [`X16`]; (* 89: umulh x20, x20, x16 *)
  [`X15`]; (* 90: eor x16, x15, x4 *)
  []; (* 91: ldp x15, x17, [x2, #32] *)
  [`X12`; `X7`]; (* 92: add x2, x12, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`; `X5`]; (* 93: adc x7, x5, x10 *)
  []; (* 94: ldp x5, x10, [x1, #32] *)
  []; (* 95: lsr x1, x2, #32 *)
  [`X20`]; (* 96: eor x12, x20, x4 *)
  []; (* 97: subs x1, x1, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 98: sbc x20, x2, xzr *)
  []; (* 99: cmn x4, #0x1 *)
  [`X16`]; (* 100: adcs x9, x9, x16 *)
  []; (* 101: extr x1, x20, x1, #32 *)
  []; (* 102: lsr x20, x20, #32 *)
  [`X12`]; (* 103: adcs x22, x22, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X7`]; (* 104: adc x16, x7, x4 *)
  [`X20`]; (* 105: adds x12, x20, x2 *)
  []; (* 106: umulh x7, x24, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 107: adc x4, xzr, xzr *)
  [`X11`]; (* 108: subs x1, x11, x1 *)
  [`X12`; `X19`]; (* 109: sbcs x20, x19, x12 *)
  [`X4`; `X9`]; (* 110: sbcs x12, x9, x4 *)
  []; (* 111: lsl x9, x1, #32 *)
  [`X9`]; (* 112: add x1, x9, x1 *)
  [`X22`]; (* 113: sbcs x9, x22, xzr *)
  []; (* 114: mul x22, x24, x14 *)
  []; (* 115: sbcs x16, x16, xzr *)
  []; (* 116: lsr x4, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 117: sbc x19, x2, xzr *)
  []; (* 118: subs x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 119: sbc x11, x1, xzr *)
  [`X4`]; (* 120: extr x2, x11, x4, #32 *)
  [`X11`]; (* 121: lsr x4, x11, #32 *)
  []; (* 122: adds x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 123: adc x11, xzr, xzr *)
  [`X20`]; (* 124: subs x2, x20, x2 *)
  [`X12`]; (* 125: sbcs x4, x12, x4 *)
  [`X11`; `X9`]; (* 126: sbcs x20, x9, x11 *)
  []; (* 127: lsl x12, x2, #32 *)
  [`X12`]; (* 128: add x2, x12, x2 *)
  [`X16`]; (* 129: sbcs x9, x16, xzr *)
  []; (* 130: lsr x11, x2, #32 *)
  []; (* 131: sbcs x19, x19, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 132: sbc x1, x1, xzr *)
  [`X11`]; (* 133: subs x16, x11, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 134: sbc x12, x2, xzr *)
  []; (* 135: extr x16, x12, x16, #32 *)
  []; (* 136: lsr x12, x12, #32 *)
  [`X12`]; (* 137: adds x11, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 138: adc x12, xzr, xzr *)
  [`X4`]; (* 139: subs x16, x4, x16 *)
  []; (* 140: mov x4, v27.d[0] *)
  [`X20`]; (* 141: sbcs x11, x20, x11 *)
  [`X12`; `X9`]; (* 142: sbcs x20, x9, x12 *)
  [`X11`; `X16`]; (* 143: stp x16, x11, [x0] *)
  [`X19`]; (* 144: sbcs x11, x19, xzr *)
  [`X1`]; (* 145: sbcs x9, x1, xzr *)
  [`X11`; `X20`]; (* 146: stp x20, x11, [x0, #16] *)
  []; (* 147: mov x1, v1.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 148: sbc x20, x2, xzr *)
  []; (* 149: subs x12, x24, x5 *)
  [`Q27`]; (* 150: mov x11, v27.d[1] *)
  [`X12`]; (* 151: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 152: csetm x2, cc *)
  []; (* 153: subs x19, x15, x14 *)
  [`Q1`]; (* 154: mov x12, v1.d[1] *)
  []; (* 155: cinv x2, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 156: cneg x19, x19, cc *)
  [`X20`; `X9`]; (* 157: stp x9, x20, [x0, #32] *)
  []; (* 158: mul x9, x16, x19 *)
  [`X7`]; (* 159: adds x4, x7, x4 *)
  [`X1`]; (* 160: adcs x11, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 161: adc x1, x12, xzr *)
  []; (* 162: adds x20, x4, x22 *)
  [`X16`]; (* 163: umulh x19, x16, x19 *)
  []; (* 164: adcs x7, x11, x4 *)
  [`X9`]; (* 165: eor x16, x9, x2 *)
  []; (* 166: adcs x9, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 167: adc x12, x1, xzr *)
  []; (* 168: adds x7, x7, x22 *)
  [`X9`]; (* 169: adcs x4, x9, x4 *)
  [`X11`; `X12`]; (* 170: adcs x9, x12, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 171: adc x12, x1, xzr *)
  []; (* 172: cmn x2, #0x1 *)
  [`X19`]; (* 173: eor x1, x19, x2 *)
  [`X16`; `X20`]; (* 174: adcs x11, x20, x16 *)
  [`X1`; `X7`]; (* 175: adcs x19, x7, x1 *)
  [`X4`]; (* 176: adcs x1, x4, x2 *)
  [`X9`]; (* 177: adcs x20, x9, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 178: adc x2, x12, x2 *)
  []; (* 179: subs x12, x24, x10 *)
  [`X12`]; (* 180: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 181: csetm x12, cc *)
  []; (* 182: subs x9, x17, x14 *)
  []; (* 183: cinv x12, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 184: cneg x9, x9, cc *)
  [`X24`]; (* 185: subs x3, x24, x3 *)
  []; (* 186: sbcs x21, x5, x21 *)
  []; (* 187: mul x24, x16, x9 *)
  [`X8`]; (* 188: sbcs x4, x10, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 189: ngc x8, xzr *)
  [`X5`]; (* 190: subs x10, x5, x10 *)
  [`X24`]; (* 191: eor x5, x24, x12 *)
  []; (* 192: csetm x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 193: cneg x24, x10, cc *)
  []; (* 194: subs x10, x17, x15 *)
  []; (* 195: cinv x7, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 196: cneg x10, x10, cc *)
  [`X13`]; (* 197: subs x14, x13, x14 *)
  [`X23`]; (* 198: sbcs x15, x23, x15 *)
  [`X21`]; (* 199: eor x13, x21, x8 *)
  []; (* 200: mul x23, x24, x10 *)
  [`X6`]; (* 201: sbcs x17, x6, x17 *)
  [`X3`]; (* 202: eor x6, x3, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 203: ngc x21, xzr *)
  [`X16`]; (* 204: umulh x9, x16, x9 *)
  []; (* 205: cmn x8, #0x1 *)
  [`X23`]; (* 206: eor x3, x23, x7 *)
  [`X6`]; (* 207: adcs x23, x6, xzr *)
  []; (* 208: adcs x13, x13, xzr *)
  [`X4`]; (* 209: eor x16, x4, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 210: adc x16, x16, xzr *)
  [`X17`]; (* 211: eor x4, x17, x21 *)
  [`X10`; `X24`]; (* 212: umulh x17, x24, x10 *)
  []; (* 213: cmn x21, #0x1 *)
  [`X14`]; (* 214: eor x24, x14, x21 *)
  [`X15`]; (* 215: eor x6, x15, x21 *)
  [`X24`]; (* 216: adcs x15, x24, xzr *)
  [`X6`]; (* 217: adcs x14, x6, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 218: adc x6, x4, xzr *)
  []; (* 219: cmn x12, #0x1 *)
  [`X9`]; (* 220: eor x4, x9, x12 *)
  [`X5`]; (* 221: adcs x19, x19, x5 *)
  []; (* 222: umulh x5, x23, x15 *)
  [`X4`]; (* 223: adcs x1, x1, x4 *)
  [`X20`]; (* 224: adcs x10, x20, x12 *)
  [`X17`]; (* 225: eor x4, x17, x7 *)
  []; (* 226: ldp x20, x9, [x0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 227: adc x2, x2, x12 *)
  []; (* 228: cmn x7, #0x1 *)
  [`X1`; `X3`]; (* 229: adcs x12, x1, x3 *)
  []; (* 230: ldp x17, x24, [x0, #16] *)
  []; (* 231: mul x1, x16, x6 *)
  [`X10`; `X4`]; (* 232: adcs x3, x10, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 233: adc x2, x2, x7 *)
  []; (* 234: ldp x7, x4, [x0, #32] *)
  [`X22`]; (* 235: adds x20, x22, x20 *)
  []; (* 236: mul x10, x13, x14 *)
  [`X9`]; (* 237: adcs x11, x11, x9 *)
  [`X21`; `X8`]; (* 238: eor x9, x8, x21 *)
  [`X17`; `X19`]; (* 239: adcs x21, x19, x17 *)
  [`X11`; `X20`]; (* 240: stp x20, x11, [x0] *)
  [`X24`]; (* 241: adcs x12, x12, x24 *)
  []; (* 242: mul x8, x23, x15 *)
  [`X7`]; (* 243: adcs x3, x3, x7 *)
  [`X12`; `X21`]; (* 244: stp x21, x12, [x0, #16] *)
  [`X2`; `X4`]; (* 245: adcs x12, x2, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 246: adc x19, xzr, xzr *)
  []; (* 247: subs x21, x23, x16 *)
  []; (* 248: umulh x2, x16, x6 *)
  [`X12`; `X3`]; (* 249: stp x3, x12, [x0, #32] *)
  [`X21`]; (* 250: cneg x3, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 251: csetm x24, cc *)
  []; (* 252: umulh x11, x13, x14 *)
  [`X16`]; (* 253: subs x21, x13, x16 *)
  []; (* 254: eor x7, x8, x9 *)
  [`X21`]; (* 255: cneg x17, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 256: csetm x16, cc *)
  []; (* 257: subs x21, x6, x15 *)
  [`X21`]; (* 258: cneg x22, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`]; (* 259: cinv x21, x24, cc *)
  [`X13`; `X23`]; (* 260: subs x20, x23, x13 *)
  []; (* 261: umulh x12, x3, x22 *)
  [`X20`]; (* 262: cneg x23, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 263: csetm x24, cc *)
  [`X15`]; (* 264: subs x20, x14, x15 *)
  []; (* 265: cinv x24, x24, cc *)
  [`X3`]; (* 266: mul x22, x3, x22 *)
  [`CF`; `NF`; `ZF`; `VF`; `X20`]; (* 267: cneg x3, x20, cc *)
  [`X14`; `X6`]; (* 268: subs x13, x6, x14 *)
  [`X13`]; (* 269: cneg x20, x13, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 270: cinv x15, x16, cc *)
  [`X10`; `X5`]; (* 271: adds x13, x5, x10 *)
  []; (* 272: mul x4, x23, x3 *)
  [`X1`]; (* 273: adcs x11, x11, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 274: adc x14, x2, xzr *)
  []; (* 275: adds x5, x13, x8 *)
  []; (* 276: adcs x16, x11, x13 *)
  [`X3`]; (* 277: umulh x23, x23, x3 *)
  []; (* 278: adcs x3, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 279: adc x1, x14, xzr *)
  [`X16`; `X8`]; (* 280: adds x10, x16, x8 *)
  [`X13`; `X3`]; (* 281: adcs x6, x3, x13 *)
  [`X1`; `X11`]; (* 282: adcs x8, x1, x11 *)
  []; (* 283: umulh x13, x17, x20 *)
  [`X4`]; (* 284: eor x1, x4, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 285: adc x4, x14, xzr *)
  []; (* 286: cmn x24, #0x1 *)
  [`X5`]; (* 287: adcs x1, x5, x1 *)
  [`X23`]; (* 288: eor x16, x23, x24 *)
  [`X1`]; (* 289: eor x11, x1, x9 *)
  [`X10`; `X16`]; (* 290: adcs x23, x10, x16 *)
  [`X22`]; (* 291: eor x2, x22, x21 *)
  [`X6`]; (* 292: adcs x3, x6, x24 *)
  [`X17`; `X20`]; (* 293: mul x14, x17, x20 *)
  [`X13`]; (* 294: eor x17, x13, x15 *)
  [`X8`]; (* 295: adcs x13, x8, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`; `X4`]; (* 296: adc x8, x4, x24 *)
  []; (* 297: cmn x21, #0x1 *)
  [`X2`; `X23`]; (* 298: adcs x6, x23, x2 *)
  []; (* 299: mov x16, #0xfffffffffffffffe *)
  [`X12`]; (* 300: eor x20, x12, x21 *)
  [`X3`]; (* 301: adcs x20, x3, x20 *)
  [`X14`]; (* 302: eor x23, x14, x15 *)
  [`X13`]; (* 303: adcs x2, x13, x21 *)
  [`CF`; `NF`; `ZF`; `VF`; `X21`]; (* 304: adc x8, x8, x21 *)
  []; (* 305: cmn x15, #0x1 *)
  []; (* 306: ldp x5, x4, [x0] *)
  []; (* 307: ldp x21, x12, [x0, #16] *)
  [`X20`; `X23`]; (* 308: adcs x22, x20, x23 *)
  [`X22`]; (* 309: eor x23, x22, x9 *)
  [`X2`]; (* 310: adcs x17, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X8`]; (* 311: adc x22, x8, x15 *)
  []; (* 312: cmn x9, #0x1 *)
  [`X7`]; (* 313: adcs x15, x7, x5 *)
  []; (* 314: ldp x10, x14, [x0, #32] *)
  [`X6`]; (* 315: eor x1, x6, x9 *)
  []; (* 316: lsl x2, x15, #32 *)
  [`X11`]; (* 317: adcs x8, x11, x4 *)
  [`X1`]; (* 318: adcs x13, x1, x21 *)
  [`X22`]; (* 319: eor x1, x22, x9 *)
  [`X23`]; (* 320: adcs x24, x23, x12 *)
  [`X17`]; (* 321: eor x11, x17, x9 *)
  [`X11`]; (* 322: adcs x23, x11, x10 *)
  [`X1`]; (* 323: adcs x7, x1, x14 *)
  []; (* 324: adcs x17, x9, x19 *)
  []; (* 325: adcs x20, x9, xzr *)
  [`X15`; `X2`]; (* 326: add x1, x2, x15 *)
  []; (* 327: lsr x3, x1, #32 *)
  []; (* 328: adcs x11, x9, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 329: adc x9, x9, xzr *)
  []; (* 330: subs x3, x3, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 331: sbc x6, x1, xzr *)
  [`X5`]; (* 332: adds x24, x24, x5 *)
  [`X23`]; (* 333: adcs x4, x23, x4 *)
  []; (* 334: extr x3, x6, x3, #32 *)
  []; (* 335: lsr x6, x6, #32 *)
  [`X7`]; (* 336: adcs x21, x7, x21 *)
  [`X12`; `X17`]; (* 337: adcs x15, x17, x12 *)
  [`X10`; `X20`]; (* 338: adcs x7, x20, x10 *)
  [`X11`; `X14`]; (* 339: adcs x20, x11, x14 *)
  []; (* 340: mov x14, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`; `X9`]; (* 341: adc x22, x9, x19 *)
  [`X6`]; (* 342: adds x12, x6, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 343: adc x10, xzr, xzr *)
  [`X8`]; (* 344: subs x3, x8, x3 *)
  [`X13`]; (* 345: sbcs x12, x13, x12 *)
  []; (* 346: lsl x9, x3, #32 *)
  [`X9`]; (* 347: add x3, x9, x3 *)
  [`X24`]; (* 348: sbcs x10, x24, x10 *)
  [`X4`]; (* 349: sbcs x24, x4, xzr *)
  []; (* 350: lsr x9, x3, #32 *)
  []; (* 351: sbcs x21, x21, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 352: sbc x1, x1, xzr *)
  []; (* 353: subs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 354: sbc x13, x3, xzr *)
  []; (* 355: extr x9, x13, x9, #32 *)
  []; (* 356: lsr x13, x13, #32 *)
  []; (* 357: adds x13, x13, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 358: adc x6, xzr, xzr *)
  [`X9`]; (* 359: subs x12, x12, x9 *)
  [`X10`; `X13`]; (* 360: sbcs x17, x10, x13 *)
  []; (* 361: lsl x2, x12, #32 *)
  [`X24`; `X6`]; (* 362: sbcs x10, x24, x6 *)
  [`X12`; `X2`]; (* 363: add x9, x2, x12 *)
  [`X21`]; (* 364: sbcs x6, x21, xzr *)
  []; (* 365: lsr x5, x9, #32 *)
  [`X1`]; (* 366: sbcs x21, x1, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 367: sbc x13, x3, xzr *)
  [`X5`]; (* 368: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 369: sbc x19, x9, xzr *)
  []; (* 370: lsr x12, x19, #32 *)
  [`X19`; `X8`]; (* 371: extr x3, x19, x8, #32 *)
  [`X12`]; (* 372: adds x8, x12, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 373: adc x1, xzr, xzr *)
  [`X17`; `X3`]; (* 374: subs x2, x17, x3 *)
  [`X10`; `X8`]; (* 375: sbcs x12, x10, x8 *)
  [`X1`; `X6`]; (* 376: sbcs x5, x6, x1 *)
  [`X21`]; (* 377: sbcs x3, x21, xzr *)
  [`X13`]; (* 378: sbcs x19, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 379: sbc x24, x9, xzr *)
  [`X15`; `X3`]; (* 380: adds x23, x15, x3 *)
  [`X19`; `X7`]; (* 381: adcs x8, x7, x19 *)
  [`X20`; `X24`]; (* 382: adcs x11, x20, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X22`]; (* 383: adc x9, x22, xzr *)
  [`X9`]; (* 384: add x24, x9, #0x1 *)
  []; (* 385: lsl x7, x24, #32 *)
  []; (* 386: subs x21, x24, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 387: sbc x10, x7, xzr *)
  [`X2`; `X21`]; (* 388: adds x6, x2, x21 *)
  [`X10`; `X12`]; (* 389: adcs x7, x12, x10 *)
  [`X5`]; (* 390: adcs x24, x5, x24 *)
  [`X23`]; (* 391: adcs x13, x23, xzr *)
  []; (* 392: adcs x8, x8, xzr *)
  [`X11`]; (* 393: adcs x15, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 394: csetm x23, cc *)
  [`X16`]; (* 395: and x11, x16, x23 *)
  [`X14`]; (* 396: and x20, x14, x23 *)
  [`X6`]; (* 397: adds x22, x6, x20 *)
  [`X20`]; (* 398: eor x3, x20, x23 *)
  [`X3`; `X7`]; (* 399: adcs x5, x7, x3 *)
  [`X11`; `X24`]; (* 400: adcs x14, x24, x11 *)
  [`X22`; `X5`]; (* 401: stp x22, x5, [x0] *)
  [`X13`]; (* 402: adcs x5, x13, x23 *)
  [`X8`]; (* 403: adcs x21, x8, x23 *)
  [`X14`; `X5`]; (* 404: stp x14, x5, [x0, #16] *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X23`]; (* 405: adc x12, x15, x23 *)
  [`X12`; `X21`]; (* 406: stp x21, x12, [x0, #32] *)
|];;

assert (Array.length local_montmul_p384_dead_value_info =
        len_montmul_p384 - 9 (* 8 for stack save/restore, 1 for ret *));;

let local_montsqr_p384_dead_value_info = [|
  []; (* 1: ldr q1, [x1] *)
  []; (* 2: ldp x9, x2, [x1] *)
  []; (* 3: ldr q0, [x1] *)
  []; (* 4: ldp x4, x6, [x1, #16] *)
  []; (* 5: rev64 v21.4S, v1.4S *)
  []; (* 6: uzp2 v28.4S, v1.4S, v1.4S *)
  []; (* 7: umulh x7, x9, x2 *)
  [`Q1`]; (* 8: xtn v17.2S, v1.2D *)
  [`Q21`]; (* 9: mul v27.4S, v21.4S, v0.4S *)
  []; (* 10: ldr q20, [x1, #32] *)
  []; (* 11: xtn v30.2S, v0.2D *)
  []; (* 12: ldr q1, [x1, #32] *)
  [`Q0`]; (* 13: uzp2 v31.4S, v0.4S, v0.4S *)
  []; (* 14: ldp x5, x10, [x1, #32] *)
  []; (* 15: umulh x8, x9, x4 *)
  [`Q27`]; (* 16: uaddlp v3.2D, v27.4S *)
  []; (* 17: umull v16.2D, v30.2S, v17.2S *)
  []; (* 18: mul x16, x9, x4 *)
  []; (* 19: umull v27.2D, v30.2S, v28.2S *)
  []; (* 20: shrn v0.2S, v20.2D, #32 *)
  [`Q20`]; (* 21: xtn v7.2S, v20.2D *)
  [`Q3`]; (* 22: shl v20.2D, v3.2D, #32 *)
  [`Q28`]; (* 23: umull v3.2D, v31.2S, v28.2S *)
  []; (* 24: mul x3, x2, x4 *)
  [`Q30`]; (* 25: umlal v20.2D, v30.2S, v17.2S *)
  [`Q0`]; (* 26: umull v22.2D, v7.2S, v0.2S *)
  [`Q16`]; (* 27: usra v27.2D, v16.2D, #32 *)
  []; (* 28: umulh x11, x2, x4 *)
  []; (* 29: movi v21.2D, #0x00000000ffffffff *)
  []; (* 30: uzp2 v28.4S, v1.4S, v1.4S *)
  [`X16`; `X7`]; (* 31: adds x15, x16, x7 *)
  [`Q21`]; (* 32: and v5.16B, v27.16B, v21.16B *)
  [`X8`]; (* 33: adcs x3, x3, x8 *)
  [`Q27`]; (* 34: usra v3.2D, v27.2D, #32 *)
  []; (* 35: dup v29.2D, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 36: adcs x16, x11, xzr *)
  []; (* 37: mov x14, v20.d[0] *)
  [`Q17`; `Q31`]; (* 38: umlal v5.2D, v31.2S, v17.2S *)
  []; (* 39: mul x8, x9, x2 *)
  [`Q20`]; (* 40: mov x7, v20.d[1] *)
  [`Q22`]; (* 41: shl v19.2D, v22.2D, #33 *)
  []; (* 42: xtn v25.2S, v29.2D *)
  []; (* 43: rev64 v31.4S, v1.4S *)
  []; (* 44: lsl x13, x14, #32 *)
  []; (* 45: uzp2 v6.4S, v29.4S, v29.4S *)
  [`Q7`]; (* 46: umlal v19.2D, v7.2S, v7.2S *)
  [`Q5`]; (* 47: usra v3.2D, v5.2D, #32 *)
  [`X8`]; (* 48: adds x1, x8, x8 *)
  []; (* 49: umulh x8, x4, x4 *)
  [`X13`; `X14`]; (* 50: add x12, x13, x14 *)
  [`Q29`; `Q31`]; (* 51: mul v17.4S, v31.4S, v29.4S *)
  [`Q1`]; (* 52: xtn v4.2S, v1.2D *)
  [`X15`]; (* 53: adcs x14, x15, x15 *)
  []; (* 54: lsr x13, x12, #32 *)
  [`X3`]; (* 55: adcs x15, x3, x3 *)
  []; (* 56: umull v31.2D, v25.2S, v28.2S *)
  [`X16`]; (* 57: adcs x11, x16, x16 *)
  []; (* 58: umull v21.2D, v25.2S, v4.2S *)
  []; (* 59: mov x17, v3.d[0] *)
  [`Q28`]; (* 60: umull v18.2D, v6.2S, v28.2S *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 61: adc x16, x8, xzr *)
  [`Q17`]; (* 62: uaddlp v16.2D, v17.4S *)
  []; (* 63: movi v1.2D, #0x00000000ffffffff *)
  []; (* 64: subs x13, x13, x12 *)
  [`Q21`]; (* 65: usra v31.2D, v21.2D, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 66: sbc x8, x12, xzr *)
  [`X1`]; (* 67: adds x17, x17, x1 *)
  []; (* 68: mul x1, x4, x4 *)
  [`Q16`]; (* 69: shl v28.2D, v16.2D, #32 *)
  [`Q3`]; (* 70: mov x3, v3.d[1] *)
  [`X7`]; (* 71: adcs x14, x7, x14 *)
  [`X13`]; (* 72: extr x7, x8, x13, #32 *)
  [`X15`; `X3`]; (* 73: adcs x13, x3, x15 *)
  [`Q1`]; (* 74: and v3.16B, v31.16B, v1.16B *)
  [`X1`]; (* 75: adcs x11, x1, x11 *)
  [`X8`]; (* 76: lsr x1, x8, #32 *)
  [`Q6`]; (* 77: umlal v3.2D, v6.2S, v4.2S *)
  [`Q31`]; (* 78: usra v18.2D, v31.2D, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 79: adc x3, x16, xzr *)
  []; (* 80: adds x1, x1, x12 *)
  [`Q25`; `Q4`]; (* 81: umlal v28.2D, v25.2S, v4.2S *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 82: adc x16, xzr, xzr *)
  [`X17`; `X7`]; (* 83: subs x15, x17, x7 *)
  [`X1`; `X14`]; (* 84: sbcs x7, x14, x1 *)
  []; (* 85: lsl x1, x15, #32 *)
  [`X13`]; (* 86: sbcs x16, x13, x16 *)
  [`X1`; `X15`]; (* 87: add x8, x1, x15 *)
  [`Q3`]; (* 88: usra v18.2D, v3.2D, #32 *)
  [`X11`]; (* 89: sbcs x14, x11, xzr *)
  []; (* 90: lsr x1, x8, #32 *)
  [`X3`]; (* 91: sbcs x17, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 92: sbc x11, x12, xzr *)
  [`X1`]; (* 93: subs x13, x1, x8 *)
  []; (* 94: umulh x12, x4, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 95: sbc x1, x8, xzr *)
  []; (* 96: extr x13, x1, x13, #32 *)
  []; (* 97: lsr x1, x1, #32 *)
  [`X1`]; (* 98: adds x15, x1, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 99: adc x1, xzr, xzr *)
  [`X13`]; (* 100: subs x7, x7, x13 *)
  [`X15`; `X16`]; (* 101: sbcs x13, x16, x15 *)
  []; (* 102: lsl x3, x7, #32 *)
  []; (* 103: umulh x16, x2, x5 *)
  [`X1`; `X14`]; (* 104: sbcs x15, x14, x1 *)
  [`X3`]; (* 105: add x7, x3, x7 *)
  [`X17`]; (* 106: sbcs x3, x17, xzr *)
  []; (* 107: lsr x1, x7, #32 *)
  [`X11`]; (* 108: sbcs x14, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 109: sbc x11, x8, xzr *)
  [`X1`]; (* 110: subs x8, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 111: sbc x1, x7, xzr *)
  []; (* 112: extr x8, x1, x8, #32 *)
  []; (* 113: lsr x1, x1, #32 *)
  []; (* 114: adds x1, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 115: adc x17, xzr, xzr *)
  [`X8`]; (* 116: subs x13, x13, x8 *)
  []; (* 117: umulh x8, x9, x6 *)
  [`X15`]; (* 118: sbcs x1, x15, x1 *)
  [`X17`; `X3`]; (* 119: sbcs x15, x3, x17 *)
  [`X14`]; (* 120: sbcs x3, x14, xzr *)
  []; (* 121: mul x17, x2, x5 *)
  []; (* 122: sbcs x11, x11, xzr *)
  [`X1`; `X13`]; (* 123: stp x13, x1, [x0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 124: sbc x14, x7, xzr *)
  []; (* 125: mul x7, x4, x10 *)
  []; (* 126: subs x1, x9, x2 *)
  [`X15`; `X3`]; (* 127: stp x15, x3, [x0, #16] *)
  []; (* 128: csetm x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 129: cneg x1, x1, cc *)
  [`X11`; `X14`]; (* 130: stp x11, x14, [x0, #32] *)
  []; (* 131: mul x14, x9, x6 *)
  [`X8`]; (* 132: adds x17, x8, x17 *)
  [`X16`]; (* 133: adcs x7, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 134: adc x13, x12, xzr *)
  []; (* 135: subs x12, x5, x6 *)
  [`X12`]; (* 136: cneg x3, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 137: cinv x16, x15, cc *)
  []; (* 138: mul x8, x1, x3 *)
  [`X3`]; (* 139: umulh x1, x1, x3 *)
  [`X8`]; (* 140: eor x12, x8, x16 *)
  []; (* 141: adds x11, x17, x14 *)
  []; (* 142: adcs x3, x7, x17 *)
  []; (* 143: adcs x15, x13, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 144: adc x8, x13, xzr *)
  []; (* 145: adds x3, x3, x14 *)
  [`X17`]; (* 146: adcs x15, x15, x17 *)
  [`X7`; `X8`]; (* 147: adcs x17, x8, x7 *)
  []; (* 148: eor x1, x1, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 149: adc x13, x13, xzr *)
  []; (* 150: subs x9, x9, x4 *)
  []; (* 151: csetm x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 152: cneg x9, x9, cc *)
  [`X2`]; (* 153: subs x4, x2, x4 *)
  []; (* 154: cneg x4, x4, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 155: csetm x7, cc *)
  []; (* 156: subs x2, x10, x6 *)
  []; (* 157: cinv x8, x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 158: cneg x2, x2, cc *)
  []; (* 159: cmn x16, #0x1 *)
  [`X12`]; (* 160: adcs x11, x11, x12 *)
  []; (* 161: mul x12, x9, x2 *)
  [`X1`]; (* 162: adcs x3, x3, x1 *)
  []; (* 163: adcs x15, x15, x16 *)
  [`X2`]; (* 164: umulh x9, x9, x2 *)
  []; (* 165: adcs x17, x17, x16 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 166: adc x13, x13, x16 *)
  []; (* 167: subs x1, x10, x5 *)
  [`X7`]; (* 168: cinv x2, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 169: cneg x1, x1, cc *)
  []; (* 170: eor x9, x9, x8 *)
  []; (* 171: cmn x8, #0x1 *)
  [`X12`]; (* 172: eor x7, x12, x8 *)
  []; (* 173: mul x12, x4, x1 *)
  [`X7`]; (* 174: adcs x3, x3, x7 *)
  [`X15`; `X9`]; (* 175: adcs x7, x15, x9 *)
  [`X17`]; (* 176: adcs x15, x17, x8 *)
  []; (* 177: ldp x9, x17, [x0, #16] *)
  [`X1`]; (* 178: umulh x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 179: adc x8, x13, x8 *)
  []; (* 180: cmn x2, #0x1 *)
  [`X12`]; (* 181: eor x1, x12, x2 *)
  [`X7`]; (* 182: adcs x1, x7, x1 *)
  []; (* 183: ldp x7, x16, [x0] *)
  [`X4`]; (* 184: eor x12, x4, x2 *)
  [`X12`; `X15`]; (* 185: adcs x4, x15, x12 *)
  []; (* 186: ldp x15, x12, [x0, #32] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 187: adc x8, x8, x2 *)
  [`X14`]; (* 188: adds x13, x14, x14 *)
  []; (* 189: umulh x14, x5, x10 *)
  [`X11`]; (* 190: adcs x2, x11, x11 *)
  []; (* 191: adcs x3, x3, x3 *)
  []; (* 192: adcs x1, x1, x1 *)
  []; (* 193: adcs x4, x4, x4 *)
  [`X8`]; (* 194: adcs x11, x8, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 195: adc x8, xzr, xzr *)
  [`X7`]; (* 196: adds x13, x13, x7 *)
  [`X16`]; (* 197: adcs x2, x2, x16 *)
  []; (* 198: mul x16, x5, x10 *)
  [`X9`]; (* 199: adcs x3, x3, x9 *)
  [`X17`]; (* 200: adcs x1, x1, x17 *)
  []; (* 201: umulh x5, x5, x5 *)
  []; (* 202: lsl x9, x13, #32 *)
  [`X13`]; (* 203: add x9, x9, x13 *)
  [`X15`]; (* 204: adcs x4, x4, x15 *)
  []; (* 205: mov x13, v28.d[1] *)
  [`X11`; `X12`]; (* 206: adcs x15, x11, x12 *)
  []; (* 207: lsr x7, x9, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 208: adc x11, x8, xzr *)
  []; (* 209: subs x7, x7, x9 *)
  []; (* 210: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 211: sbc x17, x9, xzr *)
  []; (* 212: extr x7, x17, x7, #32 *)
  []; (* 213: lsr x17, x17, #32 *)
  []; (* 214: adds x17, x17, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 215: adc x12, xzr, xzr *)
  [`X2`; `X7`]; (* 216: subs x8, x2, x7 *)
  [`X3`]; (* 217: sbcs x17, x3, x17 *)
  []; (* 218: lsl x7, x8, #32 *)
  [`X1`; `X12`]; (* 219: sbcs x2, x1, x12 *)
  [`X7`; `X8`]; (* 220: add x3, x7, x8 *)
  [`X4`]; (* 221: sbcs x12, x4, xzr *)
  []; (* 222: lsr x1, x3, #32 *)
  [`X15`]; (* 223: sbcs x7, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 224: sbc x15, x9, xzr *)
  []; (* 225: subs x1, x1, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 226: sbc x4, x3, xzr *)
  []; (* 227: lsr x9, x4, #32 *)
  [`X1`; `X4`]; (* 228: extr x8, x4, x1, #32 *)
  []; (* 229: adds x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 230: adc x4, xzr, xzr *)
  [`X17`; `X8`]; (* 231: subs x1, x17, x8 *)
  []; (* 232: lsl x17, x1, #32 *)
  [`X2`; `X9`]; (* 233: sbcs x8, x2, x9 *)
  [`X12`; `X4`]; (* 234: sbcs x9, x12, x4 *)
  [`X1`]; (* 235: add x17, x17, x1 *)
  []; (* 236: mov x1, v18.d[1] *)
  []; (* 237: lsr x2, x17, #32 *)
  []; (* 238: sbcs x7, x7, xzr *)
  [`Q18`]; (* 239: mov x12, v18.d[0] *)
  []; (* 240: sbcs x15, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 241: sbc x3, x3, xzr *)
  [`X2`]; (* 242: subs x4, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 243: sbc x2, x17, xzr *)
  [`X13`]; (* 244: adds x12, x13, x12 *)
  [`X1`]; (* 245: adcs x16, x16, x1 *)
  []; (* 246: lsr x13, x2, #32 *)
  [`X2`; `X4`]; (* 247: extr x1, x2, x4, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 248: adc x2, x14, xzr *)
  [`X13`]; (* 249: adds x4, x13, x17 *)
  []; (* 250: mul x13, x6, x6 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 251: adc x14, xzr, xzr *)
  [`X8`]; (* 252: subs x1, x8, x1 *)
  [`X9`]; (* 253: sbcs x4, x9, x4 *)
  [`Q28`]; (* 254: mov x9, v28.d[0] *)
  [`X14`]; (* 255: sbcs x7, x7, x14 *)
  [`X15`]; (* 256: sbcs x8, x15, xzr *)
  []; (* 257: sbcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 258: sbc x14, x17, xzr *)
  [`X9`]; (* 259: adds x17, x9, x9 *)
  []; (* 260: adcs x12, x12, x12 *)
  []; (* 261: mov x15, v19.d[0] *)
  [`X16`]; (* 262: adcs x9, x16, x16 *)
  []; (* 263: umulh x6, x6, x6 *)
  [`X2`]; (* 264: adcs x16, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 265: adc x2, xzr, xzr *)
  [`X8`]; (* 266: adds x11, x11, x8 *)
  []; (* 267: adcs x3, x3, xzr *)
  []; (* 268: adcs x14, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 269: adcs x8, xzr, xzr *)
  [`X1`]; (* 270: adds x13, x1, x13 *)
  [`Q19`]; (* 271: mov x1, v19.d[1] *)
  [`X4`]; (* 272: adcs x6, x4, x6 *)
  []; (* 273: mov x4, #0xffffffff *)
  [`X7`]; (* 274: adcs x15, x7, x15 *)
  [`X11`; `X5`]; (* 275: adcs x7, x11, x5 *)
  [`X3`]; (* 276: adcs x1, x3, x1 *)
  [`X10`]; (* 277: adcs x14, x14, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 278: adc x11, x8, xzr *)
  [`X17`]; (* 279: adds x6, x6, x17 *)
  [`X12`; `X15`]; (* 280: adcs x8, x15, x12 *)
  [`X7`; `X9`]; (* 281: adcs x3, x7, x9 *)
  [`X1`; `X16`]; (* 282: adcs x15, x1, x16 *)
  []; (* 283: mov x16, #0xffffffff00000001 *)
  [`X2`]; (* 284: adcs x14, x14, x2 *)
  []; (* 285: mov x2, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 286: adc x17, x11, xzr *)
  []; (* 287: cmn x13, x16 *)
  []; (* 288: adcs xzr, x6, x4 *)
  []; (* 289: adcs xzr, x8, x2 *)
  []; (* 290: adcs xzr, x3, xzr *)
  []; (* 291: adcs xzr, x15, xzr *)
  []; (* 292: adcs xzr, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 293: adc x1, x17, xzr *)
  [`X1`]; (* 294: neg x9, x1 *)
  [`X16`]; (* 295: and x1, x16, x9 *)
  [`X1`; `X13`]; (* 296: adds x11, x13, x1 *)
  [`X4`]; (* 297: and x13, x4, x9 *)
  [`X13`; `X6`]; (* 298: adcs x5, x6, x13 *)
  [`X2`; `X9`]; (* 299: and x1, x2, x9 *)
  [`X1`; `X8`]; (* 300: adcs x7, x8, x1 *)
  [`X11`; `X5`]; (* 301: stp x11, x5, [x0] *)
  [`X3`]; (* 302: adcs x11, x3, xzr *)
  [`X15`]; (* 303: adcs x2, x15, xzr *)
  [`X11`; `X7`]; (* 304: stp x7, x11, [x0, #16] *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 305: adc x17, x14, xzr *)
  [`X17`; `X2`]; (* 306: stp x2, x17, [x0, #32] *)
|];;

assert (Array.length local_montsqr_p384_dead_value_info =
        len_montsqr_p384 - 1);;

let local_sub_p384_dead_value_info = [|
  []; (* 1: ldp x5, x6, [x1] *)
  []; (* 2: ldp x4, x3, [x2] *)
  [`X4`]; (* 3: subs x5, x5, x4 *)
  [`X3`]; (* 4: sbcs x6, x6, x3 *)
  []; (* 5: ldp x7, x8, [x1, #16] *)
  []; (* 6: ldp x4, x3, [x2, #16] *)
  [`X4`]; (* 7: sbcs x7, x7, x4 *)
  [`X3`]; (* 8: sbcs x8, x8, x3 *)
  []; (* 9: ldp x9, x10, [x1, #32] *)
  []; (* 10: ldp x4, x3, [x2, #32] *)
  [`X4`]; (* 11: sbcs x9, x9, x4 *)
  [`X3`]; (* 12: sbcs x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 13: csetm x3, cc *)
  []; (* 14: mov x4, #0xffffffff *)
  []; (* 15: and x4, x4, x3 *)
  []; (* 16: adds x5, x5, x4 *)
  []; (* 17: eor x4, x4, x3 *)
  [`X4`]; (* 18: adcs x6, x6, x4 *)
  []; (* 19: mov x4, #0xfffffffffffffffe *)
  []; (* 20: and x4, x4, x3 *)
  [`X4`]; (* 21: adcs x7, x7, x4 *)
  []; (* 22: adcs x8, x8, x3 *)
  []; (* 23: adcs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 24: adc x10, x10, x3 *)
  [`X5`; `X6`]; (* 25: stp x5, x6, [x0] *)
  [`X7`; `X8`]; (* 26: stp x7, x8, [x0, #16] *)
  [`X10`; `X9`]; (* 27: stp x9, x10, [x0, #32] *)
|];;

assert (Array.length local_sub_p384_dead_value_info =
        len_sub_p384 - 1);;

let local_add_p384_dead_value_info = [|
  []; (* 1: ldp x5, x6, [x1] *)
  []; (* 2: ldp x4, x3, [x2] *)
  [`X4`]; (* 3: adds    x5, x5, x4 *)
  [`X3`]; (* 4: adcs    x6, x6, x3 *)
  []; (* 5: ldp x7, x8, [x1, #16] *)
  []; (* 6: ldp x4, x3, [x2, #16] *)
  [`X4`]; (* 7: adcs    x7, x7, x4 *)
  [`X3`]; (* 8: adcs    x8, x8, x3 *)
  []; (* 9: ldp x9, x10, [x1, #32] *)
  []; (* 10: ldp        x4, x3, [x2, #32] *)
  [`X4`]; (* 11: adcs   x9, x9, x4 *)
  [`X3`]; (* 12: adcs   x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 13: adc  x3, xzr, xzr *)
  []; (* 14: mov        x4, #0xffffffff *)
  [`X4`]; (* 15: cmp    x5, x4 *)
  []; (* 16: mov        x4, #0xffffffff00000000 *)
  [`X4`]; (* 17: sbcs   xzr, x6, x4 *)
  []; (* 18: mov        x4, #0xfffffffffffffffe *)
  [`X4`]; (* 19: sbcs   xzr, x7, x4 *)
  []; (* 20: adcs       xzr, x8, xzr *)
  []; (* 21: adcs       xzr, x9, xzr *)
  []; (* 22: adcs       xzr, x10, xzr *)
  [`X3`]; (* 23: adcs   x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 24: csetm        x3, ne *)
  []; (* 25: mov        x4, #0xffffffff *)
  []; (* 26: and        x4, x4, x3 *)
  []; (* 27: subs       x5, x5, x4 *)
  []; (* 28: eor        x4, x4, x3 *)
  [`X4`]; (* 29: sbcs   x6, x6, x4 *)
  []; (* 30: mov        x4, #0xfffffffffffffffe *)
  []; (* 31: and        x4, x4, x3 *)
  [`X4`]; (* 32: sbcs   x7, x7, x4 *)
  []; (* 33: sbcs       x8, x8, x3 *)
  []; (* 34: sbcs       x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 35: sbc    x10, x10, x3 *)
  [`X5`; `X6`]; (* 36: stp      x5, x6, [x0] *)
  [`X7`; `X8`]; (* 37: stp      x7, x8, [x0, #16] *)
  [`X10`; `X9`]; (* 38: stp     x9, x10, [x0, #32] *)
|];;

assert (Array.length local_add_p384_dead_value_info =
        len_add_p384 - 1);;

let p384_montjdouble_unopt_dead_value_info =
  let _,_,n,_,_ = last !actions1 in Array.init n (fun _ -> []);;

let i = ref 0;;
List.iter (fun code_block ->
  match code_block with
  | "equal", Some instcnt ->
    (* simply, don't add any data. *)
    i := instcnt + !i
  | callstr, None -> begin
    let updator dvi_from_arr n_prologue n_epilogue =
      i := n_prologue + !i;
      for j = 0 to Array.length dvi_from_arr - 1 do
        p384_montjdouble_unopt_dead_value_info.(!i) <- dvi_from_arr.(j);
        i := 1 + !i
      done;
      i := n_epilogue + !i in

    match callstr with
    | "call montmul_p384" ->
      updator local_montmul_p384_dead_value_info
        (4+4) (* arguments + bl + callee-save reg stores *)
        5 (* callee-save restores and ret *)
    | "call montsqr_p384" ->
      updator local_montsqr_p384_dead_value_info
        3 (* arguments + bl *)
        1 (* callee-save restores and ret *)
    | "call sub_p384" ->
      updator local_sub_p384_dead_value_info
        4 (* arguments + bl *)
        1 (* callee-save restores and ret *)
    | "call add_p384" ->
      updator local_add_p384_dead_value_info
        4 (* arguments + bl *)
        1 (* callee-save restores and ret *)
   end)
  code_blocks;;

assert (!i = Array.length p384_montjdouble_unopt_dead_value_info);;

(* ------------------------------------------------------------------------- *)
(* Second, build dead value info of the optimized program.                   *)
(* ------------------------------------------------------------------------- *)

let p384_montjdouble_dead_value_info = [|
  []; (* 1: mov x25, x0 *)
  []; (* 2: mov x26, x1 *)
  []; (* 3: mov x0, sp *)
  []; (* 4: ldr q1, [x26, #96] *)
  []; (* 5: ldp x9, x2, [x26, #96] *)
  []; (* 6: ldr q0, [x26, #96] *)
  []; (* 7: ldp x4, x6, [x26, #112] *)
  []; (* 8: rev64 v21.4s, v1.4s *)
  []; (* 9: uzp2 v28.4s, v1.4s, v1.4s *)
  []; (* 10: umulh x7, x9, x2 *)
  [`Q1`]; (* 11: xtn v17.2s, v1.2d *)
  [`Q21`]; (* 12: mul v27.4s, v21.4s, v0.4s *)
  []; (* 13: ldr q20, [x26, #128] *)
  []; (* 14: xtn v30.2s, v0.2d *)
  []; (* 15: ldr q1, [x26, #128] *)
  [`Q0`]; (* 16: uzp2 v31.4s, v0.4s, v0.4s *)
  []; (* 17: ldp x5, x10, [x26, #128] *)
  []; (* 18: umulh x8, x9, x4 *)
  [`Q27`]; (* 19: uaddlp v3.2d, v27.4s *)
  []; (* 20: umull v16.2d, v30.2s, v17.2s *)
  []; (* 21: mul x16, x9, x4 *)
  []; (* 22: umull v27.2d, v30.2s, v28.2s *)
  []; (* 23: shrn v0.2s, v20.2d, #32 *)
  [`Q20`]; (* 24: xtn v7.2s, v20.2d *)
  [`Q3`]; (* 25: shl v20.2d, v3.2d, #32 *)
  [`Q28`]; (* 26: umull v3.2d, v31.2s, v28.2s *)
  []; (* 27: mul x3, x2, x4 *)
  [`Q30`]; (* 28: umlal v20.2d, v30.2s, v17.2s *)
  [`Q0`]; (* 29: umull v22.2d, v7.2s, v0.2s *)
  [`Q16`]; (* 30: usra v27.2d, v16.2d, #32 *)
  []; (* 31: umulh x11, x2, x4 *)
  []; (* 32: movi v21.2d, #0xffffffff *)
  []; (* 33: uzp2 v28.4s, v1.4s, v1.4s *)
  [`X16`; `X7`]; (* 34: adds x15, x16, x7 *)
  [`Q21`]; (* 35: and v5.16b, v27.16b, v21.16b *)
  [`X8`]; (* 36: adcs x3, x3, x8 *)
  [`Q27`]; (* 37: usra v3.2d, v27.2d, #32 *)
  []; (* 38: dup v29.2d, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 39: adcs x16, x11, xzr *)
  []; (* 40: mov x14, v20.d[0] *)
  [`Q17`; `Q31`]; (* 41: umlal v5.2d, v31.2s, v17.2s *)
  []; (* 42: mul x8, x9, x2 *)
  [`Q20`]; (* 43: mov x7, v20.d[1] *)
  [`Q22`]; (* 44: shl v19.2d, v22.2d, #33 *)
  []; (* 45: xtn v25.2s, v29.2d *)
  []; (* 46: rev64 v31.4s, v1.4s *)
  []; (* 47: lsl x13, x14, #32 *)
  []; (* 48: uzp2 v6.4s, v29.4s, v29.4s *)
  [`Q7`]; (* 49: umlal v19.2d, v7.2s, v7.2s *)
  [`Q5`]; (* 50: usra v3.2d, v5.2d, #32 *)
  [`X8`]; (* 51: adds x1, x8, x8 *)
  []; (* 52: umulh x8, x4, x4 *)
  [`X13`; `X14`]; (* 53: add x12, x13, x14 *)
  [`Q29`; `Q31`]; (* 54: mul v17.4s, v31.4s, v29.4s *)
  [`Q1`]; (* 55: xtn v4.2s, v1.2d *)
  [`X15`]; (* 56: adcs x14, x15, x15 *)
  []; (* 57: lsr x13, x12, #32 *)
  [`X3`]; (* 58: adcs x15, x3, x3 *)
  []; (* 59: umull v31.2d, v25.2s, v28.2s *)
  [`X16`]; (* 60: adcs x11, x16, x16 *)
  []; (* 61: umull v21.2d, v25.2s, v4.2s *)
  []; (* 62: mov x17, v3.d[0] *)
  [`Q28`]; (* 63: umull v18.2d, v6.2s, v28.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 64: adc x16, x8, xzr *)
  [`Q17`]; (* 65: uaddlp v16.2d, v17.4s *)
  []; (* 66: movi v1.2d, #0xffffffff *)
  []; (* 67: subs x13, x13, x12 *)
  [`Q21`]; (* 68: usra v31.2d, v21.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 69: sbc x8, x12, xzr *)
  [`X1`]; (* 70: adds x17, x17, x1 *)
  []; (* 71: mul x1, x4, x4 *)
  [`Q16`]; (* 72: shl v28.2d, v16.2d, #32 *)
  [`Q3`]; (* 73: mov x3, v3.d[1] *)
  [`X7`]; (* 74: adcs x14, x7, x14 *)
  [`X13`]; (* 75: extr x7, x8, x13, #32 *)
  [`X15`; `X3`]; (* 76: adcs x13, x3, x15 *)
  [`Q1`]; (* 77: and v3.16b, v31.16b, v1.16b *)
  [`X1`]; (* 78: adcs x11, x1, x11 *)
  [`X8`]; (* 79: lsr x1, x8, #32 *)
  [`Q6`]; (* 80: umlal v3.2d, v6.2s, v4.2s *)
  [`Q31`]; (* 81: usra v18.2d, v31.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 82: adc x3, x16, xzr *)
  []; (* 83: adds x1, x1, x12 *)
  [`Q25`; `Q4`]; (* 84: umlal v28.2d, v25.2s, v4.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 85: adc x16, xzr, xzr *)
  [`X17`; `X7`]; (* 86: subs x15, x17, x7 *)
  [`X1`; `X14`]; (* 87: sbcs x7, x14, x1 *)
  []; (* 88: lsl x1, x15, #32 *)
  [`X13`]; (* 89: sbcs x16, x13, x16 *)
  [`X1`; `X15`]; (* 90: add x8, x1, x15 *)
  [`Q3`]; (* 91: usra v18.2d, v3.2d, #32 *)
  [`X11`]; (* 92: sbcs x14, x11, xzr *)
  []; (* 93: lsr x1, x8, #32 *)
  [`X3`]; (* 94: sbcs x17, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 95: sbc x11, x12, xzr *)
  [`X1`]; (* 96: subs x13, x1, x8 *)
  []; (* 97: umulh x12, x4, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 98: sbc x1, x8, xzr *)
  []; (* 99: extr x13, x1, x13, #32 *)
  []; (* 100: lsr x1, x1, #32 *)
  [`X1`]; (* 101: adds x15, x1, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 102: adc x1, xzr, xzr *)
  [`X13`]; (* 103: subs x7, x7, x13 *)
  [`X15`; `X16`]; (* 104: sbcs x13, x16, x15 *)
  []; (* 105: lsl x3, x7, #32 *)
  []; (* 106: umulh x16, x2, x5 *)
  [`X1`; `X14`]; (* 107: sbcs x15, x14, x1 *)
  [`X3`]; (* 108: add x7, x3, x7 *)
  [`X17`]; (* 109: sbcs x3, x17, xzr *)
  []; (* 110: lsr x1, x7, #32 *)
  [`X11`]; (* 111: sbcs x14, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 112: sbc x11, x8, xzr *)
  [`X1`]; (* 113: subs x8, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 114: sbc x1, x7, xzr *)
  []; (* 115: extr x8, x1, x8, #32 *)
  []; (* 116: lsr x1, x1, #32 *)
  []; (* 117: adds x1, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 118: adc x17, xzr, xzr *)
  [`X8`]; (* 119: subs x13, x13, x8 *)
  []; (* 120: umulh x8, x9, x6 *)
  [`X15`]; (* 121: sbcs x1, x15, x1 *)
  [`X17`; `X3`]; (* 122: sbcs x15, x3, x17 *)
  [`X14`]; (* 123: sbcs x3, x14, xzr *)
  []; (* 124: mul x17, x2, x5 *)
  []; (* 125: sbcs x11, x11, xzr *)
  [`X1`; `X13`]; (* 126: stp x13, x1, [x0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 127: sbc x14, x7, xzr *)
  []; (* 128: mul x7, x4, x10 *)
  []; (* 129: subs x1, x9, x2 *)
  [`X15`; `X3`]; (* 130: stp x15, x3, [x0, #16] *)
  []; (* 131: csetm x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 132: cneg x1, x1, cc *)
  [`X11`; `X14`]; (* 133: stp x11, x14, [x0, #32] *)
  []; (* 134: mul x14, x9, x6 *)
  [`X8`]; (* 135: adds x17, x8, x17 *)
  [`X16`]; (* 136: adcs x7, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 137: adc x13, x12, xzr *)
  []; (* 138: subs x12, x5, x6 *)
  [`X12`]; (* 139: cneg x3, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 140: cinv x16, x15, cc *)
  []; (* 141: mul x8, x1, x3 *)
  [`X3`]; (* 142: umulh x1, x1, x3 *)
  [`X8`]; (* 143: eor x12, x8, x16 *)
  []; (* 144: adds x11, x17, x14 *)
  []; (* 145: adcs x3, x7, x17 *)
  []; (* 146: adcs x15, x13, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 147: adc x8, x13, xzr *)
  []; (* 148: adds x3, x3, x14 *)
  [`X17`]; (* 149: adcs x15, x15, x17 *)
  [`X7`; `X8`]; (* 150: adcs x17, x8, x7 *)
  []; (* 151: eor x1, x1, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 152: adc x13, x13, xzr *)
  []; (* 153: subs x9, x9, x4 *)
  []; (* 154: csetm x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 155: cneg x9, x9, cc *)
  [`X2`]; (* 156: subs x4, x2, x4 *)
  []; (* 157: cneg x4, x4, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 158: csetm x7, cc *)
  []; (* 159: subs x2, x10, x6 *)
  []; (* 160: cinv x8, x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 161: cneg x2, x2, cc *)
  []; (* 162: cmn x16, #0x1 *)
  [`X12`]; (* 163: adcs x11, x11, x12 *)
  []; (* 164: mul x12, x9, x2 *)
  [`X1`]; (* 165: adcs x3, x3, x1 *)
  []; (* 166: adcs x15, x15, x16 *)
  [`X2`]; (* 167: umulh x9, x9, x2 *)
  []; (* 168: adcs x17, x17, x16 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 169: adc x13, x13, x16 *)
  []; (* 170: subs x1, x10, x5 *)
  [`X7`]; (* 171: cinv x2, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 172: cneg x1, x1, cc *)
  []; (* 173: eor x9, x9, x8 *)
  []; (* 174: cmn x8, #0x1 *)
  [`X12`]; (* 175: eor x7, x12, x8 *)
  []; (* 176: mul x12, x4, x1 *)
  [`X7`]; (* 177: adcs x3, x3, x7 *)
  [`X15`; `X9`]; (* 178: adcs x7, x15, x9 *)
  [`X17`]; (* 179: adcs x15, x17, x8 *)
  []; (* 180: ldp x9, x17, [x0, #16] *)
  [`X1`]; (* 181: umulh x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 182: adc x8, x13, x8 *)
  []; (* 183: cmn x2, #0x1 *)
  [`X12`]; (* 184: eor x1, x12, x2 *)
  [`X7`]; (* 185: adcs x1, x7, x1 *)
  []; (* 186: ldp x7, x16, [x0] *)
  [`X4`]; (* 187: eor x12, x4, x2 *)
  [`X12`; `X15`]; (* 188: adcs x4, x15, x12 *)
  []; (* 189: ldp x15, x12, [x0, #32] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 190: adc x8, x8, x2 *)
  [`X14`]; (* 191: adds x13, x14, x14 *)
  []; (* 192: umulh x14, x5, x10 *)
  [`X11`]; (* 193: adcs x2, x11, x11 *)
  []; (* 194: adcs x3, x3, x3 *)
  []; (* 195: adcs x1, x1, x1 *)
  []; (* 196: adcs x4, x4, x4 *)
  [`X8`]; (* 197: adcs x11, x8, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 198: adc x8, xzr, xzr *)
  [`X7`]; (* 199: adds x13, x13, x7 *)
  [`X16`]; (* 200: adcs x2, x2, x16 *)
  []; (* 201: mul x16, x5, x10 *)
  [`X9`]; (* 202: adcs x3, x3, x9 *)
  [`X17`]; (* 203: adcs x1, x1, x17 *)
  []; (* 204: umulh x5, x5, x5 *)
  []; (* 205: lsl x9, x13, #32 *)
  [`X13`]; (* 206: add x9, x9, x13 *)
  [`X15`]; (* 207: adcs x4, x4, x15 *)
  []; (* 208: mov x13, v28.d[1] *)
  [`X11`; `X12`]; (* 209: adcs x15, x11, x12 *)
  []; (* 210: lsr x7, x9, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 211: adc x11, x8, xzr *)
  []; (* 212: subs x7, x7, x9 *)
  []; (* 213: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 214: sbc x17, x9, xzr *)
  []; (* 215: extr x7, x17, x7, #32 *)
  []; (* 216: lsr x17, x17, #32 *)
  []; (* 217: adds x17, x17, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 218: adc x12, xzr, xzr *)
  [`X2`; `X7`]; (* 219: subs x8, x2, x7 *)
  [`X3`]; (* 220: sbcs x17, x3, x17 *)
  []; (* 221: lsl x7, x8, #32 *)
  [`X1`; `X12`]; (* 222: sbcs x2, x1, x12 *)
  [`X7`; `X8`]; (* 223: add x3, x7, x8 *)
  [`X4`]; (* 224: sbcs x12, x4, xzr *)
  []; (* 225: lsr x1, x3, #32 *)
  [`X15`]; (* 226: sbcs x7, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 227: sbc x15, x9, xzr *)
  []; (* 228: subs x1, x1, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 229: sbc x4, x3, xzr *)
  []; (* 230: lsr x9, x4, #32 *)
  [`X1`; `X4`]; (* 231: extr x8, x4, x1, #32 *)
  []; (* 232: adds x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 233: adc x4, xzr, xzr *)
  [`X17`; `X8`]; (* 234: subs x1, x17, x8 *)
  []; (* 235: lsl x17, x1, #32 *)
  [`X2`; `X9`]; (* 236: sbcs x8, x2, x9 *)
  [`X12`; `X4`]; (* 237: sbcs x9, x12, x4 *)
  [`X1`]; (* 238: add x17, x17, x1 *)
  []; (* 239: mov x1, v18.d[1] *)
  []; (* 240: lsr x2, x17, #32 *)
  []; (* 241: sbcs x7, x7, xzr *)
  [`Q18`]; (* 242: mov x12, v18.d[0] *)
  []; (* 243: sbcs x15, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 244: sbc x3, x3, xzr *)
  [`X2`]; (* 245: subs x4, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 246: sbc x2, x17, xzr *)
  [`X13`]; (* 247: adds x12, x13, x12 *)
  [`X1`]; (* 248: adcs x16, x16, x1 *)
  []; (* 249: lsr x13, x2, #32 *)
  [`X2`; `X4`]; (* 250: extr x1, x2, x4, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 251: adc x2, x14, xzr *)
  [`X13`]; (* 252: adds x4, x13, x17 *)
  []; (* 253: mul x13, x6, x6 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 254: adc x14, xzr, xzr *)
  [`X8`]; (* 255: subs x1, x8, x1 *)
  [`X9`]; (* 256: sbcs x4, x9, x4 *)
  [`Q28`]; (* 257: mov x9, v28.d[0] *)
  [`X14`]; (* 258: sbcs x7, x7, x14 *)
  [`X15`]; (* 259: sbcs x8, x15, xzr *)
  []; (* 260: sbcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 261: sbc x14, x17, xzr *)
  [`X9`]; (* 262: adds x17, x9, x9 *)
  []; (* 263: adcs x12, x12, x12 *)
  []; (* 264: mov x15, v19.d[0] *)
  [`X16`]; (* 265: adcs x9, x16, x16 *)
  []; (* 266: umulh x6, x6, x6 *)
  [`X2`]; (* 267: adcs x16, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 268: adc x2, xzr, xzr *)
  [`X8`]; (* 269: adds x11, x11, x8 *)
  []; (* 270: adcs x3, x3, xzr *)
  []; (* 271: adcs x14, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 272: adcs x8, xzr, xzr *)
  [`X1`]; (* 273: adds x13, x1, x13 *)
  [`Q19`]; (* 274: mov x1, v19.d[1] *)
  [`X4`]; (* 275: adcs x6, x4, x6 *)
  []; (* 276: mov x4, #0xffffffff *)
  [`X7`]; (* 277: adcs x15, x7, x15 *)
  [`X11`; `X5`]; (* 278: adcs x7, x11, x5 *)
  [`X3`]; (* 279: adcs x1, x3, x1 *)
  [`X10`]; (* 280: adcs x14, x14, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 281: adc x11, x8, xzr *)
  [`X17`]; (* 282: adds x6, x6, x17 *)
  [`X12`; `X15`]; (* 283: adcs x8, x15, x12 *)
  [`X7`; `X9`]; (* 284: adcs x3, x7, x9 *)
  [`X1`; `X16`]; (* 285: adcs x15, x1, x16 *)
  []; (* 286: mov x16, #0xffffffff00000001 *)
  [`X2`]; (* 287: adcs x14, x14, x2 *)
  []; (* 288: mov x2, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 289: adc x17, x11, xzr *)
  []; (* 290: cmn x13, x16 *)
  []; (* 291: adcs xzr, x6, x4 *)
  []; (* 292: adcs xzr, x8, x2 *)
  []; (* 293: adcs xzr, x3, xzr *)
  []; (* 294: adcs xzr, x15, xzr *)
  []; (* 295: adcs xzr, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 296: adc x1, x17, xzr *)
  [`X1`]; (* 297: neg x9, x1 *)
  [`X16`]; (* 298: and x1, x16, x9 *)
  [`X1`; `X13`]; (* 299: adds x11, x13, x1 *)
  [`X4`]; (* 300: and x13, x4, x9 *)
  [`X13`; `X6`]; (* 301: adcs x5, x6, x13 *)
  [`X2`; `X9`]; (* 302: and x1, x2, x9 *)
  [`X1`; `X8`]; (* 303: adcs x7, x8, x1 *)
  [`X11`; `X5`]; (* 304: stp x11, x5, [x0] *)
  [`X3`]; (* 305: adcs x11, x3, xzr *)
  [`X15`]; (* 306: adcs x2, x15, xzr *)
  [`X11`; `X7`]; (* 307: stp x7, x11, [x0, #16] *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 308: adc x17, x14, xzr *)
  [`X0`; `X17`; `X2`]; (* 309: stp x2, x17, [x0, #32] *)
  []; (* 310: ldr q1, [x26, #48] *)
  []; (* 311: ldp x9, x2, [x26, #48] *)
  []; (* 312: ldr q0, [x26, #48] *)
  []; (* 313: ldp x4, x6, [x26, #64] *)
  []; (* 314: rev64 v21.4s, v1.4s *)
  []; (* 315: uzp2 v28.4s, v1.4s, v1.4s *)
  []; (* 316: umulh x7, x9, x2 *)
  [`Q1`]; (* 317: xtn v17.2s, v1.2d *)
  [`Q21`]; (* 318: mul v27.4s, v21.4s, v0.4s *)
  []; (* 319: ldr q20, [x26, #80] *)
  []; (* 320: xtn v30.2s, v0.2d *)
  []; (* 321: ldr q1, [x26, #80] *)
  [`Q0`]; (* 322: uzp2 v31.4s, v0.4s, v0.4s *)
  []; (* 323: ldp x5, x10, [x26, #80] *)
  []; (* 324: umulh x8, x9, x4 *)
  [`Q27`]; (* 325: uaddlp v3.2d, v27.4s *)
  []; (* 326: umull v16.2d, v30.2s, v17.2s *)
  []; (* 327: mul x16, x9, x4 *)
  []; (* 328: umull v27.2d, v30.2s, v28.2s *)
  []; (* 329: shrn v0.2s, v20.2d, #32 *)
  [`Q20`]; (* 330: xtn v7.2s, v20.2d *)
  [`Q3`]; (* 331: shl v20.2d, v3.2d, #32 *)
  [`Q28`]; (* 332: umull v3.2d, v31.2s, v28.2s *)
  []; (* 333: mul x3, x2, x4 *)
  [`Q30`]; (* 334: umlal v20.2d, v30.2s, v17.2s *)
  [`Q0`]; (* 335: umull v22.2d, v7.2s, v0.2s *)
  [`Q16`]; (* 336: usra v27.2d, v16.2d, #32 *)
  []; (* 337: umulh x11, x2, x4 *)
  []; (* 338: movi v21.2d, #0xffffffff *)
  []; (* 339: uzp2 v28.4s, v1.4s, v1.4s *)
  [`X16`; `X7`]; (* 340: adds x15, x16, x7 *)
  [`Q21`]; (* 341: and v5.16b, v27.16b, v21.16b *)
  [`X8`]; (* 342: adcs x3, x3, x8 *)
  [`Q27`]; (* 343: usra v3.2d, v27.2d, #32 *)
  []; (* 344: dup v29.2d, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 345: adcs x16, x11, xzr *)
  []; (* 346: mov x14, v20.d[0] *)
  [`Q17`; `Q31`]; (* 347: umlal v5.2d, v31.2s, v17.2s *)
  []; (* 348: mul x8, x9, x2 *)
  [`Q20`]; (* 349: mov x7, v20.d[1] *)
  [`Q22`]; (* 350: shl v19.2d, v22.2d, #33 *)
  []; (* 351: xtn v25.2s, v29.2d *)
  []; (* 352: rev64 v31.4s, v1.4s *)
  []; (* 353: lsl x13, x14, #32 *)
  []; (* 354: uzp2 v6.4s, v29.4s, v29.4s *)
  [`Q7`]; (* 355: umlal v19.2d, v7.2s, v7.2s *)
  [`Q5`]; (* 356: usra v3.2d, v5.2d, #32 *)
  [`X8`]; (* 357: adds x1, x8, x8 *)
  []; (* 358: umulh x8, x4, x4 *)
  [`X13`; `X14`]; (* 359: add x12, x13, x14 *)
  [`Q29`; `Q31`]; (* 360: mul v17.4s, v31.4s, v29.4s *)
  [`Q1`]; (* 361: xtn v4.2s, v1.2d *)
  [`X15`]; (* 362: adcs x14, x15, x15 *)
  []; (* 363: lsr x13, x12, #32 *)
  [`X3`]; (* 364: adcs x15, x3, x3 *)
  []; (* 365: umull v31.2d, v25.2s, v28.2s *)
  [`X16`]; (* 366: adcs x11, x16, x16 *)
  []; (* 367: umull v21.2d, v25.2s, v4.2s *)
  []; (* 368: mov x17, v3.d[0] *)
  [`Q28`]; (* 369: umull v18.2d, v6.2s, v28.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 370: adc x16, x8, xzr *)
  [`Q17`]; (* 371: uaddlp v16.2d, v17.4s *)
  []; (* 372: movi v1.2d, #0xffffffff *)
  []; (* 373: subs x13, x13, x12 *)
  [`Q21`]; (* 374: usra v31.2d, v21.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 375: sbc x8, x12, xzr *)
  [`X1`]; (* 376: adds x17, x17, x1 *)
  []; (* 377: mul x1, x4, x4 *)
  [`Q16`]; (* 378: shl v28.2d, v16.2d, #32 *)
  [`Q3`]; (* 379: mov x3, v3.d[1] *)
  [`X7`]; (* 380: adcs x14, x7, x14 *)
  [`X13`]; (* 381: extr x7, x8, x13, #32 *)
  [`X15`; `X3`]; (* 382: adcs x13, x3, x15 *)
  [`Q1`]; (* 383: and v3.16b, v31.16b, v1.16b *)
  [`X1`]; (* 384: adcs x11, x1, x11 *)
  [`X8`]; (* 385: lsr x1, x8, #32 *)
  [`Q6`]; (* 386: umlal v3.2d, v6.2s, v4.2s *)
  [`Q31`]; (* 387: usra v18.2d, v31.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 388: adc x3, x16, xzr *)
  []; (* 389: adds x1, x1, x12 *)
  [`Q25`; `Q4`]; (* 390: umlal v28.2d, v25.2s, v4.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 391: adc x16, xzr, xzr *)
  [`X17`; `X7`]; (* 392: subs x15, x17, x7 *)
  [`X1`; `X14`]; (* 393: sbcs x7, x14, x1 *)
  []; (* 394: lsl x1, x15, #32 *)
  [`X13`]; (* 395: sbcs x16, x13, x16 *)
  [`X1`; `X15`]; (* 396: add x8, x1, x15 *)
  [`Q3`]; (* 397: usra v18.2d, v3.2d, #32 *)
  [`X11`]; (* 398: sbcs x14, x11, xzr *)
  []; (* 399: lsr x1, x8, #32 *)
  [`X3`]; (* 400: sbcs x17, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 401: sbc x11, x12, xzr *)
  [`X1`]; (* 402: subs x13, x1, x8 *)
  []; (* 403: umulh x12, x4, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 404: sbc x1, x8, xzr *)
  []; (* 405: extr x13, x1, x13, #32 *)
  []; (* 406: lsr x1, x1, #32 *)
  [`X1`]; (* 407: adds x15, x1, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 408: adc x1, xzr, xzr *)
  [`X13`]; (* 409: subs x7, x7, x13 *)
  [`X15`; `X16`]; (* 410: sbcs x13, x16, x15 *)
  []; (* 411: lsl x3, x7, #32 *)
  []; (* 412: umulh x16, x2, x5 *)
  [`X1`; `X14`]; (* 413: sbcs x15, x14, x1 *)
  [`X3`]; (* 414: add x7, x3, x7 *)
  [`X17`]; (* 415: sbcs x3, x17, xzr *)
  []; (* 416: lsr x1, x7, #32 *)
  [`X11`]; (* 417: sbcs x14, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 418: sbc x11, x8, xzr *)
  [`X1`]; (* 419: subs x8, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 420: sbc x1, x7, xzr *)
  []; (* 421: extr x8, x1, x8, #32 *)
  []; (* 422: lsr x1, x1, #32 *)
  []; (* 423: adds x1, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 424: adc x17, xzr, xzr *)
  [`X8`]; (* 425: subs x13, x13, x8 *)
  []; (* 426: umulh x8, x9, x6 *)
  [`X15`]; (* 427: sbcs x1, x15, x1 *)
  [`X17`; `X3`]; (* 428: sbcs x15, x3, x17 *)
  [`X14`]; (* 429: sbcs x3, x14, xzr *)
  []; (* 430: mul x17, x2, x5 *)
  []; (* 431: sbcs x11, x11, xzr *)
  [`X1`; `X13`]; (* 432: stp x13, x1, [sp, #48] *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 433: sbc x14, x7, xzr *)
  []; (* 434: mul x7, x4, x10 *)
  []; (* 435: subs x1, x9, x2 *)
  [`X15`; `X3`]; (* 436: stp x15, x3, [sp, #64] *)
  []; (* 437: csetm x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 438: cneg x1, x1, cc *)
  [`X11`; `X14`]; (* 439: stp x11, x14, [sp, #80] *)
  []; (* 440: mul x14, x9, x6 *)
  [`X8`]; (* 441: adds x17, x8, x17 *)
  [`X16`]; (* 442: adcs x7, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 443: adc x13, x12, xzr *)
  []; (* 444: subs x12, x5, x6 *)
  [`X12`]; (* 445: cneg x3, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 446: cinv x16, x15, cc *)
  []; (* 447: mul x8, x1, x3 *)
  [`X3`]; (* 448: umulh x1, x1, x3 *)
  [`X8`]; (* 449: eor x12, x8, x16 *)
  []; (* 450: adds x11, x17, x14 *)
  []; (* 451: adcs x3, x7, x17 *)
  []; (* 452: adcs x15, x13, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 453: adc x8, x13, xzr *)
  []; (* 454: adds x3, x3, x14 *)
  [`X17`]; (* 455: adcs x15, x15, x17 *)
  [`X7`; `X8`]; (* 456: adcs x17, x8, x7 *)
  []; (* 457: eor x1, x1, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 458: adc x13, x13, xzr *)
  []; (* 459: subs x9, x9, x4 *)
  []; (* 460: csetm x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 461: cneg x9, x9, cc *)
  [`X2`]; (* 462: subs x4, x2, x4 *)
  []; (* 463: cneg x4, x4, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 464: csetm x7, cc *)
  []; (* 465: subs x2, x10, x6 *)
  []; (* 466: cinv x8, x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 467: cneg x2, x2, cc *)
  []; (* 468: cmn x16, #0x1 *)
  [`X12`]; (* 469: adcs x11, x11, x12 *)
  []; (* 470: mul x12, x9, x2 *)
  [`X1`]; (* 471: adcs x3, x3, x1 *)
  []; (* 472: adcs x15, x15, x16 *)
  [`X2`]; (* 473: umulh x9, x9, x2 *)
  []; (* 474: adcs x17, x17, x16 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 475: adc x13, x13, x16 *)
  []; (* 476: subs x1, x10, x5 *)
  [`X7`]; (* 477: cinv x2, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 478: cneg x1, x1, cc *)
  []; (* 479: eor x9, x9, x8 *)
  []; (* 480: cmn x8, #0x1 *)
  [`X12`]; (* 481: eor x7, x12, x8 *)
  []; (* 482: mul x12, x4, x1 *)
  [`X7`]; (* 483: adcs x3, x3, x7 *)
  [`X15`; `X9`]; (* 484: adcs x7, x15, x9 *)
  [`X17`]; (* 485: adcs x15, x17, x8 *)
  []; (* 486: ldp x9, x17, [sp, #64] *)
  [`X1`]; (* 487: umulh x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 488: adc x8, x13, x8 *)
  []; (* 489: cmn x2, #0x1 *)
  [`X12`]; (* 490: eor x1, x12, x2 *)
  [`X7`]; (* 491: adcs x1, x7, x1 *)
  []; (* 492: ldp x7, x16, [sp, #48] *)
  [`X4`]; (* 493: eor x12, x4, x2 *)
  [`X12`; `X15`]; (* 494: adcs x4, x15, x12 *)
  []; (* 495: ldp x15, x12, [sp, #80] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 496: adc x8, x8, x2 *)
  [`X14`]; (* 497: adds x13, x14, x14 *)
  []; (* 498: umulh x14, x5, x10 *)
  [`X11`]; (* 499: adcs x2, x11, x11 *)
  []; (* 500: adcs x3, x3, x3 *)
  []; (* 501: adcs x1, x1, x1 *)
  []; (* 502: adcs x4, x4, x4 *)
  [`X8`]; (* 503: adcs x11, x8, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 504: adc x8, xzr, xzr *)
  [`X7`]; (* 505: adds x13, x13, x7 *)
  [`X16`]; (* 506: adcs x2, x2, x16 *)
  []; (* 507: mul x16, x5, x10 *)
  [`X9`]; (* 508: adcs x3, x3, x9 *)
  [`X17`]; (* 509: adcs x1, x1, x17 *)
  []; (* 510: umulh x5, x5, x5 *)
  []; (* 511: lsl x9, x13, #32 *)
  [`X13`]; (* 512: add x9, x9, x13 *)
  [`X15`]; (* 513: adcs x4, x4, x15 *)
  []; (* 514: mov x13, v28.d[1] *)
  [`X11`; `X12`]; (* 515: adcs x15, x11, x12 *)
  []; (* 516: lsr x7, x9, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 517: adc x11, x8, xzr *)
  []; (* 518: subs x7, x7, x9 *)
  []; (* 519: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 520: sbc x17, x9, xzr *)
  []; (* 521: extr x7, x17, x7, #32 *)
  []; (* 522: lsr x17, x17, #32 *)
  []; (* 523: adds x17, x17, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 524: adc x12, xzr, xzr *)
  [`X2`; `X7`]; (* 525: subs x8, x2, x7 *)
  [`X3`]; (* 526: sbcs x17, x3, x17 *)
  []; (* 527: lsl x7, x8, #32 *)
  [`X1`; `X12`]; (* 528: sbcs x2, x1, x12 *)
  [`X7`; `X8`]; (* 529: add x3, x7, x8 *)
  [`X4`]; (* 530: sbcs x12, x4, xzr *)
  []; (* 531: lsr x1, x3, #32 *)
  [`X15`]; (* 532: sbcs x7, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 533: sbc x15, x9, xzr *)
  []; (* 534: subs x1, x1, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 535: sbc x4, x3, xzr *)
  []; (* 536: lsr x9, x4, #32 *)
  [`X1`; `X4`]; (* 537: extr x8, x4, x1, #32 *)
  []; (* 538: adds x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 539: adc x4, xzr, xzr *)
  [`X17`; `X8`]; (* 540: subs x1, x17, x8 *)
  []; (* 541: lsl x17, x1, #32 *)
  [`X2`; `X9`]; (* 542: sbcs x8, x2, x9 *)
  [`X12`; `X4`]; (* 543: sbcs x9, x12, x4 *)
  [`X1`]; (* 544: add x17, x17, x1 *)
  []; (* 545: mov x1, v18.d[1] *)
  []; (* 546: lsr x2, x17, #32 *)
  []; (* 547: sbcs x7, x7, xzr *)
  [`Q18`]; (* 548: mov x12, v18.d[0] *)
  []; (* 549: sbcs x15, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 550: sbc x3, x3, xzr *)
  [`X2`]; (* 551: subs x4, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 552: sbc x2, x17, xzr *)
  [`X13`]; (* 553: adds x12, x13, x12 *)
  [`X1`]; (* 554: adcs x16, x16, x1 *)
  []; (* 555: lsr x13, x2, #32 *)
  [`X2`; `X4`]; (* 556: extr x1, x2, x4, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 557: adc x2, x14, xzr *)
  [`X13`]; (* 558: adds x4, x13, x17 *)
  []; (* 559: mul x13, x6, x6 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 560: adc x14, xzr, xzr *)
  [`X8`]; (* 561: subs x1, x8, x1 *)
  [`X9`]; (* 562: sbcs x4, x9, x4 *)
  [`Q28`]; (* 563: mov x9, v28.d[0] *)
  [`X14`]; (* 564: sbcs x7, x7, x14 *)
  [`X15`]; (* 565: sbcs x8, x15, xzr *)
  []; (* 566: sbcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 567: sbc x14, x17, xzr *)
  [`X9`]; (* 568: adds x17, x9, x9 *)
  []; (* 569: adcs x12, x12, x12 *)
  []; (* 570: mov x15, v19.d[0] *)
  [`X16`]; (* 571: adcs x9, x16, x16 *)
  []; (* 572: umulh x6, x6, x6 *)
  [`X2`]; (* 573: adcs x16, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 574: adc x2, xzr, xzr *)
  [`X8`]; (* 575: adds x11, x11, x8 *)
  []; (* 576: adcs x3, x3, xzr *)
  []; (* 577: adcs x14, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 578: adcs x8, xzr, xzr *)
  [`X1`]; (* 579: adds x13, x1, x13 *)
  [`Q19`]; (* 580: mov x1, v19.d[1] *)
  [`X4`]; (* 581: adcs x6, x4, x6 *)
  []; (* 582: mov x4, #0xffffffff *)
  [`X7`]; (* 583: adcs x15, x7, x15 *)
  [`X11`; `X5`]; (* 584: adcs x7, x11, x5 *)
  [`X3`]; (* 585: adcs x1, x3, x1 *)
  [`X10`]; (* 586: adcs x14, x14, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 587: adc x11, x8, xzr *)
  [`X17`]; (* 588: adds x6, x6, x17 *)
  [`X12`; `X15`]; (* 589: adcs x8, x15, x12 *)
  [`X7`; `X9`]; (* 590: adcs x3, x7, x9 *)
  [`X1`; `X16`]; (* 591: adcs x15, x1, x16 *)
  []; (* 592: mov x16, #0xffffffff00000001 *)
  [`X2`]; (* 593: adcs x14, x14, x2 *)
  []; (* 594: mov x2, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 595: adc x17, x11, xzr *)
  []; (* 596: cmn x13, x16 *)
  []; (* 597: adcs xzr, x6, x4 *)
  []; (* 598: adcs xzr, x8, x2 *)
  []; (* 599: adcs xzr, x3, xzr *)
  []; (* 600: adcs xzr, x15, xzr *)
  []; (* 601: adcs xzr, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 602: adc x1, x17, xzr *)
  [`X1`]; (* 603: neg x9, x1 *)
  [`X16`]; (* 604: and x1, x16, x9 *)
  [`X1`; `X13`]; (* 605: adds x11, x13, x1 *)
  [`X4`]; (* 606: and x13, x4, x9 *)
  [`X13`; `X6`]; (* 607: adcs x5, x6, x13 *)
  [`X2`; `X9`]; (* 608: and x1, x2, x9 *)
  [`X1`; `X8`]; (* 609: adcs x7, x8, x1 *)
  [`X11`; `X5`]; (* 610: stp x11, x5, [sp, #48] *)
  [`X3`]; (* 611: adcs x11, x3, xzr *)
  [`X15`]; (* 612: adcs x2, x15, xzr *)
  [`X11`; `X7`]; (* 613: stp x7, x11, [sp, #64] *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 614: adc x17, x14, xzr *)
  [`X17`; `X2`]; (* 615: stp x2, x17, [sp, #80] *)
  []; (* 616: ldp x5, x6, [x26] *)
  []; (* 617: ldp x4, x3, [sp] *)
  [`X4`]; (* 618: adds x5, x5, x4 *)
  [`X3`]; (* 619: adcs x6, x6, x3 *)
  []; (* 620: ldp x7, x8, [x26, #16] *)
  []; (* 621: ldp x4, x3, [sp, #16] *)
  [`X4`]; (* 622: adcs x7, x7, x4 *)
  [`X3`]; (* 623: adcs x8, x8, x3 *)
  []; (* 624: ldp x9, x10, [x26, #32] *)
  []; (* 625: ldp x4, x3, [sp, #32] *)
  [`X4`]; (* 626: adcs x9, x9, x4 *)
  [`X3`]; (* 627: adcs x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 628: csetm x3, cs *)
  []; (* 629: mov x4, #0xffffffff *)
  []; (* 630: and x4, x4, x3 *)
  []; (* 631: subs x5, x5, x4 *)
  []; (* 632: eor x4, x4, x3 *)
  [`X4`]; (* 633: sbcs x6, x6, x4 *)
  []; (* 634: mov x4, #0xfffffffffffffffe *)
  []; (* 635: and x4, x4, x3 *)
  [`X4`]; (* 636: sbcs x7, x7, x4 *)
  []; (* 637: sbcs x8, x8, x3 *)
  []; (* 638: sbcs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 639: sbc x10, x10, x3 *)
  [`X5`; `X6`]; (* 640: stp x5, x6, [sp, #240] *)
  [`X7`; `X8`]; (* 641: stp x7, x8, [sp, #256] *)
  [`X10`; `X9`]; (* 642: stp x9, x10, [sp, #272] *)
  []; (* 643: mov x2, sp *)
  []; (* 644: ldp x5, x6, [x26, #0] *)
  []; (* 645: ldp x4, x3, [x2] *)
  [`X4`]; (* 646: subs x5, x5, x4 *)
  [`X3`]; (* 647: sbcs x6, x6, x3 *)
  []; (* 648: ldp x7, x8, [x26, #16] *)
  []; (* 649: ldp x4, x3, [x2, #16] *)
  [`X4`]; (* 650: sbcs x7, x7, x4 *)
  [`X3`]; (* 651: sbcs x8, x8, x3 *)
  []; (* 652: ldp x9, x10, [x26, #32] *)
  [`X2`]; (* 653: ldp x4, x3, [x2, #32] *)
  [`X4`]; (* 654: sbcs x9, x9, x4 *)
  [`X3`]; (* 655: sbcs x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 656: csetm x3, cc *)
  []; (* 657: mov x4, #0xffffffff *)
  []; (* 658: and x4, x4, x3 *)
  [`X5`]; (* 659: adds x13, x5, x4 *)
  []; (* 660: eor x4, x4, x3 *)
  [`X4`; `X6`]; (* 661: adcs x23, x6, x4 *)
  []; (* 662: mov x4, #0xfffffffffffffffe *)
  []; (* 663: and x4, x4, x3 *)
  [`X4`]; (* 664: adcs x7, x7, x4 *)
  []; (* 665: adcs x8, x8, x3 *)
  []; (* 666: adcs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 667: adc x10, x10, x3 *)
  []; (* 668: stp x13, x23, [sp, #192] *)
  [`X7`; `X8`]; (* 669: stp x7, x8, [sp, #208] *)
  [`X10`; `X9`]; (* 670: stp x9, x10, [sp, #224] *)
  []; (* 671: ldr q3, [sp, #240] *)
  []; (* 672: ldr q25, [sp, #192] *)
  []; (* 673: ldp x3, x21, [sp, #240] *)
  []; (* 674: rev64 v23.4s, v25.4s *)
  [`Q25`]; (* 675: uzp1 v17.4s, v25.4s, v3.4s *)
  []; (* 676: umulh x15, x3, x13 *)
  [`Q23`]; (* 677: mul v6.4s, v23.4s, v3.4s *)
  []; (* 678: uzp1 v3.4s, v3.4s, v3.4s *)
  []; (* 679: ldr q27, [sp, #224] *)
  []; (* 680: ldp x8, x24, [sp, #256] *)
  []; (* 681: subs x6, x3, x21 *)
  []; (* 682: ldr q0, [sp, #272] *)
  []; (* 683: movi v23.2d, #0xffffffff *)
  []; (* 684: csetm x10, cc *)
  []; (* 685: umulh x19, x21, x23 *)
  []; (* 686: rev64 v4.4s, v27.4s *)
  []; (* 687: uzp2 v25.4s, v27.4s, v27.4s *)
  [`CF`; `NF`; `ZF`; `VF`; `X6`]; (* 688: cneg x4, x6, cc *)
  []; (* 689: subs x7, x23, x13 *)
  []; (* 690: xtn v22.2s, v0.2d *)
  [`Q27`]; (* 691: xtn v24.2s, v27.2d *)
  [`X7`]; (* 692: cneg x20, x7, cc *)
  []; (* 693: ldp x6, x14, [sp, #208] *)
  [`Q4`]; (* 694: mul v27.4s, v4.4s, v0.4s *)
  [`Q6`]; (* 695: uaddlp v20.2d, v6.4s *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 696: cinv x5, x10, cc *)
  []; (* 697: mul x16, x4, x20 *)
  [`Q0`]; (* 698: uzp2 v6.4s, v0.4s, v0.4s *)
  []; (* 699: umull v21.2d, v22.2s, v25.2s *)
  [`Q20`]; (* 700: shl v0.2d, v20.2d, #32 *)
  [`Q17`; `Q3`]; (* 701: umlal v0.2d, v3.2s, v17.2s *)
  []; (* 702: mul x22, x8, x6 *)
  [`Q25`]; (* 703: umull v1.2d, v6.2s, v25.2s *)
  []; (* 704: subs x12, x3, x8 *)
  []; (* 705: umull v20.2d, v22.2s, v24.2s *)
  [`X12`]; (* 706: cneg x17, x12, cc *)
  []; (* 707: umulh x9, x8, x6 *)
  []; (* 708: mov x12, v0.d[1] *)
  [`X16`]; (* 709: eor x11, x16, x5 *)
  [`Q0`]; (* 710: mov x7, v0.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 711: csetm x10, cc *)
  [`Q20`]; (* 712: usra v21.2d, v20.2d, #32 *)
  [`X12`]; (* 713: adds x15, x15, x12 *)
  [`X19`; `X22`]; (* 714: adcs x12, x19, x22 *)
  [`X4`]; (* 715: umulh x20, x4, x20 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 716: adc x19, x9, xzr *)
  []; (* 717: usra v1.2d, v21.2d, #32 *)
  []; (* 718: adds x22, x15, x7 *)
  [`Q21`; `Q23`]; (* 719: and v26.16b, v21.16b, v23.16b *)
  []; (* 720: adcs x16, x12, x15 *)
  [`Q27`]; (* 721: uaddlp v25.2d, v27.4s *)
  []; (* 722: adcs x9, x19, x12 *)
  [`Q6`]; (* 723: umlal v26.2d, v6.2s, v24.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 724: adc x4, x19, xzr *)
  []; (* 725: adds x16, x16, x7 *)
  [`Q25`]; (* 726: shl v27.2d, v25.2d, #32 *)
  [`X15`]; (* 727: adcs x9, x9, x15 *)
  [`X12`]; (* 728: adcs x4, x4, x12 *)
  [`X20`]; (* 729: eor x12, x20, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`]; (* 730: adc x15, x19, xzr *)
  []; (* 731: subs x20, x6, x13 *)
  []; (* 732: cneg x20, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 733: cinv x10, x10, cc *)
  []; (* 734: cmn x5, #0x1 *)
  []; (* 735: mul x19, x17, x20 *)
  [`X22`]; (* 736: adcs x11, x22, x11 *)
  [`X16`]; (* 737: adcs x12, x16, x12 *)
  []; (* 738: adcs x9, x9, x5 *)
  [`X20`]; (* 739: umulh x17, x17, x20 *)
  [`X4`]; (* 740: adcs x22, x4, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 741: adc x5, x15, x5 *)
  []; (* 742: subs x16, x21, x8 *)
  [`X16`]; (* 743: cneg x20, x16, cc *)
  []; (* 744: eor x19, x19, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 745: csetm x4, cc *)
  []; (* 746: subs x16, x6, x23 *)
  []; (* 747: cneg x16, x16, cc *)
  [`Q22`; `Q24`]; (* 748: umlal v27.2d, v22.2s, v24.2s *)
  []; (* 749: mul x15, x20, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 750: cinv x4, x4, cc *)
  []; (* 751: cmn x10, #0x1 *)
  [`Q26`]; (* 752: usra v1.2d, v26.2d, #32 *)
  [`X12`]; (* 753: adcs x19, x12, x19 *)
  []; (* 754: eor x17, x17, x10 *)
  [`X17`]; (* 755: adcs x9, x9, x17 *)
  []; (* 756: adcs x22, x22, x10 *)
  []; (* 757: lsl x12, x7, #32 *)
  [`X16`]; (* 758: umulh x20, x20, x16 *)
  [`X15`]; (* 759: eor x16, x15, x4 *)
  []; (* 760: ldp x15, x17, [sp, #224] *)
  [`X12`; `X7`]; (* 761: add x2, x12, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`; `X5`]; (* 762: adc x7, x5, x10 *)
  []; (* 763: ldp x5, x10, [sp, #272] *)
  []; (* 764: lsr x1, x2, #32 *)
  [`X20`]; (* 765: eor x12, x20, x4 *)
  []; (* 766: subs x1, x1, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 767: sbc x20, x2, xzr *)
  []; (* 768: cmn x4, #0x1 *)
  [`X16`]; (* 769: adcs x9, x9, x16 *)
  []; (* 770: extr x1, x20, x1, #32 *)
  []; (* 771: lsr x20, x20, #32 *)
  [`X12`]; (* 772: adcs x22, x22, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X7`]; (* 773: adc x16, x7, x4 *)
  [`X20`]; (* 774: adds x12, x20, x2 *)
  []; (* 775: umulh x7, x24, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 776: adc x4, xzr, xzr *)
  [`X11`]; (* 777: subs x1, x11, x1 *)
  [`X12`; `X19`]; (* 778: sbcs x20, x19, x12 *)
  [`X4`; `X9`]; (* 779: sbcs x12, x9, x4 *)
  []; (* 780: lsl x9, x1, #32 *)
  [`X9`]; (* 781: add x1, x9, x1 *)
  [`X22`]; (* 782: sbcs x9, x22, xzr *)
  []; (* 783: mul x22, x24, x14 *)
  []; (* 784: sbcs x16, x16, xzr *)
  []; (* 785: lsr x4, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 786: sbc x19, x2, xzr *)
  []; (* 787: subs x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 788: sbc x11, x1, xzr *)
  [`X4`]; (* 789: extr x2, x11, x4, #32 *)
  [`X11`]; (* 790: lsr x4, x11, #32 *)
  []; (* 791: adds x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 792: adc x11, xzr, xzr *)
  [`X20`]; (* 793: subs x2, x20, x2 *)
  [`X12`]; (* 794: sbcs x4, x12, x4 *)
  [`X11`; `X9`]; (* 795: sbcs x20, x9, x11 *)
  []; (* 796: lsl x12, x2, #32 *)
  [`X12`]; (* 797: add x2, x12, x2 *)
  [`X16`]; (* 798: sbcs x9, x16, xzr *)
  []; (* 799: lsr x11, x2, #32 *)
  []; (* 800: sbcs x19, x19, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 801: sbc x1, x1, xzr *)
  [`X11`]; (* 802: subs x16, x11, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 803: sbc x12, x2, xzr *)
  []; (* 804: extr x16, x12, x16, #32 *)
  []; (* 805: lsr x12, x12, #32 *)
  [`X12`]; (* 806: adds x11, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 807: adc x12, xzr, xzr *)
  [`X4`]; (* 808: subs x16, x4, x16 *)
  []; (* 809: mov x4, v27.d[0] *)
  [`X20`]; (* 810: sbcs x11, x20, x11 *)
  [`X12`; `X9`]; (* 811: sbcs x20, x9, x12 *)
  [`X11`; `X16`]; (* 812: stp x16, x11, [sp, #96] *)
  [`X19`]; (* 813: sbcs x11, x19, xzr *)
  [`X1`]; (* 814: sbcs x9, x1, xzr *)
  [`X11`; `X20`]; (* 815: stp x20, x11, [sp, #112] *)
  []; (* 816: mov x1, v1.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 817: sbc x20, x2, xzr *)
  []; (* 818: subs x12, x24, x5 *)
  [`Q27`]; (* 819: mov x11, v27.d[1] *)
  [`X12`]; (* 820: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 821: csetm x2, cc *)
  []; (* 822: subs x19, x15, x14 *)
  [`Q1`]; (* 823: mov x12, v1.d[1] *)
  []; (* 824: cinv x2, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 825: cneg x19, x19, cc *)
  [`X20`; `X9`]; (* 826: stp x9, x20, [sp, #128] *)
  []; (* 827: mul x9, x16, x19 *)
  [`X7`]; (* 828: adds x4, x7, x4 *)
  [`X1`]; (* 829: adcs x11, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 830: adc x1, x12, xzr *)
  []; (* 831: adds x20, x4, x22 *)
  [`X16`]; (* 832: umulh x19, x16, x19 *)
  []; (* 833: adcs x7, x11, x4 *)
  [`X9`]; (* 834: eor x16, x9, x2 *)
  []; (* 835: adcs x9, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 836: adc x12, x1, xzr *)
  []; (* 837: adds x7, x7, x22 *)
  [`X9`]; (* 838: adcs x4, x9, x4 *)
  [`X11`; `X12`]; (* 839: adcs x9, x12, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 840: adc x12, x1, xzr *)
  []; (* 841: cmn x2, #0x1 *)
  [`X19`]; (* 842: eor x1, x19, x2 *)
  [`X16`; `X20`]; (* 843: adcs x11, x20, x16 *)
  [`X1`; `X7`]; (* 844: adcs x19, x7, x1 *)
  [`X4`]; (* 845: adcs x1, x4, x2 *)
  [`X9`]; (* 846: adcs x20, x9, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 847: adc x2, x12, x2 *)
  []; (* 848: subs x12, x24, x10 *)
  [`X12`]; (* 849: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 850: csetm x12, cc *)
  []; (* 851: subs x9, x17, x14 *)
  []; (* 852: cinv x12, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 853: cneg x9, x9, cc *)
  [`X24`]; (* 854: subs x3, x24, x3 *)
  []; (* 855: sbcs x21, x5, x21 *)
  []; (* 856: mul x24, x16, x9 *)
  [`X8`]; (* 857: sbcs x4, x10, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 858: ngc x8, xzr *)
  [`X5`]; (* 859: subs x10, x5, x10 *)
  [`X24`]; (* 860: eor x5, x24, x12 *)
  []; (* 861: csetm x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 862: cneg x24, x10, cc *)
  []; (* 863: subs x10, x17, x15 *)
  []; (* 864: cinv x7, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 865: cneg x10, x10, cc *)
  [`X13`]; (* 866: subs x14, x13, x14 *)
  [`X23`]; (* 867: sbcs x15, x23, x15 *)
  [`X21`]; (* 868: eor x13, x21, x8 *)
  []; (* 869: mul x23, x24, x10 *)
  [`X6`]; (* 870: sbcs x17, x6, x17 *)
  [`X3`]; (* 871: eor x6, x3, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 872: ngc x21, xzr *)
  [`X16`]; (* 873: umulh x9, x16, x9 *)
  []; (* 874: cmn x8, #0x1 *)
  [`X23`]; (* 875: eor x3, x23, x7 *)
  [`X6`]; (* 876: adcs x23, x6, xzr *)
  []; (* 877: adcs x13, x13, xzr *)
  [`X4`]; (* 878: eor x16, x4, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 879: adc x16, x16, xzr *)
  [`X17`]; (* 880: eor x4, x17, x21 *)
  [`X10`; `X24`]; (* 881: umulh x17, x24, x10 *)
  []; (* 882: cmn x21, #0x1 *)
  [`X14`]; (* 883: eor x24, x14, x21 *)
  [`X15`]; (* 884: eor x6, x15, x21 *)
  [`X24`]; (* 885: adcs x15, x24, xzr *)
  [`X6`]; (* 886: adcs x14, x6, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 887: adc x6, x4, xzr *)
  []; (* 888: cmn x12, #0x1 *)
  [`X9`]; (* 889: eor x4, x9, x12 *)
  [`X5`]; (* 890: adcs x19, x19, x5 *)
  []; (* 891: umulh x5, x23, x15 *)
  [`X4`]; (* 892: adcs x1, x1, x4 *)
  [`X20`]; (* 893: adcs x10, x20, x12 *)
  [`X17`]; (* 894: eor x4, x17, x7 *)
  []; (* 895: ldp x20, x9, [sp, #96] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 896: adc x2, x2, x12 *)
  []; (* 897: cmn x7, #0x1 *)
  [`X1`; `X3`]; (* 898: adcs x12, x1, x3 *)
  []; (* 899: ldp x17, x24, [sp, #112] *)
  []; (* 900: mul x1, x16, x6 *)
  [`X10`; `X4`]; (* 901: adcs x3, x10, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 902: adc x2, x2, x7 *)
  []; (* 903: ldp x7, x4, [sp, #128] *)
  [`X22`]; (* 904: adds x20, x22, x20 *)
  []; (* 905: mul x10, x13, x14 *)
  [`X9`]; (* 906: adcs x11, x11, x9 *)
  [`X21`; `X8`]; (* 907: eor x9, x8, x21 *)
  [`X17`; `X19`]; (* 908: adcs x21, x19, x17 *)
  [`X11`; `X20`]; (* 909: stp x20, x11, [sp, #96] *)
  [`X24`]; (* 910: adcs x12, x12, x24 *)
  []; (* 911: mul x8, x23, x15 *)
  [`X7`]; (* 912: adcs x3, x3, x7 *)
  [`X12`; `X21`]; (* 913: stp x21, x12, [sp, #112] *)
  [`X2`; `X4`]; (* 914: adcs x12, x2, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 915: adc x19, xzr, xzr *)
  []; (* 916: subs x21, x23, x16 *)
  []; (* 917: umulh x2, x16, x6 *)
  [`X12`; `X3`]; (* 918: stp x3, x12, [sp, #128] *)
  [`X21`]; (* 919: cneg x3, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 920: csetm x24, cc *)
  []; (* 921: umulh x11, x13, x14 *)
  [`X16`]; (* 922: subs x21, x13, x16 *)
  []; (* 923: eor x7, x8, x9 *)
  [`X21`]; (* 924: cneg x17, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 925: csetm x16, cc *)
  []; (* 926: subs x21, x6, x15 *)
  [`X21`]; (* 927: cneg x22, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`]; (* 928: cinv x21, x24, cc *)
  [`X13`; `X23`]; (* 929: subs x20, x23, x13 *)
  []; (* 930: umulh x12, x3, x22 *)
  [`X20`]; (* 931: cneg x23, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 932: csetm x24, cc *)
  [`X15`]; (* 933: subs x20, x14, x15 *)
  []; (* 934: cinv x24, x24, cc *)
  [`X3`]; (* 935: mul x22, x3, x22 *)
  [`CF`; `NF`; `ZF`; `VF`; `X20`]; (* 936: cneg x3, x20, cc *)
  [`X14`; `X6`]; (* 937: subs x13, x6, x14 *)
  [`X13`]; (* 938: cneg x20, x13, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 939: cinv x15, x16, cc *)
  [`X10`; `X5`]; (* 940: adds x13, x5, x10 *)
  []; (* 941: mul x4, x23, x3 *)
  [`X1`]; (* 942: adcs x11, x11, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 943: adc x14, x2, xzr *)
  []; (* 944: adds x5, x13, x8 *)
  []; (* 945: adcs x16, x11, x13 *)
  [`X3`]; (* 946: umulh x23, x23, x3 *)
  []; (* 947: adcs x3, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 948: adc x1, x14, xzr *)
  [`X16`; `X8`]; (* 949: adds x10, x16, x8 *)
  [`X13`; `X3`]; (* 950: adcs x6, x3, x13 *)
  [`X1`; `X11`]; (* 951: adcs x8, x1, x11 *)
  []; (* 952: umulh x13, x17, x20 *)
  [`X4`]; (* 953: eor x1, x4, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 954: adc x4, x14, xzr *)
  []; (* 955: cmn x24, #0x1 *)
  [`X5`]; (* 956: adcs x1, x5, x1 *)
  [`X23`]; (* 957: eor x16, x23, x24 *)
  [`X1`]; (* 958: eor x11, x1, x9 *)
  [`X10`; `X16`]; (* 959: adcs x23, x10, x16 *)
  [`X22`]; (* 960: eor x2, x22, x21 *)
  [`X6`]; (* 961: adcs x3, x6, x24 *)
  [`X17`; `X20`]; (* 962: mul x14, x17, x20 *)
  [`X13`]; (* 963: eor x17, x13, x15 *)
  [`X8`]; (* 964: adcs x13, x8, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`; `X4`]; (* 965: adc x8, x4, x24 *)
  []; (* 966: cmn x21, #0x1 *)
  [`X2`; `X23`]; (* 967: adcs x6, x23, x2 *)
  []; (* 968: mov x16, #0xfffffffffffffffe *)
  [`X12`]; (* 969: eor x20, x12, x21 *)
  [`X3`]; (* 970: adcs x20, x3, x20 *)
  [`X14`]; (* 971: eor x23, x14, x15 *)
  [`X13`]; (* 972: adcs x2, x13, x21 *)
  [`CF`; `NF`; `ZF`; `VF`; `X21`]; (* 973: adc x8, x8, x21 *)
  []; (* 974: cmn x15, #0x1 *)
  []; (* 975: ldp x5, x4, [sp, #96] *)
  []; (* 976: ldp x21, x12, [sp, #112] *)
  [`X20`; `X23`]; (* 977: adcs x22, x20, x23 *)
  [`X22`]; (* 978: eor x23, x22, x9 *)
  [`X2`]; (* 979: adcs x17, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X8`]; (* 980: adc x22, x8, x15 *)
  []; (* 981: cmn x9, #0x1 *)
  [`X7`]; (* 982: adcs x15, x7, x5 *)
  []; (* 983: ldp x10, x14, [sp, #128] *)
  [`X6`]; (* 984: eor x1, x6, x9 *)
  []; (* 985: lsl x2, x15, #32 *)
  [`X11`]; (* 986: adcs x8, x11, x4 *)
  [`X1`]; (* 987: adcs x13, x1, x21 *)
  [`X22`]; (* 988: eor x1, x22, x9 *)
  [`X23`]; (* 989: adcs x24, x23, x12 *)
  [`X17`]; (* 990: eor x11, x17, x9 *)
  [`X11`]; (* 991: adcs x23, x11, x10 *)
  [`X1`]; (* 992: adcs x7, x1, x14 *)
  []; (* 993: adcs x17, x9, x19 *)
  []; (* 994: adcs x20, x9, xzr *)
  [`X15`; `X2`]; (* 995: add x1, x2, x15 *)
  []; (* 996: lsr x3, x1, #32 *)
  []; (* 997: adcs x11, x9, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 998: adc x9, x9, xzr *)
  []; (* 999: subs x3, x3, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1000: sbc x6, x1, xzr *)
  [`X5`]; (* 1001: adds x24, x24, x5 *)
  [`X23`]; (* 1002: adcs x4, x23, x4 *)
  []; (* 1003: extr x3, x6, x3, #32 *)
  []; (* 1004: lsr x6, x6, #32 *)
  [`X7`]; (* 1005: adcs x21, x7, x21 *)
  [`X12`; `X17`]; (* 1006: adcs x15, x17, x12 *)
  [`X10`; `X20`]; (* 1007: adcs x7, x20, x10 *)
  [`X11`; `X14`]; (* 1008: adcs x20, x11, x14 *)
  []; (* 1009: mov x14, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`; `X9`]; (* 1010: adc x22, x9, x19 *)
  [`X6`]; (* 1011: adds x12, x6, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1012: adc x10, xzr, xzr *)
  [`X8`]; (* 1013: subs x3, x8, x3 *)
  [`X13`]; (* 1014: sbcs x12, x13, x12 *)
  []; (* 1015: lsl x9, x3, #32 *)
  [`X9`]; (* 1016: add x3, x9, x3 *)
  [`X24`]; (* 1017: sbcs x10, x24, x10 *)
  [`X4`]; (* 1018: sbcs x24, x4, xzr *)
  []; (* 1019: lsr x9, x3, #32 *)
  []; (* 1020: sbcs x21, x21, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1021: sbc x1, x1, xzr *)
  []; (* 1022: subs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1023: sbc x13, x3, xzr *)
  []; (* 1024: extr x9, x13, x9, #32 *)
  []; (* 1025: lsr x13, x13, #32 *)
  []; (* 1026: adds x13, x13, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1027: adc x6, xzr, xzr *)
  [`X9`]; (* 1028: subs x12, x12, x9 *)
  [`X10`; `X13`]; (* 1029: sbcs x17, x10, x13 *)
  []; (* 1030: lsl x2, x12, #32 *)
  [`X24`; `X6`]; (* 1031: sbcs x10, x24, x6 *)
  [`X12`; `X2`]; (* 1032: add x9, x2, x12 *)
  [`X21`]; (* 1033: sbcs x6, x21, xzr *)
  []; (* 1034: lsr x5, x9, #32 *)
  [`X1`]; (* 1035: sbcs x21, x1, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1036: sbc x13, x3, xzr *)
  [`X5`]; (* 1037: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1038: sbc x19, x9, xzr *)
  []; (* 1039: lsr x12, x19, #32 *)
  [`X19`; `X8`]; (* 1040: extr x3, x19, x8, #32 *)
  [`X12`]; (* 1041: adds x8, x12, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1042: adc x1, xzr, xzr *)
  [`X17`; `X3`]; (* 1043: subs x2, x17, x3 *)
  [`X10`; `X8`]; (* 1044: sbcs x12, x10, x8 *)
  [`X1`; `X6`]; (* 1045: sbcs x5, x6, x1 *)
  [`X21`]; (* 1046: sbcs x3, x21, xzr *)
  [`X13`]; (* 1047: sbcs x19, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1048: sbc x24, x9, xzr *)
  [`X15`; `X3`]; (* 1049: adds x23, x15, x3 *)
  [`X19`; `X7`]; (* 1050: adcs x8, x7, x19 *)
  [`X20`; `X24`]; (* 1051: adcs x11, x20, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X22`]; (* 1052: adc x9, x22, xzr *)
  [`X9`]; (* 1053: add x24, x9, #0x1 *)
  []; (* 1054: lsl x7, x24, #32 *)
  []; (* 1055: subs x21, x24, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 1056: sbc x10, x7, xzr *)
  [`X2`; `X21`]; (* 1057: adds x6, x2, x21 *)
  [`X10`; `X12`]; (* 1058: adcs x7, x12, x10 *)
  [`X5`]; (* 1059: adcs x24, x5, x24 *)
  [`X23`]; (* 1060: adcs x13, x23, xzr *)
  []; (* 1061: adcs x8, x8, xzr *)
  [`X11`]; (* 1062: adcs x15, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1063: csetm x23, cc *)
  [`X16`]; (* 1064: and x11, x16, x23 *)
  [`X14`]; (* 1065: and x20, x14, x23 *)
  [`X6`]; (* 1066: adds x22, x6, x20 *)
  [`X20`]; (* 1067: eor x3, x20, x23 *)
  [`X3`; `X7`]; (* 1068: adcs x5, x7, x3 *)
  [`X11`; `X24`]; (* 1069: adcs x14, x24, x11 *)
  [`X22`; `X5`]; (* 1070: stp x22, x5, [sp, #96] *)
  [`X13`]; (* 1071: adcs x5, x13, x23 *)
  [`X8`]; (* 1072: adcs x21, x8, x23 *)
  [`X14`; `X5`]; (* 1073: stp x14, x5, [sp, #112] *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X23`]; (* 1074: adc x12, x15, x23 *)
  [`X12`; `X21`]; (* 1075: stp x21, x12, [sp, #128] *)
  []; (* 1076: ldp x5, x6, [x26, #48] *)
  []; (* 1077: ldp x4, x3, [x26, #96] *)
  [`X4`]; (* 1078: adds x5, x5, x4 *)
  [`X3`]; (* 1079: adcs x6, x6, x3 *)
  []; (* 1080: ldp x7, x8, [x26, #64] *)
  []; (* 1081: ldp x4, x3, [x26, #112] *)
  [`X4`]; (* 1082: adcs x7, x7, x4 *)
  [`X3`]; (* 1083: adcs x8, x8, x3 *)
  []; (* 1084: ldp x9, x10, [x26, #80] *)
  []; (* 1085: ldp x4, x3, [x26, #128] *)
  [`X4`]; (* 1086: adcs x9, x9, x4 *)
  [`X3`]; (* 1087: adcs x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1088: adc x3, xzr, xzr *)
  []; (* 1089: mov x4, #0xffffffff *)
  [`X4`]; (* 1090: cmp x5, x4 *)
  []; (* 1091: mov x4, #0xffffffff00000000 *)
  [`X4`]; (* 1092: sbcs xzr, x6, x4 *)
  []; (* 1093: mov x4, #0xfffffffffffffffe *)
  [`X4`]; (* 1094: sbcs xzr, x7, x4 *)
  []; (* 1095: adcs xzr, x8, xzr *)
  []; (* 1096: adcs xzr, x9, xzr *)
  []; (* 1097: adcs xzr, x10, xzr *)
  [`X3`]; (* 1098: adcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1099: csetm x3, ne *)
  []; (* 1100: mov x4, #0xffffffff *)
  []; (* 1101: and x4, x4, x3 *)
  []; (* 1102: subs x5, x5, x4 *)
  []; (* 1103: eor x4, x4, x3 *)
  [`X4`]; (* 1104: sbcs x6, x6, x4 *)
  []; (* 1105: mov x4, #0xfffffffffffffffe *)
  []; (* 1106: and x4, x4, x3 *)
  [`X4`]; (* 1107: sbcs x7, x7, x4 *)
  []; (* 1108: sbcs x8, x8, x3 *)
  []; (* 1109: sbcs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1110: sbc x10, x10, x3 *)
  [`X5`; `X6`]; (* 1111: stp x5, x6, [sp, #240] *)
  [`X7`; `X8`]; (* 1112: stp x7, x8, [sp, #256] *)
  [`X10`; `X9`]; (* 1113: stp x9, x10, [sp, #272] *)
  []; (* 1114: ldr q1, [sp, #96] *)
  []; (* 1115: ldp x9, x2, [sp, #96] *)
  []; (* 1116: ldr q0, [sp, #96] *)
  []; (* 1117: ldp x4, x6, [sp, #112] *)
  []; (* 1118: rev64 v21.4s, v1.4s *)
  []; (* 1119: uzp2 v28.4s, v1.4s, v1.4s *)
  []; (* 1120: umulh x7, x9, x2 *)
  [`Q1`]; (* 1121: xtn v17.2s, v1.2d *)
  [`Q21`]; (* 1122: mul v27.4s, v21.4s, v0.4s *)
  []; (* 1123: ldr q20, [sp, #128] *)
  []; (* 1124: xtn v30.2s, v0.2d *)
  []; (* 1125: ldr q1, [sp, #128] *)
  [`Q0`]; (* 1126: uzp2 v31.4s, v0.4s, v0.4s *)
  []; (* 1127: ldp x5, x10, [sp, #128] *)
  []; (* 1128: umulh x8, x9, x4 *)
  [`Q27`]; (* 1129: uaddlp v3.2d, v27.4s *)
  []; (* 1130: umull v16.2d, v30.2s, v17.2s *)
  []; (* 1131: mul x16, x9, x4 *)
  []; (* 1132: umull v27.2d, v30.2s, v28.2s *)
  []; (* 1133: shrn v0.2s, v20.2d, #32 *)
  [`Q20`]; (* 1134: xtn v7.2s, v20.2d *)
  [`Q3`]; (* 1135: shl v20.2d, v3.2d, #32 *)
  [`Q28`]; (* 1136: umull v3.2d, v31.2s, v28.2s *)
  []; (* 1137: mul x3, x2, x4 *)
  [`Q30`]; (* 1138: umlal v20.2d, v30.2s, v17.2s *)
  [`Q0`]; (* 1139: umull v22.2d, v7.2s, v0.2s *)
  [`Q16`]; (* 1140: usra v27.2d, v16.2d, #32 *)
  []; (* 1141: umulh x11, x2, x4 *)
  []; (* 1142: movi v21.2d, #0xffffffff *)
  []; (* 1143: uzp2 v28.4s, v1.4s, v1.4s *)
  [`X16`; `X7`]; (* 1144: adds x15, x16, x7 *)
  [`Q21`]; (* 1145: and v5.16b, v27.16b, v21.16b *)
  [`X8`]; (* 1146: adcs x3, x3, x8 *)
  [`Q27`]; (* 1147: usra v3.2d, v27.2d, #32 *)
  []; (* 1148: dup v29.2d, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1149: adcs x16, x11, xzr *)
  []; (* 1150: mov x14, v20.d[0] *)
  [`Q17`; `Q31`]; (* 1151: umlal v5.2d, v31.2s, v17.2s *)
  []; (* 1152: mul x8, x9, x2 *)
  [`Q20`]; (* 1153: mov x7, v20.d[1] *)
  [`Q22`]; (* 1154: shl v19.2d, v22.2d, #33 *)
  []; (* 1155: xtn v25.2s, v29.2d *)
  []; (* 1156: rev64 v31.4s, v1.4s *)
  []; (* 1157: lsl x13, x14, #32 *)
  []; (* 1158: uzp2 v6.4s, v29.4s, v29.4s *)
  [`Q7`]; (* 1159: umlal v19.2d, v7.2s, v7.2s *)
  [`Q5`]; (* 1160: usra v3.2d, v5.2d, #32 *)
  [`X8`]; (* 1161: adds x1, x8, x8 *)
  []; (* 1162: umulh x8, x4, x4 *)
  [`X13`; `X14`]; (* 1163: add x12, x13, x14 *)
  [`Q29`; `Q31`]; (* 1164: mul v17.4s, v31.4s, v29.4s *)
  [`Q1`]; (* 1165: xtn v4.2s, v1.2d *)
  [`X15`]; (* 1166: adcs x14, x15, x15 *)
  []; (* 1167: lsr x13, x12, #32 *)
  [`X3`]; (* 1168: adcs x15, x3, x3 *)
  []; (* 1169: umull v31.2d, v25.2s, v28.2s *)
  [`X16`]; (* 1170: adcs x11, x16, x16 *)
  []; (* 1171: umull v21.2d, v25.2s, v4.2s *)
  []; (* 1172: mov x17, v3.d[0] *)
  [`Q28`]; (* 1173: umull v18.2d, v6.2s, v28.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1174: adc x16, x8, xzr *)
  [`Q17`]; (* 1175: uaddlp v16.2d, v17.4s *)
  []; (* 1176: movi v1.2d, #0xffffffff *)
  []; (* 1177: subs x13, x13, x12 *)
  [`Q21`]; (* 1178: usra v31.2d, v21.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1179: sbc x8, x12, xzr *)
  [`X1`]; (* 1180: adds x17, x17, x1 *)
  []; (* 1181: mul x1, x4, x4 *)
  [`Q16`]; (* 1182: shl v28.2d, v16.2d, #32 *)
  [`Q3`]; (* 1183: mov x3, v3.d[1] *)
  [`X7`]; (* 1184: adcs x14, x7, x14 *)
  [`X13`]; (* 1185: extr x7, x8, x13, #32 *)
  [`X15`; `X3`]; (* 1186: adcs x13, x3, x15 *)
  [`Q1`]; (* 1187: and v3.16b, v31.16b, v1.16b *)
  [`X1`]; (* 1188: adcs x11, x1, x11 *)
  [`X8`]; (* 1189: lsr x1, x8, #32 *)
  [`Q6`]; (* 1190: umlal v3.2d, v6.2s, v4.2s *)
  [`Q31`]; (* 1191: usra v18.2d, v31.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1192: adc x3, x16, xzr *)
  []; (* 1193: adds x1, x1, x12 *)
  [`Q25`; `Q4`]; (* 1194: umlal v28.2d, v25.2s, v4.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1195: adc x16, xzr, xzr *)
  [`X17`; `X7`]; (* 1196: subs x15, x17, x7 *)
  [`X1`; `X14`]; (* 1197: sbcs x7, x14, x1 *)
  []; (* 1198: lsl x1, x15, #32 *)
  [`X13`]; (* 1199: sbcs x16, x13, x16 *)
  [`X1`; `X15`]; (* 1200: add x8, x1, x15 *)
  [`Q3`]; (* 1201: usra v18.2d, v3.2d, #32 *)
  [`X11`]; (* 1202: sbcs x14, x11, xzr *)
  []; (* 1203: lsr x1, x8, #32 *)
  [`X3`]; (* 1204: sbcs x17, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1205: sbc x11, x12, xzr *)
  [`X1`]; (* 1206: subs x13, x1, x8 *)
  []; (* 1207: umulh x12, x4, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1208: sbc x1, x8, xzr *)
  []; (* 1209: extr x13, x1, x13, #32 *)
  []; (* 1210: lsr x1, x1, #32 *)
  [`X1`]; (* 1211: adds x15, x1, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1212: adc x1, xzr, xzr *)
  [`X13`]; (* 1213: subs x7, x7, x13 *)
  [`X15`; `X16`]; (* 1214: sbcs x13, x16, x15 *)
  []; (* 1215: lsl x3, x7, #32 *)
  []; (* 1216: umulh x16, x2, x5 *)
  [`X1`; `X14`]; (* 1217: sbcs x15, x14, x1 *)
  [`X3`]; (* 1218: add x7, x3, x7 *)
  [`X17`]; (* 1219: sbcs x3, x17, xzr *)
  []; (* 1220: lsr x1, x7, #32 *)
  [`X11`]; (* 1221: sbcs x14, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1222: sbc x11, x8, xzr *)
  [`X1`]; (* 1223: subs x8, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1224: sbc x1, x7, xzr *)
  []; (* 1225: extr x8, x1, x8, #32 *)
  []; (* 1226: lsr x1, x1, #32 *)
  []; (* 1227: adds x1, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1228: adc x17, xzr, xzr *)
  [`X8`]; (* 1229: subs x13, x13, x8 *)
  []; (* 1230: umulh x8, x9, x6 *)
  [`X15`]; (* 1231: sbcs x1, x15, x1 *)
  [`X17`; `X3`]; (* 1232: sbcs x15, x3, x17 *)
  [`X14`]; (* 1233: sbcs x3, x14, xzr *)
  []; (* 1234: mul x17, x2, x5 *)
  []; (* 1235: sbcs x11, x11, xzr *)
  [`X1`; `X13`]; (* 1236: stp x13, x1, [sp, #288] *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 1237: sbc x14, x7, xzr *)
  []; (* 1238: mul x7, x4, x10 *)
  []; (* 1239: subs x1, x9, x2 *)
  [`X15`; `X3`]; (* 1240: stp x15, x3, [sp, #304] *)
  []; (* 1241: csetm x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1242: cneg x1, x1, cc *)
  [`X11`; `X14`]; (* 1243: stp x11, x14, [sp, #320] *)
  []; (* 1244: mul x14, x9, x6 *)
  [`X8`]; (* 1245: adds x17, x8, x17 *)
  [`X16`]; (* 1246: adcs x7, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1247: adc x13, x12, xzr *)
  []; (* 1248: subs x12, x5, x6 *)
  [`X12`]; (* 1249: cneg x3, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1250: cinv x16, x15, cc *)
  []; (* 1251: mul x8, x1, x3 *)
  [`X3`]; (* 1252: umulh x1, x1, x3 *)
  [`X8`]; (* 1253: eor x12, x8, x16 *)
  []; (* 1254: adds x11, x17, x14 *)
  []; (* 1255: adcs x3, x7, x17 *)
  []; (* 1256: adcs x15, x13, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1257: adc x8, x13, xzr *)
  []; (* 1258: adds x3, x3, x14 *)
  [`X17`]; (* 1259: adcs x15, x15, x17 *)
  [`X7`; `X8`]; (* 1260: adcs x17, x8, x7 *)
  []; (* 1261: eor x1, x1, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1262: adc x13, x13, xzr *)
  []; (* 1263: subs x9, x9, x4 *)
  []; (* 1264: csetm x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1265: cneg x9, x9, cc *)
  [`X2`]; (* 1266: subs x4, x2, x4 *)
  []; (* 1267: cneg x4, x4, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1268: csetm x7, cc *)
  []; (* 1269: subs x2, x10, x6 *)
  []; (* 1270: cinv x8, x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1271: cneg x2, x2, cc *)
  []; (* 1272: cmn x16, #0x1 *)
  [`X12`]; (* 1273: adcs x11, x11, x12 *)
  []; (* 1274: mul x12, x9, x2 *)
  [`X1`]; (* 1275: adcs x3, x3, x1 *)
  []; (* 1276: adcs x15, x15, x16 *)
  [`X2`]; (* 1277: umulh x9, x9, x2 *)
  []; (* 1278: adcs x17, x17, x16 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1279: adc x13, x13, x16 *)
  []; (* 1280: subs x1, x10, x5 *)
  [`X7`]; (* 1281: cinv x2, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1282: cneg x1, x1, cc *)
  []; (* 1283: eor x9, x9, x8 *)
  []; (* 1284: cmn x8, #0x1 *)
  [`X12`]; (* 1285: eor x7, x12, x8 *)
  []; (* 1286: mul x12, x4, x1 *)
  [`X7`]; (* 1287: adcs x3, x3, x7 *)
  [`X15`; `X9`]; (* 1288: adcs x7, x15, x9 *)
  [`X17`]; (* 1289: adcs x15, x17, x8 *)
  []; (* 1290: ldp x9, x17, [sp, #304] *)
  [`X1`]; (* 1291: umulh x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 1292: adc x8, x13, x8 *)
  []; (* 1293: cmn x2, #0x1 *)
  [`X12`]; (* 1294: eor x1, x12, x2 *)
  [`X7`]; (* 1295: adcs x1, x7, x1 *)
  []; (* 1296: ldp x7, x16, [sp, #288] *)
  [`X4`]; (* 1297: eor x12, x4, x2 *)
  [`X12`; `X15`]; (* 1298: adcs x4, x15, x12 *)
  []; (* 1299: ldp x15, x12, [sp, #320] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 1300: adc x8, x8, x2 *)
  [`X14`]; (* 1301: adds x13, x14, x14 *)
  []; (* 1302: umulh x14, x5, x10 *)
  [`X11`]; (* 1303: adcs x2, x11, x11 *)
  []; (* 1304: adcs x3, x3, x3 *)
  []; (* 1305: adcs x1, x1, x1 *)
  []; (* 1306: adcs x4, x4, x4 *)
  [`X8`]; (* 1307: adcs x11, x8, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1308: adc x8, xzr, xzr *)
  [`X7`]; (* 1309: adds x13, x13, x7 *)
  [`X16`]; (* 1310: adcs x2, x2, x16 *)
  []; (* 1311: mul x16, x5, x10 *)
  [`X9`]; (* 1312: adcs x3, x3, x9 *)
  [`X17`]; (* 1313: adcs x1, x1, x17 *)
  []; (* 1314: umulh x5, x5, x5 *)
  []; (* 1315: lsl x9, x13, #32 *)
  [`X13`]; (* 1316: add x9, x9, x13 *)
  [`X15`]; (* 1317: adcs x4, x4, x15 *)
  []; (* 1318: mov x13, v28.d[1] *)
  [`X11`; `X12`]; (* 1319: adcs x15, x11, x12 *)
  []; (* 1320: lsr x7, x9, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1321: adc x11, x8, xzr *)
  []; (* 1322: subs x7, x7, x9 *)
  []; (* 1323: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1324: sbc x17, x9, xzr *)
  []; (* 1325: extr x7, x17, x7, #32 *)
  []; (* 1326: lsr x17, x17, #32 *)
  []; (* 1327: adds x17, x17, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1328: adc x12, xzr, xzr *)
  [`X2`; `X7`]; (* 1329: subs x8, x2, x7 *)
  [`X3`]; (* 1330: sbcs x17, x3, x17 *)
  []; (* 1331: lsl x7, x8, #32 *)
  [`X1`; `X12`]; (* 1332: sbcs x2, x1, x12 *)
  [`X7`; `X8`]; (* 1333: add x3, x7, x8 *)
  [`X4`]; (* 1334: sbcs x12, x4, xzr *)
  []; (* 1335: lsr x1, x3, #32 *)
  [`X15`]; (* 1336: sbcs x7, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1337: sbc x15, x9, xzr *)
  []; (* 1338: subs x1, x1, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1339: sbc x4, x3, xzr *)
  []; (* 1340: lsr x9, x4, #32 *)
  [`X1`; `X4`]; (* 1341: extr x8, x4, x1, #32 *)
  []; (* 1342: adds x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1343: adc x4, xzr, xzr *)
  [`X17`; `X8`]; (* 1344: subs x1, x17, x8 *)
  []; (* 1345: lsl x17, x1, #32 *)
  [`X2`; `X9`]; (* 1346: sbcs x8, x2, x9 *)
  [`X12`; `X4`]; (* 1347: sbcs x9, x12, x4 *)
  [`X1`]; (* 1348: add x17, x17, x1 *)
  []; (* 1349: mov x1, v18.d[1] *)
  []; (* 1350: lsr x2, x17, #32 *)
  []; (* 1351: sbcs x7, x7, xzr *)
  [`Q18`]; (* 1352: mov x12, v18.d[0] *)
  []; (* 1353: sbcs x15, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1354: sbc x3, x3, xzr *)
  [`X2`]; (* 1355: subs x4, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1356: sbc x2, x17, xzr *)
  [`X13`]; (* 1357: adds x12, x13, x12 *)
  [`X1`]; (* 1358: adcs x16, x16, x1 *)
  []; (* 1359: lsr x13, x2, #32 *)
  [`X2`; `X4`]; (* 1360: extr x1, x2, x4, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1361: adc x2, x14, xzr *)
  [`X13`]; (* 1362: adds x4, x13, x17 *)
  []; (* 1363: mul x13, x6, x6 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1364: adc x14, xzr, xzr *)
  [`X8`]; (* 1365: subs x1, x8, x1 *)
  [`X9`]; (* 1366: sbcs x4, x9, x4 *)
  [`Q28`]; (* 1367: mov x9, v28.d[0] *)
  [`X14`]; (* 1368: sbcs x7, x7, x14 *)
  [`X15`]; (* 1369: sbcs x8, x15, xzr *)
  []; (* 1370: sbcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1371: sbc x14, x17, xzr *)
  [`X9`]; (* 1372: adds x17, x9, x9 *)
  []; (* 1373: adcs x12, x12, x12 *)
  []; (* 1374: mov x15, v19.d[0] *)
  [`X16`]; (* 1375: adcs x9, x16, x16 *)
  []; (* 1376: umulh x6, x6, x6 *)
  [`X2`]; (* 1377: adcs x16, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1378: adc x2, xzr, xzr *)
  [`X8`]; (* 1379: adds x11, x11, x8 *)
  []; (* 1380: adcs x3, x3, xzr *)
  []; (* 1381: adcs x14, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1382: adcs x8, xzr, xzr *)
  [`X1`]; (* 1383: adds x13, x1, x13 *)
  [`Q19`]; (* 1384: mov x1, v19.d[1] *)
  [`X4`]; (* 1385: adcs x6, x4, x6 *)
  []; (* 1386: mov x4, #0xffffffff *)
  [`X7`]; (* 1387: adcs x15, x7, x15 *)
  [`X11`; `X5`]; (* 1388: adcs x7, x11, x5 *)
  [`X3`]; (* 1389: adcs x1, x3, x1 *)
  [`X10`]; (* 1390: adcs x14, x14, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1391: adc x11, x8, xzr *)
  [`X17`]; (* 1392: adds x6, x6, x17 *)
  [`X12`; `X15`]; (* 1393: adcs x8, x15, x12 *)
  [`X7`; `X9`]; (* 1394: adcs x3, x7, x9 *)
  [`X1`; `X16`]; (* 1395: adcs x15, x1, x16 *)
  []; (* 1396: mov x16, #0xffffffff00000001 *)
  [`X2`]; (* 1397: adcs x14, x14, x2 *)
  []; (* 1398: mov x2, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1399: adc x17, x11, xzr *)
  []; (* 1400: cmn x13, x16 *)
  []; (* 1401: adcs xzr, x6, x4 *)
  []; (* 1402: adcs xzr, x8, x2 *)
  []; (* 1403: adcs xzr, x3, xzr *)
  []; (* 1404: adcs xzr, x15, xzr *)
  []; (* 1405: adcs xzr, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1406: adc x1, x17, xzr *)
  [`X1`]; (* 1407: neg x9, x1 *)
  [`X16`]; (* 1408: and x1, x16, x9 *)
  [`X1`; `X13`]; (* 1409: adds x11, x13, x1 *)
  [`X4`]; (* 1410: and x13, x4, x9 *)
  [`X13`; `X6`]; (* 1411: adcs x5, x6, x13 *)
  [`X2`; `X9`]; (* 1412: and x1, x2, x9 *)
  [`X1`; `X8`]; (* 1413: adcs x7, x8, x1 *)
  [`X11`; `X5`]; (* 1414: stp x11, x5, [sp, #288] *)
  [`X3`]; (* 1415: adcs x11, x3, xzr *)
  [`X15`]; (* 1416: adcs x2, x15, xzr *)
  [`X11`; `X7`]; (* 1417: stp x7, x11, [sp, #304] *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1418: adc x17, x14, xzr *)
  [`X17`; `X2`]; (* 1419: stp x2, x17, [sp, #320] *)
  []; (* 1420: ldr q3, [x26, #0] *)
  []; (* 1421: ldr q25, [sp, #48] *)
  []; (* 1422: ldp x13, x23, [sp, #48] *)
  []; (* 1423: ldp x3, x21, [x26, #0] *)
  []; (* 1424: rev64 v23.4s, v25.4s *)
  [`Q25`]; (* 1425: uzp1 v17.4s, v25.4s, v3.4s *)
  []; (* 1426: umulh x15, x3, x13 *)
  [`Q23`]; (* 1427: mul v6.4s, v23.4s, v3.4s *)
  []; (* 1428: uzp1 v3.4s, v3.4s, v3.4s *)
  []; (* 1429: ldr q27, [sp, #80] *)
  []; (* 1430: ldp x8, x24, [x26, #16] *)
  []; (* 1431: subs x6, x3, x21 *)
  []; (* 1432: ldr q0, [x26, #32] *)
  []; (* 1433: movi v23.2d, #0xffffffff *)
  []; (* 1434: csetm x10, cc *)
  []; (* 1435: umulh x19, x21, x23 *)
  []; (* 1436: rev64 v4.4s, v27.4s *)
  []; (* 1437: uzp2 v25.4s, v27.4s, v27.4s *)
  [`CF`; `NF`; `ZF`; `VF`; `X6`]; (* 1438: cneg x4, x6, cc *)
  []; (* 1439: subs x7, x23, x13 *)
  []; (* 1440: xtn v22.2s, v0.2d *)
  [`Q27`]; (* 1441: xtn v24.2s, v27.2d *)
  [`X7`]; (* 1442: cneg x20, x7, cc *)
  []; (* 1443: ldp x6, x14, [sp, #64] *)
  [`Q4`]; (* 1444: mul v27.4s, v4.4s, v0.4s *)
  [`Q6`]; (* 1445: uaddlp v20.2d, v6.4s *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 1446: cinv x5, x10, cc *)
  []; (* 1447: mul x16, x4, x20 *)
  [`Q0`]; (* 1448: uzp2 v6.4s, v0.4s, v0.4s *)
  []; (* 1449: umull v21.2d, v22.2s, v25.2s *)
  [`Q20`]; (* 1450: shl v0.2d, v20.2d, #32 *)
  [`Q17`; `Q3`]; (* 1451: umlal v0.2d, v3.2s, v17.2s *)
  []; (* 1452: mul x22, x8, x6 *)
  [`Q25`]; (* 1453: umull v1.2d, v6.2s, v25.2s *)
  []; (* 1454: subs x12, x3, x8 *)
  []; (* 1455: umull v20.2d, v22.2s, v24.2s *)
  [`X12`]; (* 1456: cneg x17, x12, cc *)
  []; (* 1457: umulh x9, x8, x6 *)
  []; (* 1458: mov x12, v0.d[1] *)
  [`X16`]; (* 1459: eor x11, x16, x5 *)
  [`Q0`]; (* 1460: mov x7, v0.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1461: csetm x10, cc *)
  [`Q20`]; (* 1462: usra v21.2d, v20.2d, #32 *)
  [`X12`]; (* 1463: adds x15, x15, x12 *)
  [`X19`; `X22`]; (* 1464: adcs x12, x19, x22 *)
  [`X4`]; (* 1465: umulh x20, x4, x20 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1466: adc x19, x9, xzr *)
  []; (* 1467: usra v1.2d, v21.2d, #32 *)
  []; (* 1468: adds x22, x15, x7 *)
  [`Q21`; `Q23`]; (* 1469: and v26.16b, v21.16b, v23.16b *)
  []; (* 1470: adcs x16, x12, x15 *)
  [`Q27`]; (* 1471: uaddlp v25.2d, v27.4s *)
  []; (* 1472: adcs x9, x19, x12 *)
  [`Q6`]; (* 1473: umlal v26.2d, v6.2s, v24.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1474: adc x4, x19, xzr *)
  []; (* 1475: adds x16, x16, x7 *)
  [`Q25`]; (* 1476: shl v27.2d, v25.2d, #32 *)
  [`X15`]; (* 1477: adcs x9, x9, x15 *)
  [`X12`]; (* 1478: adcs x4, x4, x12 *)
  [`X20`]; (* 1479: eor x12, x20, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`]; (* 1480: adc x15, x19, xzr *)
  []; (* 1481: subs x20, x6, x13 *)
  []; (* 1482: cneg x20, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1483: cinv x10, x10, cc *)
  []; (* 1484: cmn x5, #0x1 *)
  []; (* 1485: mul x19, x17, x20 *)
  [`X22`]; (* 1486: adcs x11, x22, x11 *)
  [`X16`]; (* 1487: adcs x12, x16, x12 *)
  []; (* 1488: adcs x9, x9, x5 *)
  [`X20`]; (* 1489: umulh x17, x17, x20 *)
  [`X4`]; (* 1490: adcs x22, x4, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1491: adc x5, x15, x5 *)
  []; (* 1492: subs x16, x21, x8 *)
  [`X16`]; (* 1493: cneg x20, x16, cc *)
  []; (* 1494: eor x19, x19, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1495: csetm x4, cc *)
  []; (* 1496: subs x16, x6, x23 *)
  []; (* 1497: cneg x16, x16, cc *)
  [`Q22`; `Q24`]; (* 1498: umlal v27.2d, v22.2s, v24.2s *)
  []; (* 1499: mul x15, x20, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1500: cinv x4, x4, cc *)
  []; (* 1501: cmn x10, #0x1 *)
  [`Q26`]; (* 1502: usra v1.2d, v26.2d, #32 *)
  [`X12`]; (* 1503: adcs x19, x12, x19 *)
  []; (* 1504: eor x17, x17, x10 *)
  [`X17`]; (* 1505: adcs x9, x9, x17 *)
  []; (* 1506: adcs x22, x22, x10 *)
  []; (* 1507: lsl x12, x7, #32 *)
  [`X16`]; (* 1508: umulh x20, x20, x16 *)
  [`X15`]; (* 1509: eor x16, x15, x4 *)
  []; (* 1510: ldp x15, x17, [sp, #80] *)
  [`X12`; `X7`]; (* 1511: add x2, x12, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`; `X5`]; (* 1512: adc x7, x5, x10 *)
  [`X26`]; (* 1513: ldp x5, x10, [x26, #32] *)
  []; (* 1514: lsr x1, x2, #32 *)
  [`X20`]; (* 1515: eor x12, x20, x4 *)
  []; (* 1516: subs x1, x1, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1517: sbc x20, x2, xzr *)
  []; (* 1518: cmn x4, #0x1 *)
  [`X16`]; (* 1519: adcs x9, x9, x16 *)
  []; (* 1520: extr x1, x20, x1, #32 *)
  []; (* 1521: lsr x20, x20, #32 *)
  [`X12`]; (* 1522: adcs x22, x22, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X7`]; (* 1523: adc x16, x7, x4 *)
  [`X20`]; (* 1524: adds x12, x20, x2 *)
  []; (* 1525: umulh x7, x24, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1526: adc x4, xzr, xzr *)
  [`X11`]; (* 1527: subs x1, x11, x1 *)
  [`X12`; `X19`]; (* 1528: sbcs x20, x19, x12 *)
  [`X4`; `X9`]; (* 1529: sbcs x12, x9, x4 *)
  []; (* 1530: lsl x9, x1, #32 *)
  [`X9`]; (* 1531: add x1, x9, x1 *)
  [`X22`]; (* 1532: sbcs x9, x22, xzr *)
  []; (* 1533: mul x22, x24, x14 *)
  []; (* 1534: sbcs x16, x16, xzr *)
  []; (* 1535: lsr x4, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 1536: sbc x19, x2, xzr *)
  []; (* 1537: subs x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1538: sbc x11, x1, xzr *)
  [`X4`]; (* 1539: extr x2, x11, x4, #32 *)
  [`X11`]; (* 1540: lsr x4, x11, #32 *)
  []; (* 1541: adds x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1542: adc x11, xzr, xzr *)
  [`X20`]; (* 1543: subs x2, x20, x2 *)
  [`X12`]; (* 1544: sbcs x4, x12, x4 *)
  [`X11`; `X9`]; (* 1545: sbcs x20, x9, x11 *)
  []; (* 1546: lsl x12, x2, #32 *)
  [`X12`]; (* 1547: add x2, x12, x2 *)
  [`X16`]; (* 1548: sbcs x9, x16, xzr *)
  []; (* 1549: lsr x11, x2, #32 *)
  []; (* 1550: sbcs x19, x19, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1551: sbc x1, x1, xzr *)
  [`X11`]; (* 1552: subs x16, x11, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1553: sbc x12, x2, xzr *)
  []; (* 1554: extr x16, x12, x16, #32 *)
  []; (* 1555: lsr x12, x12, #32 *)
  [`X12`]; (* 1556: adds x11, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1557: adc x12, xzr, xzr *)
  [`X16`; `X4`]; (* 1558: subs x26, x4, x16 *)
  []; (* 1559: mov x4, v27.d[0] *)
  [`X11`; `X20`]; (* 1560: sbcs x27, x20, x11 *)
  [`X12`; `X9`]; (* 1561: sbcs x20, x9, x12 *)
  [`X19`]; (* 1562: sbcs x11, x19, xzr *)
  [`X1`]; (* 1563: sbcs x9, x1, xzr *)
  [`X11`; `X20`]; (* 1564: stp x20, x11, [sp, #160] *)
  []; (* 1565: mov x1, v1.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 1566: sbc x20, x2, xzr *)
  []; (* 1567: subs x12, x24, x5 *)
  [`Q27`]; (* 1568: mov x11, v27.d[1] *)
  [`X12`]; (* 1569: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1570: csetm x2, cc *)
  []; (* 1571: subs x19, x15, x14 *)
  [`Q1`]; (* 1572: mov x12, v1.d[1] *)
  []; (* 1573: cinv x2, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1574: cneg x19, x19, cc *)
  [`X20`; `X9`]; (* 1575: stp x9, x20, [sp, #176] *)
  []; (* 1576: mul x9, x16, x19 *)
  [`X7`]; (* 1577: adds x4, x7, x4 *)
  [`X1`]; (* 1578: adcs x11, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1579: adc x1, x12, xzr *)
  []; (* 1580: adds x20, x4, x22 *)
  [`X16`]; (* 1581: umulh x19, x16, x19 *)
  []; (* 1582: adcs x7, x11, x4 *)
  [`X9`]; (* 1583: eor x16, x9, x2 *)
  []; (* 1584: adcs x9, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1585: adc x12, x1, xzr *)
  []; (* 1586: adds x7, x7, x22 *)
  [`X9`]; (* 1587: adcs x4, x9, x4 *)
  [`X11`; `X12`]; (* 1588: adcs x9, x12, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1589: adc x12, x1, xzr *)
  []; (* 1590: cmn x2, #0x1 *)
  [`X19`]; (* 1591: eor x1, x19, x2 *)
  [`X16`; `X20`]; (* 1592: adcs x11, x20, x16 *)
  [`X1`; `X7`]; (* 1593: adcs x19, x7, x1 *)
  [`X4`]; (* 1594: adcs x1, x4, x2 *)
  [`X9`]; (* 1595: adcs x20, x9, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1596: adc x2, x12, x2 *)
  []; (* 1597: subs x12, x24, x10 *)
  [`X12`]; (* 1598: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1599: csetm x12, cc *)
  []; (* 1600: subs x9, x17, x14 *)
  []; (* 1601: cinv x12, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1602: cneg x9, x9, cc *)
  [`X24`]; (* 1603: subs x3, x24, x3 *)
  []; (* 1604: sbcs x21, x5, x21 *)
  []; (* 1605: mul x24, x16, x9 *)
  [`X8`]; (* 1606: sbcs x4, x10, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1607: ngc x8, xzr *)
  [`X5`]; (* 1608: subs x10, x5, x10 *)
  [`X24`]; (* 1609: eor x5, x24, x12 *)
  []; (* 1610: csetm x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 1611: cneg x24, x10, cc *)
  []; (* 1612: subs x10, x17, x15 *)
  []; (* 1613: cinv x7, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1614: cneg x10, x10, cc *)
  [`X13`]; (* 1615: subs x14, x13, x14 *)
  [`X23`]; (* 1616: sbcs x15, x23, x15 *)
  [`X21`]; (* 1617: eor x13, x21, x8 *)
  []; (* 1618: mul x23, x24, x10 *)
  [`X6`]; (* 1619: sbcs x17, x6, x17 *)
  [`X3`]; (* 1620: eor x6, x3, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1621: ngc x21, xzr *)
  [`X16`]; (* 1622: umulh x9, x16, x9 *)
  []; (* 1623: cmn x8, #0x1 *)
  [`X23`]; (* 1624: eor x3, x23, x7 *)
  [`X6`]; (* 1625: adcs x23, x6, xzr *)
  []; (* 1626: adcs x13, x13, xzr *)
  [`X4`]; (* 1627: eor x16, x4, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1628: adc x16, x16, xzr *)
  [`X17`]; (* 1629: eor x4, x17, x21 *)
  [`X10`; `X24`]; (* 1630: umulh x17, x24, x10 *)
  []; (* 1631: cmn x21, #0x1 *)
  [`X14`]; (* 1632: eor x24, x14, x21 *)
  [`X15`]; (* 1633: eor x6, x15, x21 *)
  [`X24`]; (* 1634: adcs x15, x24, xzr *)
  [`X6`]; (* 1635: adcs x14, x6, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1636: adc x6, x4, xzr *)
  []; (* 1637: cmn x12, #0x1 *)
  [`X9`]; (* 1638: eor x4, x9, x12 *)
  [`X5`]; (* 1639: adcs x19, x19, x5 *)
  []; (* 1640: umulh x5, x23, x15 *)
  [`X4`]; (* 1641: adcs x1, x1, x4 *)
  [`X20`]; (* 1642: adcs x10, x20, x12 *)
  [`X17`]; (* 1643: eor x4, x17, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1644: adc x2, x2, x12 *)
  []; (* 1645: cmn x7, #0x1 *)
  [`X1`; `X3`]; (* 1646: adcs x12, x1, x3 *)
  []; (* 1647: ldp x17, x24, [sp, #160] *)
  []; (* 1648: mul x1, x16, x6 *)
  [`X10`; `X4`]; (* 1649: adcs x3, x10, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 1650: adc x2, x2, x7 *)
  []; (* 1651: ldp x7, x4, [sp, #176] *)
  [`X22`; `X26`]; (* 1652: adds x20, x22, x26 *)
  []; (* 1653: mul x10, x13, x14 *)
  [`X27`]; (* 1654: adcs x11, x11, x27 *)
  [`X21`; `X8`]; (* 1655: eor x9, x8, x21 *)
  [`X17`; `X19`]; (* 1656: adcs x26, x19, x17 *)
  [`X11`; `X20`]; (* 1657: stp x20, x11, [sp, #144] *)
  [`X12`; `X24`]; (* 1658: adcs x27, x12, x24 *)
  []; (* 1659: mul x8, x23, x15 *)
  [`X7`]; (* 1660: adcs x3, x3, x7 *)
  [`X2`; `X4`]; (* 1661: adcs x12, x2, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1662: adc x19, xzr, xzr *)
  []; (* 1663: subs x21, x23, x16 *)
  []; (* 1664: umulh x2, x16, x6 *)
  [`X12`; `X3`]; (* 1665: stp x3, x12, [sp, #176] *)
  [`X21`]; (* 1666: cneg x3, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1667: csetm x24, cc *)
  []; (* 1668: umulh x11, x13, x14 *)
  [`X16`]; (* 1669: subs x21, x13, x16 *)
  []; (* 1670: eor x7, x8, x9 *)
  [`X21`]; (* 1671: cneg x17, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1672: csetm x16, cc *)
  []; (* 1673: subs x21, x6, x15 *)
  [`X21`]; (* 1674: cneg x22, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`]; (* 1675: cinv x21, x24, cc *)
  [`X13`; `X23`]; (* 1676: subs x20, x23, x13 *)
  []; (* 1677: umulh x12, x3, x22 *)
  [`X20`]; (* 1678: cneg x23, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1679: csetm x24, cc *)
  [`X15`]; (* 1680: subs x20, x14, x15 *)
  []; (* 1681: cinv x24, x24, cc *)
  [`X3`]; (* 1682: mul x22, x3, x22 *)
  [`CF`; `NF`; `ZF`; `VF`; `X20`]; (* 1683: cneg x3, x20, cc *)
  [`X14`; `X6`]; (* 1684: subs x13, x6, x14 *)
  [`X13`]; (* 1685: cneg x20, x13, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1686: cinv x15, x16, cc *)
  [`X10`; `X5`]; (* 1687: adds x13, x5, x10 *)
  []; (* 1688: mul x4, x23, x3 *)
  [`X1`]; (* 1689: adcs x11, x11, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 1690: adc x14, x2, xzr *)
  []; (* 1691: adds x5, x13, x8 *)
  []; (* 1692: adcs x16, x11, x13 *)
  [`X3`]; (* 1693: umulh x23, x23, x3 *)
  []; (* 1694: adcs x3, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1695: adc x1, x14, xzr *)
  [`X16`; `X8`]; (* 1696: adds x10, x16, x8 *)
  [`X13`; `X3`]; (* 1697: adcs x6, x3, x13 *)
  [`X1`; `X11`]; (* 1698: adcs x8, x1, x11 *)
  []; (* 1699: umulh x13, x17, x20 *)
  [`X4`]; (* 1700: eor x1, x4, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1701: adc x4, x14, xzr *)
  []; (* 1702: cmn x24, #0x1 *)
  [`X5`]; (* 1703: adcs x1, x5, x1 *)
  [`X23`]; (* 1704: eor x16, x23, x24 *)
  [`X1`]; (* 1705: eor x11, x1, x9 *)
  [`X10`; `X16`]; (* 1706: adcs x23, x10, x16 *)
  [`X22`]; (* 1707: eor x2, x22, x21 *)
  [`X6`]; (* 1708: adcs x3, x6, x24 *)
  [`X17`; `X20`]; (* 1709: mul x14, x17, x20 *)
  [`X13`]; (* 1710: eor x17, x13, x15 *)
  [`X8`]; (* 1711: adcs x13, x8, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`; `X4`]; (* 1712: adc x8, x4, x24 *)
  []; (* 1713: cmn x21, #0x1 *)
  [`X2`; `X23`]; (* 1714: adcs x6, x23, x2 *)
  []; (* 1715: mov x16, #0xfffffffffffffffe *)
  [`X12`]; (* 1716: eor x20, x12, x21 *)
  [`X3`]; (* 1717: adcs x20, x3, x20 *)
  [`X14`]; (* 1718: eor x23, x14, x15 *)
  [`X13`]; (* 1719: adcs x2, x13, x21 *)
  [`CF`; `NF`; `ZF`; `VF`; `X21`]; (* 1720: adc x8, x8, x21 *)
  []; (* 1721: cmn x15, #0x1 *)
  []; (* 1722: ldp x5, x4, [sp, #144] *)
  [`X20`; `X23`]; (* 1723: adcs x22, x20, x23 *)
  [`X22`]; (* 1724: eor x23, x22, x9 *)
  [`X2`]; (* 1725: adcs x17, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X8`]; (* 1726: adc x22, x8, x15 *)
  []; (* 1727: cmn x9, #0x1 *)
  [`X7`]; (* 1728: adcs x15, x7, x5 *)
  []; (* 1729: ldp x10, x14, [sp, #176] *)
  [`X6`]; (* 1730: eor x1, x6, x9 *)
  []; (* 1731: lsl x2, x15, #32 *)
  [`X11`]; (* 1732: adcs x8, x11, x4 *)
  [`X1`]; (* 1733: adcs x13, x1, x26 *)
  [`X22`]; (* 1734: eor x1, x22, x9 *)
  [`X23`]; (* 1735: adcs x24, x23, x27 *)
  [`X17`]; (* 1736: eor x11, x17, x9 *)
  [`X11`]; (* 1737: adcs x23, x11, x10 *)
  [`X1`]; (* 1738: adcs x7, x1, x14 *)
  []; (* 1739: adcs x17, x9, x19 *)
  []; (* 1740: adcs x20, x9, xzr *)
  [`X15`; `X2`]; (* 1741: add x1, x2, x15 *)
  []; (* 1742: lsr x3, x1, #32 *)
  []; (* 1743: adcs x11, x9, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1744: adc x9, x9, xzr *)
  []; (* 1745: subs x3, x3, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1746: sbc x6, x1, xzr *)
  [`X5`]; (* 1747: adds x24, x24, x5 *)
  [`X23`]; (* 1748: adcs x4, x23, x4 *)
  []; (* 1749: extr x3, x6, x3, #32 *)
  []; (* 1750: lsr x6, x6, #32 *)
  [`X26`; `X7`]; (* 1751: adcs x21, x7, x26 *)
  [`X17`; `X27`]; (* 1752: adcs x15, x17, x27 *)
  [`X10`; `X20`]; (* 1753: adcs x7, x20, x10 *)
  [`X11`; `X14`]; (* 1754: adcs x20, x11, x14 *)
  []; (* 1755: mov x14, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`; `X9`]; (* 1756: adc x22, x9, x19 *)
  [`X6`]; (* 1757: adds x12, x6, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1758: adc x10, xzr, xzr *)
  [`X8`]; (* 1759: subs x3, x8, x3 *)
  [`X13`]; (* 1760: sbcs x12, x13, x12 *)
  []; (* 1761: lsl x9, x3, #32 *)
  [`X9`]; (* 1762: add x3, x9, x3 *)
  [`X24`]; (* 1763: sbcs x10, x24, x10 *)
  [`X4`]; (* 1764: sbcs x24, x4, xzr *)
  []; (* 1765: lsr x9, x3, #32 *)
  []; (* 1766: sbcs x21, x21, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1767: sbc x1, x1, xzr *)
  []; (* 1768: subs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1769: sbc x13, x3, xzr *)
  []; (* 1770: extr x9, x13, x9, #32 *)
  []; (* 1771: lsr x13, x13, #32 *)
  []; (* 1772: adds x13, x13, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1773: adc x6, xzr, xzr *)
  [`X9`]; (* 1774: subs x12, x12, x9 *)
  [`X10`; `X13`]; (* 1775: sbcs x17, x10, x13 *)
  []; (* 1776: lsl x2, x12, #32 *)
  [`X24`; `X6`]; (* 1777: sbcs x10, x24, x6 *)
  [`X12`; `X2`]; (* 1778: add x9, x2, x12 *)
  [`X21`]; (* 1779: sbcs x6, x21, xzr *)
  []; (* 1780: lsr x5, x9, #32 *)
  [`X1`]; (* 1781: sbcs x21, x1, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1782: sbc x13, x3, xzr *)
  [`X5`]; (* 1783: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1784: sbc x19, x9, xzr *)
  []; (* 1785: lsr x12, x19, #32 *)
  [`X19`; `X8`]; (* 1786: extr x3, x19, x8, #32 *)
  [`X12`]; (* 1787: adds x8, x12, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1788: adc x1, xzr, xzr *)
  [`X17`; `X3`]; (* 1789: subs x2, x17, x3 *)
  [`X10`; `X8`]; (* 1790: sbcs x12, x10, x8 *)
  [`X1`; `X6`]; (* 1791: sbcs x5, x6, x1 *)
  [`X21`]; (* 1792: sbcs x3, x21, xzr *)
  [`X13`]; (* 1793: sbcs x19, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1794: sbc x24, x9, xzr *)
  [`X15`; `X3`]; (* 1795: adds x23, x15, x3 *)
  [`X19`; `X7`]; (* 1796: adcs x8, x7, x19 *)
  [`X20`; `X24`]; (* 1797: adcs x11, x20, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X22`]; (* 1798: adc x9, x22, xzr *)
  [`X9`]; (* 1799: add x24, x9, #0x1 *)
  []; (* 1800: lsl x7, x24, #32 *)
  []; (* 1801: subs x21, x24, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 1802: sbc x10, x7, xzr *)
  [`X2`; `X21`]; (* 1803: adds x6, x2, x21 *)
  [`X10`; `X12`]; (* 1804: adcs x7, x12, x10 *)
  [`X5`]; (* 1805: adcs x24, x5, x24 *)
  [`X23`]; (* 1806: adcs x13, x23, xzr *)
  []; (* 1807: adcs x8, x8, xzr *)
  [`X11`]; (* 1808: adcs x15, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1809: csetm x23, cc *)
  [`X16`]; (* 1810: and x11, x16, x23 *)
  [`X14`]; (* 1811: and x20, x14, x23 *)
  [`X6`]; (* 1812: adds x22, x6, x20 *)
  [`X20`]; (* 1813: eor x3, x20, x23 *)
  [`X3`; `X7`]; (* 1814: adcs x5, x7, x3 *)
  [`X11`; `X24`]; (* 1815: adcs x14, x24, x11 *)
  [`X22`; `X5`]; (* 1816: stp x22, x5, [sp, #144] *)
  [`X13`]; (* 1817: adcs x5, x13, x23 *)
  [`X8`]; (* 1818: adcs x21, x8, x23 *)
  [`X14`; `X5`]; (* 1819: stp x14, x5, [sp, #160] *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X23`]; (* 1820: adc x12, x15, x23 *)
  [`X12`; `X21`]; (* 1821: stp x21, x12, [sp, #176] *)
  []; (* 1822: ldr q1, [sp, #240] *)
  []; (* 1823: ldp x9, x2, [sp, #240] *)
  []; (* 1824: ldr q0, [sp, #240] *)
  []; (* 1825: ldp x4, x6, [sp, #256] *)
  []; (* 1826: rev64 v21.4s, v1.4s *)
  []; (* 1827: uzp2 v28.4s, v1.4s, v1.4s *)
  []; (* 1828: umulh x7, x9, x2 *)
  [`Q1`]; (* 1829: xtn v17.2s, v1.2d *)
  [`Q21`]; (* 1830: mul v27.4s, v21.4s, v0.4s *)
  []; (* 1831: ldr q20, [sp, #272] *)
  []; (* 1832: xtn v30.2s, v0.2d *)
  []; (* 1833: ldr q1, [sp, #272] *)
  [`Q0`]; (* 1834: uzp2 v31.4s, v0.4s, v0.4s *)
  []; (* 1835: ldp x5, x10, [sp, #272] *)
  []; (* 1836: umulh x8, x9, x4 *)
  [`Q27`]; (* 1837: uaddlp v3.2d, v27.4s *)
  []; (* 1838: umull v16.2d, v30.2s, v17.2s *)
  []; (* 1839: mul x16, x9, x4 *)
  []; (* 1840: umull v27.2d, v30.2s, v28.2s *)
  []; (* 1841: shrn v0.2s, v20.2d, #32 *)
  [`Q20`]; (* 1842: xtn v7.2s, v20.2d *)
  [`Q3`]; (* 1843: shl v20.2d, v3.2d, #32 *)
  [`Q28`]; (* 1844: umull v3.2d, v31.2s, v28.2s *)
  []; (* 1845: mul x3, x2, x4 *)
  [`Q30`]; (* 1846: umlal v20.2d, v30.2s, v17.2s *)
  [`Q0`]; (* 1847: umull v22.2d, v7.2s, v0.2s *)
  [`Q16`]; (* 1848: usra v27.2d, v16.2d, #32 *)
  []; (* 1849: umulh x11, x2, x4 *)
  []; (* 1850: movi v21.2d, #0xffffffff *)
  []; (* 1851: uzp2 v28.4s, v1.4s, v1.4s *)
  [`X16`; `X7`]; (* 1852: adds x15, x16, x7 *)
  [`Q21`]; (* 1853: and v5.16b, v27.16b, v21.16b *)
  [`X8`]; (* 1854: adcs x3, x3, x8 *)
  [`Q27`]; (* 1855: usra v3.2d, v27.2d, #32 *)
  []; (* 1856: dup v29.2d, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1857: adcs x16, x11, xzr *)
  []; (* 1858: mov x14, v20.d[0] *)
  [`Q17`; `Q31`]; (* 1859: umlal v5.2d, v31.2s, v17.2s *)
  []; (* 1860: mul x8, x9, x2 *)
  [`Q20`]; (* 1861: mov x7, v20.d[1] *)
  [`Q22`]; (* 1862: shl v19.2d, v22.2d, #33 *)
  []; (* 1863: xtn v25.2s, v29.2d *)
  []; (* 1864: rev64 v31.4s, v1.4s *)
  []; (* 1865: lsl x13, x14, #32 *)
  []; (* 1866: uzp2 v6.4s, v29.4s, v29.4s *)
  [`Q7`]; (* 1867: umlal v19.2d, v7.2s, v7.2s *)
  [`Q5`]; (* 1868: usra v3.2d, v5.2d, #32 *)
  [`X8`]; (* 1869: adds x1, x8, x8 *)
  []; (* 1870: umulh x8, x4, x4 *)
  [`X13`; `X14`]; (* 1871: add x12, x13, x14 *)
  [`Q29`; `Q31`]; (* 1872: mul v17.4s, v31.4s, v29.4s *)
  [`Q1`]; (* 1873: xtn v4.2s, v1.2d *)
  [`X15`]; (* 1874: adcs x14, x15, x15 *)
  []; (* 1875: lsr x13, x12, #32 *)
  [`X3`]; (* 1876: adcs x15, x3, x3 *)
  []; (* 1877: umull v31.2d, v25.2s, v28.2s *)
  [`X16`]; (* 1878: adcs x11, x16, x16 *)
  []; (* 1879: umull v21.2d, v25.2s, v4.2s *)
  []; (* 1880: mov x17, v3.d[0] *)
  [`Q28`]; (* 1881: umull v18.2d, v6.2s, v28.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1882: adc x16, x8, xzr *)
  [`Q17`]; (* 1883: uaddlp v16.2d, v17.4s *)
  []; (* 1884: movi v1.2d, #0xffffffff *)
  []; (* 1885: subs x13, x13, x12 *)
  [`Q21`]; (* 1886: usra v31.2d, v21.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1887: sbc x8, x12, xzr *)
  [`X1`]; (* 1888: adds x17, x17, x1 *)
  []; (* 1889: mul x1, x4, x4 *)
  [`Q16`]; (* 1890: shl v28.2d, v16.2d, #32 *)
  [`Q3`]; (* 1891: mov x3, v3.d[1] *)
  [`X7`]; (* 1892: adcs x14, x7, x14 *)
  [`X13`]; (* 1893: extr x7, x8, x13, #32 *)
  [`X15`; `X3`]; (* 1894: adcs x13, x3, x15 *)
  [`Q1`]; (* 1895: and v3.16b, v31.16b, v1.16b *)
  [`X1`]; (* 1896: adcs x11, x1, x11 *)
  [`X8`]; (* 1897: lsr x1, x8, #32 *)
  [`Q6`]; (* 1898: umlal v3.2d, v6.2s, v4.2s *)
  [`Q31`]; (* 1899: usra v18.2d, v31.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1900: adc x3, x16, xzr *)
  []; (* 1901: adds x1, x1, x12 *)
  [`Q25`; `Q4`]; (* 1902: umlal v28.2d, v25.2s, v4.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1903: adc x16, xzr, xzr *)
  [`X17`; `X7`]; (* 1904: subs x15, x17, x7 *)
  [`X1`; `X14`]; (* 1905: sbcs x7, x14, x1 *)
  []; (* 1906: lsl x1, x15, #32 *)
  [`X13`]; (* 1907: sbcs x16, x13, x16 *)
  [`X1`; `X15`]; (* 1908: add x8, x1, x15 *)
  [`Q3`]; (* 1909: usra v18.2d, v3.2d, #32 *)
  [`X11`]; (* 1910: sbcs x14, x11, xzr *)
  []; (* 1911: lsr x1, x8, #32 *)
  [`X3`]; (* 1912: sbcs x17, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1913: sbc x11, x12, xzr *)
  [`X1`]; (* 1914: subs x13, x1, x8 *)
  []; (* 1915: umulh x12, x4, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1916: sbc x1, x8, xzr *)
  []; (* 1917: extr x13, x1, x13, #32 *)
  []; (* 1918: lsr x1, x1, #32 *)
  [`X1`]; (* 1919: adds x15, x1, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1920: adc x1, xzr, xzr *)
  [`X13`]; (* 1921: subs x7, x7, x13 *)
  [`X15`; `X16`]; (* 1922: sbcs x13, x16, x15 *)
  []; (* 1923: lsl x3, x7, #32 *)
  []; (* 1924: umulh x16, x2, x5 *)
  [`X1`; `X14`]; (* 1925: sbcs x15, x14, x1 *)
  [`X3`]; (* 1926: add x7, x3, x7 *)
  [`X17`]; (* 1927: sbcs x3, x17, xzr *)
  []; (* 1928: lsr x1, x7, #32 *)
  [`X11`]; (* 1929: sbcs x14, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1930: sbc x11, x8, xzr *)
  [`X1`]; (* 1931: subs x8, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1932: sbc x1, x7, xzr *)
  []; (* 1933: extr x8, x1, x8, #32 *)
  []; (* 1934: lsr x1, x1, #32 *)
  []; (* 1935: adds x1, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1936: adc x17, xzr, xzr *)
  [`X8`]; (* 1937: subs x13, x13, x8 *)
  []; (* 1938: umulh x8, x9, x6 *)
  [`X15`]; (* 1939: sbcs x1, x15, x1 *)
  [`X17`; `X3`]; (* 1940: sbcs x19, x3, x17 *)
  [`X14`]; (* 1941: sbcs x20, x14, xzr *)
  []; (* 1942: mul x17, x2, x5 *)
  []; (* 1943: sbcs x11, x11, xzr *)
  [`X1`; `X13`]; (* 1944: stp x13, x1, [sp, #192] *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 1945: sbc x14, x7, xzr *)
  []; (* 1946: mul x7, x4, x10 *)
  []; (* 1947: subs x1, x9, x2 *)
  []; (* 1948: csetm x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1949: cneg x1, x1, cc *)
  [`X11`; `X14`]; (* 1950: stp x11, x14, [sp, #224] *)
  []; (* 1951: mul x14, x9, x6 *)
  [`X8`]; (* 1952: adds x17, x8, x17 *)
  [`X16`]; (* 1953: adcs x7, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1954: adc x13, x12, xzr *)
  []; (* 1955: subs x12, x5, x6 *)
  [`X12`]; (* 1956: cneg x3, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1957: cinv x16, x15, cc *)
  []; (* 1958: mul x8, x1, x3 *)
  [`X3`]; (* 1959: umulh x1, x1, x3 *)
  [`X8`]; (* 1960: eor x12, x8, x16 *)
  []; (* 1961: adds x11, x17, x14 *)
  []; (* 1962: adcs x3, x7, x17 *)
  []; (* 1963: adcs x15, x13, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1964: adc x8, x13, xzr *)
  []; (* 1965: adds x3, x3, x14 *)
  [`X17`]; (* 1966: adcs x15, x15, x17 *)
  [`X7`; `X8`]; (* 1967: adcs x17, x8, x7 *)
  []; (* 1968: eor x1, x1, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1969: adc x13, x13, xzr *)
  []; (* 1970: subs x9, x9, x4 *)
  []; (* 1971: csetm x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1972: cneg x9, x9, cc *)
  [`X2`]; (* 1973: subs x4, x2, x4 *)
  []; (* 1974: cneg x4, x4, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1975: csetm x7, cc *)
  []; (* 1976: subs x2, x10, x6 *)
  []; (* 1977: cinv x8, x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1978: cneg x2, x2, cc *)
  []; (* 1979: cmn x16, #0x1 *)
  [`X12`]; (* 1980: adcs x11, x11, x12 *)
  []; (* 1981: mul x12, x9, x2 *)
  [`X1`]; (* 1982: adcs x3, x3, x1 *)
  []; (* 1983: adcs x15, x15, x16 *)
  [`X2`]; (* 1984: umulh x9, x9, x2 *)
  []; (* 1985: adcs x17, x17, x16 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1986: adc x13, x13, x16 *)
  []; (* 1987: subs x1, x10, x5 *)
  [`X7`]; (* 1988: cinv x2, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1989: cneg x1, x1, cc *)
  []; (* 1990: eor x9, x9, x8 *)
  []; (* 1991: cmn x8, #0x1 *)
  [`X12`]; (* 1992: eor x7, x12, x8 *)
  []; (* 1993: mul x12, x4, x1 *)
  [`X7`]; (* 1994: adcs x3, x3, x7 *)
  [`X15`; `X9`]; (* 1995: adcs x7, x15, x9 *)
  [`X17`]; (* 1996: adcs x15, x17, x8 *)
  [`X1`]; (* 1997: umulh x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 1998: adc x8, x13, x8 *)
  []; (* 1999: cmn x2, #0x1 *)
  [`X12`]; (* 2000: eor x1, x12, x2 *)
  [`X7`]; (* 2001: adcs x1, x7, x1 *)
  []; (* 2002: ldp x7, x16, [sp, #192] *)
  [`X4`]; (* 2003: eor x12, x4, x2 *)
  [`X12`; `X15`]; (* 2004: adcs x4, x15, x12 *)
  []; (* 2005: ldp x15, x12, [sp, #224] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 2006: adc x8, x8, x2 *)
  [`X14`]; (* 2007: adds x13, x14, x14 *)
  []; (* 2008: umulh x14, x5, x10 *)
  [`X11`]; (* 2009: adcs x2, x11, x11 *)
  []; (* 2010: adcs x3, x3, x3 *)
  []; (* 2011: adcs x1, x1, x1 *)
  []; (* 2012: adcs x4, x4, x4 *)
  [`X8`]; (* 2013: adcs x11, x8, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2014: adc x8, xzr, xzr *)
  [`X7`]; (* 2015: adds x13, x13, x7 *)
  [`X16`]; (* 2016: adcs x2, x2, x16 *)
  []; (* 2017: mul x16, x5, x10 *)
  [`X19`]; (* 2018: adcs x3, x3, x19 *)
  [`X20`]; (* 2019: adcs x1, x1, x20 *)
  []; (* 2020: umulh x5, x5, x5 *)
  []; (* 2021: lsl x9, x13, #32 *)
  [`X13`]; (* 2022: add x9, x9, x13 *)
  [`X15`]; (* 2023: adcs x4, x4, x15 *)
  []; (* 2024: mov x13, v28.d[1] *)
  [`X11`; `X12`]; (* 2025: adcs x15, x11, x12 *)
  []; (* 2026: lsr x7, x9, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 2027: adc x11, x8, xzr *)
  []; (* 2028: subs x7, x7, x9 *)
  []; (* 2029: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2030: sbc x17, x9, xzr *)
  []; (* 2031: extr x7, x17, x7, #32 *)
  []; (* 2032: lsr x17, x17, #32 *)
  []; (* 2033: adds x17, x17, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2034: adc x12, xzr, xzr *)
  [`X2`; `X7`]; (* 2035: subs x8, x2, x7 *)
  [`X3`]; (* 2036: sbcs x17, x3, x17 *)
  []; (* 2037: lsl x7, x8, #32 *)
  [`X1`; `X12`]; (* 2038: sbcs x2, x1, x12 *)
  [`X7`; `X8`]; (* 2039: add x3, x7, x8 *)
  [`X4`]; (* 2040: sbcs x12, x4, xzr *)
  []; (* 2041: lsr x1, x3, #32 *)
  [`X15`]; (* 2042: sbcs x7, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2043: sbc x15, x9, xzr *)
  []; (* 2044: subs x1, x1, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2045: sbc x4, x3, xzr *)
  []; (* 2046: lsr x9, x4, #32 *)
  [`X1`; `X4`]; (* 2047: extr x8, x4, x1, #32 *)
  []; (* 2048: adds x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2049: adc x4, xzr, xzr *)
  [`X17`; `X8`]; (* 2050: subs x1, x17, x8 *)
  []; (* 2051: lsl x17, x1, #32 *)
  [`X2`; `X9`]; (* 2052: sbcs x8, x2, x9 *)
  [`X12`; `X4`]; (* 2053: sbcs x9, x12, x4 *)
  [`X1`]; (* 2054: add x17, x17, x1 *)
  []; (* 2055: mov x1, v18.d[1] *)
  []; (* 2056: lsr x2, x17, #32 *)
  []; (* 2057: sbcs x7, x7, xzr *)
  [`Q18`]; (* 2058: mov x12, v18.d[0] *)
  []; (* 2059: sbcs x15, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2060: sbc x3, x3, xzr *)
  [`X2`]; (* 2061: subs x4, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2062: sbc x2, x17, xzr *)
  [`X13`]; (* 2063: adds x12, x13, x12 *)
  [`X1`]; (* 2064: adcs x16, x16, x1 *)
  []; (* 2065: lsr x13, x2, #32 *)
  [`X2`; `X4`]; (* 2066: extr x1, x2, x4, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2067: adc x2, x14, xzr *)
  [`X13`]; (* 2068: adds x4, x13, x17 *)
  []; (* 2069: mul x13, x6, x6 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2070: adc x14, xzr, xzr *)
  [`X8`]; (* 2071: subs x1, x8, x1 *)
  [`X9`]; (* 2072: sbcs x4, x9, x4 *)
  [`Q28`]; (* 2073: mov x9, v28.d[0] *)
  [`X14`]; (* 2074: sbcs x7, x7, x14 *)
  [`X15`]; (* 2075: sbcs x8, x15, xzr *)
  []; (* 2076: sbcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 2077: sbc x14, x17, xzr *)
  [`X9`]; (* 2078: adds x17, x9, x9 *)
  []; (* 2079: adcs x12, x12, x12 *)
  []; (* 2080: mov x15, v19.d[0] *)
  [`X16`]; (* 2081: adcs x9, x16, x16 *)
  []; (* 2082: umulh x6, x6, x6 *)
  [`X2`]; (* 2083: adcs x16, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2084: adc x2, xzr, xzr *)
  [`X8`]; (* 2085: adds x11, x11, x8 *)
  []; (* 2086: adcs x3, x3, xzr *)
  []; (* 2087: adcs x14, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2088: adcs x8, xzr, xzr *)
  [`X1`]; (* 2089: adds x13, x1, x13 *)
  [`Q19`]; (* 2090: mov x1, v19.d[1] *)
  [`X4`]; (* 2091: adcs x6, x4, x6 *)
  []; (* 2092: mov x4, #0xffffffff *)
  [`X7`]; (* 2093: adcs x15, x7, x15 *)
  [`X11`; `X5`]; (* 2094: adcs x7, x11, x5 *)
  [`X3`]; (* 2095: adcs x1, x3, x1 *)
  [`X10`]; (* 2096: adcs x14, x14, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 2097: adc x11, x8, xzr *)
  [`X17`]; (* 2098: adds x6, x6, x17 *)
  [`X12`; `X15`]; (* 2099: adcs x8, x15, x12 *)
  [`X7`; `X9`]; (* 2100: adcs x3, x7, x9 *)
  [`X1`; `X16`]; (* 2101: adcs x15, x1, x16 *)
  []; (* 2102: mov x16, #0xffffffff00000001 *)
  [`X2`]; (* 2103: adcs x14, x14, x2 *)
  []; (* 2104: mov x2, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2105: adc x17, x11, xzr *)
  []; (* 2106: cmn x13, x16 *)
  []; (* 2107: adcs xzr, x6, x4 *)
  []; (* 2108: adcs xzr, x8, x2 *)
  []; (* 2109: adcs xzr, x3, xzr *)
  []; (* 2110: adcs xzr, x15, xzr *)
  []; (* 2111: adcs xzr, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 2112: adc x1, x17, xzr *)
  [`X1`]; (* 2113: neg x9, x1 *)
  [`X16`]; (* 2114: and x1, x16, x9 *)
  [`X1`; `X13`]; (* 2115: adds x19, x13, x1 *)
  [`X4`]; (* 2116: and x13, x4, x9 *)
  [`X13`; `X6`]; (* 2117: adcs x20, x6, x13 *)
  [`X2`; `X9`]; (* 2118: and x1, x2, x9 *)
  [`X1`; `X8`]; (* 2119: adcs x7, x8, x1 *)
  [`X3`]; (* 2120: adcs x11, x3, xzr *)
  [`X15`]; (* 2121: adcs x2, x15, xzr *)
  [`X11`; `X7`]; (* 2122: stp x7, x11, [sp, #208] *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2123: adc x17, x14, xzr *)
  [`X17`; `X2`]; (* 2124: stp x2, x17, [sp, #224] *)
  []; (* 2125: ldp x0, x1, [sp, #288] *)
  []; (* 2126: mov x6, #0xffffffff *)
  [`X0`]; (* 2127: subs x6, x6, x0 *)
  []; (* 2128: mov x7, #0xffffffff00000000 *)
  [`X1`]; (* 2129: sbcs x7, x7, x1 *)
  []; (* 2130: ldp x0, x1, [sp, #304] *)
  []; (* 2131: mov x8, #0xfffffffffffffffe *)
  [`X0`]; (* 2132: sbcs x8, x8, x0 *)
  []; (* 2133: mov x13, #0xffffffffffffffff *)
  [`X1`]; (* 2134: sbcs x9, x13, x1 *)
  []; (* 2135: ldp x0, x1, [sp, #320] *)
  [`X0`]; (* 2136: sbcs x10, x13, x0 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`; `X13`]; (* 2137: sbc x11, x13, x1 *)
  []; (* 2138: mov x12, #0x9 *)
  []; (* 2139: mul x0, x12, x6 *)
  []; (* 2140: mul x1, x12, x7 *)
  []; (* 2141: mul x2, x12, x8 *)
  []; (* 2142: mul x3, x12, x9 *)
  []; (* 2143: mul x4, x12, x10 *)
  []; (* 2144: mul x5, x12, x11 *)
  []; (* 2145: umulh x6, x12, x6 *)
  []; (* 2146: umulh x7, x12, x7 *)
  []; (* 2147: umulh x8, x12, x8 *)
  []; (* 2148: umulh x9, x12, x9 *)
  []; (* 2149: umulh x10, x12, x10 *)
  [`X11`]; (* 2150: umulh x12, x12, x11 *)
  [`X6`]; (* 2151: adds x1, x1, x6 *)
  [`X7`]; (* 2152: adcs x2, x2, x7 *)
  [`X8`]; (* 2153: adcs x3, x3, x8 *)
  [`X9`]; (* 2154: adcs x4, x4, x9 *)
  [`X10`]; (* 2155: adcs x5, x5, x10 *)
  []; (* 2156: mov x6, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2157: adc x6, x12, x6 *)
  []; (* 2158: ldp x8, x9, [sp, #144] *)
  []; (* 2159: ldp x10, x11, [sp, #160] *)
  []; (* 2160: ldp x12, x13, [sp, #176] *)
  []; (* 2161: mov x14, #0xc *)
  []; (* 2162: mul x15, x14, x8 *)
  []; (* 2163: umulh x8, x14, x8 *)
  [`X15`]; (* 2164: adds x0, x0, x15 *)
  []; (* 2165: mul x15, x14, x9 *)
  []; (* 2166: umulh x9, x14, x9 *)
  [`X15`]; (* 2167: adcs x1, x1, x15 *)
  []; (* 2168: mul x15, x14, x10 *)
  []; (* 2169: umulh x10, x14, x10 *)
  [`X15`]; (* 2170: adcs x2, x2, x15 *)
  []; (* 2171: mul x15, x14, x11 *)
  []; (* 2172: umulh x11, x14, x11 *)
  [`X15`]; (* 2173: adcs x3, x3, x15 *)
  []; (* 2174: mul x15, x14, x12 *)
  []; (* 2175: umulh x12, x14, x12 *)
  [`X15`]; (* 2176: adcs x4, x4, x15 *)
  []; (* 2177: mul x15, x14, x13 *)
  [`X14`]; (* 2178: umulh x13, x14, x13 *)
  [`X15`]; (* 2179: adcs x5, x5, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2180: adc x6, x6, xzr *)
  [`X8`]; (* 2181: adds x1, x1, x8 *)
  [`X9`]; (* 2182: adcs x2, x2, x9 *)
  [`X10`]; (* 2183: adcs x3, x3, x10 *)
  [`X11`]; (* 2184: adcs x4, x4, x11 *)
  [`X12`]; (* 2185: adcs x5, x5, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 2186: adcs x6, x6, x13 *)
  []; (* 2187: lsl x7, x6, #32 *)
  []; (* 2188: subs x8, x6, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2189: sbc x7, x7, xzr *)
  [`X8`]; (* 2190: adds x0, x0, x8 *)
  [`X7`]; (* 2191: adcs x1, x1, x7 *)
  [`X6`]; (* 2192: adcs x2, x2, x6 *)
  []; (* 2193: adcs x3, x3, xzr *)
  []; (* 2194: adcs x4, x4, xzr *)
  []; (* 2195: adcs x5, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2196: csetm x6, cc *)
  []; (* 2197: mov x7, #0xffffffff *)
  []; (* 2198: and x7, x7, x6 *)
  []; (* 2199: adds x0, x0, x7 *)
  []; (* 2200: eor x7, x7, x6 *)
  [`X7`]; (* 2201: adcs x1, x1, x7 *)
  []; (* 2202: mov x7, #0xfffffffffffffffe *)
  []; (* 2203: and x7, x7, x6 *)
  [`X7`]; (* 2204: adcs x2, x2, x7 *)
  []; (* 2205: adcs x3, x3, x6 *)
  []; (* 2206: adcs x4, x4, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X6`]; (* 2207: adc x5, x5, x6 *)
  [`X0`; `X1`]; (* 2208: stp x0, x1, [sp, #288] *)
  [`X2`; `X3`]; (* 2209: stp x2, x3, [sp, #304] *)
  [`X4`; `X5`]; (* 2210: stp x4, x5, [sp, #320] *)
  []; (* 2211: mov x2, sp *)
  []; (* 2212: ldp x4, x3, [x2] *)
  [`X19`; `X4`]; (* 2213: subs x5, x19, x4 *)
  [`X20`; `X3`]; (* 2214: sbcs x6, x20, x3 *)
  []; (* 2215: ldp x7, x8, [sp, #208] *)
  []; (* 2216: ldp x4, x3, [x2, #16] *)
  [`X4`]; (* 2217: sbcs x7, x7, x4 *)
  [`X3`]; (* 2218: sbcs x8, x8, x3 *)
  []; (* 2219: ldp x9, x10, [sp, #224] *)
  [`X2`]; (* 2220: ldp x4, x3, [x2, #32] *)
  [`X4`]; (* 2221: sbcs x9, x9, x4 *)
  [`X3`]; (* 2222: sbcs x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2223: csetm x3, cc *)
  []; (* 2224: mov x4, #0xffffffff *)
  []; (* 2225: and x4, x4, x3 *)
  []; (* 2226: adds x5, x5, x4 *)
  []; (* 2227: eor x4, x4, x3 *)
  [`X4`]; (* 2228: adcs x6, x6, x4 *)
  []; (* 2229: mov x4, #0xfffffffffffffffe *)
  []; (* 2230: and x4, x4, x3 *)
  [`X4`]; (* 2231: adcs x7, x7, x4 *)
  []; (* 2232: adcs x8, x8, x3 *)
  []; (* 2233: adcs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2234: adc x10, x10, x3 *)
  [`X5`; `X6`]; (* 2235: stp x5, x6, [sp, #240] *)
  [`X7`; `X8`]; (* 2236: stp x7, x8, [sp, #256] *)
  [`X10`; `X9`]; (* 2237: stp x9, x10, [sp, #272] *)
  []; (* 2238: ldr q1, [sp, #48] *)
  []; (* 2239: ldp x9, x2, [sp, #48] *)
  []; (* 2240: ldr q0, [sp, #48] *)
  []; (* 2241: ldp x4, x6, [sp, #64] *)
  []; (* 2242: rev64 v21.4s, v1.4s *)
  []; (* 2243: uzp2 v28.4s, v1.4s, v1.4s *)
  []; (* 2244: umulh x7, x9, x2 *)
  [`Q1`]; (* 2245: xtn v17.2s, v1.2d *)
  [`Q21`]; (* 2246: mul v27.4s, v21.4s, v0.4s *)
  []; (* 2247: ldr q20, [sp, #80] *)
  []; (* 2248: xtn v30.2s, v0.2d *)
  []; (* 2249: ldr q1, [sp, #80] *)
  [`Q0`]; (* 2250: uzp2 v31.4s, v0.4s, v0.4s *)
  []; (* 2251: ldp x5, x10, [sp, #80] *)
  []; (* 2252: umulh x8, x9, x4 *)
  [`Q27`]; (* 2253: uaddlp v3.2d, v27.4s *)
  []; (* 2254: umull v16.2d, v30.2s, v17.2s *)
  []; (* 2255: mul x16, x9, x4 *)
  []; (* 2256: umull v27.2d, v30.2s, v28.2s *)
  []; (* 2257: shrn v0.2s, v20.2d, #32 *)
  [`Q20`]; (* 2258: xtn v7.2s, v20.2d *)
  [`Q3`]; (* 2259: shl v20.2d, v3.2d, #32 *)
  [`Q28`]; (* 2260: umull v3.2d, v31.2s, v28.2s *)
  []; (* 2261: mul x3, x2, x4 *)
  [`Q30`]; (* 2262: umlal v20.2d, v30.2s, v17.2s *)
  [`Q0`]; (* 2263: umull v22.2d, v7.2s, v0.2s *)
  [`Q16`]; (* 2264: usra v27.2d, v16.2d, #32 *)
  []; (* 2265: umulh x11, x2, x4 *)
  []; (* 2266: movi v21.2d, #0xffffffff *)
  []; (* 2267: uzp2 v28.4s, v1.4s, v1.4s *)
  [`X16`; `X7`]; (* 2268: adds x15, x16, x7 *)
  [`Q21`]; (* 2269: and v5.16b, v27.16b, v21.16b *)
  [`X8`]; (* 2270: adcs x3, x3, x8 *)
  [`Q27`]; (* 2271: usra v3.2d, v27.2d, #32 *)
  []; (* 2272: dup v29.2d, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2273: adcs x16, x11, xzr *)
  []; (* 2274: mov x14, v20.d[0] *)
  [`Q17`; `Q31`]; (* 2275: umlal v5.2d, v31.2s, v17.2s *)
  []; (* 2276: mul x8, x9, x2 *)
  [`Q20`]; (* 2277: mov x7, v20.d[1] *)
  [`Q22`]; (* 2278: shl v19.2d, v22.2d, #33 *)
  []; (* 2279: xtn v25.2s, v29.2d *)
  []; (* 2280: rev64 v31.4s, v1.4s *)
  []; (* 2281: lsl x13, x14, #32 *)
  []; (* 2282: uzp2 v6.4s, v29.4s, v29.4s *)
  [`Q7`]; (* 2283: umlal v19.2d, v7.2s, v7.2s *)
  [`Q5`]; (* 2284: usra v3.2d, v5.2d, #32 *)
  [`X8`]; (* 2285: adds x1, x8, x8 *)
  []; (* 2286: umulh x8, x4, x4 *)
  [`X13`; `X14`]; (* 2287: add x12, x13, x14 *)
  [`Q29`; `Q31`]; (* 2288: mul v17.4s, v31.4s, v29.4s *)
  [`Q1`]; (* 2289: xtn v4.2s, v1.2d *)
  [`X15`]; (* 2290: adcs x14, x15, x15 *)
  []; (* 2291: lsr x13, x12, #32 *)
  [`X3`]; (* 2292: adcs x15, x3, x3 *)
  []; (* 2293: umull v31.2d, v25.2s, v28.2s *)
  [`X16`]; (* 2294: adcs x11, x16, x16 *)
  []; (* 2295: umull v21.2d, v25.2s, v4.2s *)
  []; (* 2296: mov x17, v3.d[0] *)
  [`Q28`]; (* 2297: umull v18.2d, v6.2s, v28.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 2298: adc x16, x8, xzr *)
  [`Q17`]; (* 2299: uaddlp v16.2d, v17.4s *)
  []; (* 2300: movi v1.2d, #0xffffffff *)
  []; (* 2301: subs x13, x13, x12 *)
  [`Q21`]; (* 2302: usra v31.2d, v21.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2303: sbc x8, x12, xzr *)
  [`X1`]; (* 2304: adds x17, x17, x1 *)
  []; (* 2305: mul x1, x4, x4 *)
  [`Q16`]; (* 2306: shl v28.2d, v16.2d, #32 *)
  [`Q3`]; (* 2307: mov x3, v3.d[1] *)
  [`X7`]; (* 2308: adcs x14, x7, x14 *)
  [`X13`]; (* 2309: extr x7, x8, x13, #32 *)
  [`X15`; `X3`]; (* 2310: adcs x13, x3, x15 *)
  [`Q1`]; (* 2311: and v3.16b, v31.16b, v1.16b *)
  [`X1`]; (* 2312: adcs x11, x1, x11 *)
  [`X8`]; (* 2313: lsr x1, x8, #32 *)
  [`Q6`]; (* 2314: umlal v3.2d, v6.2s, v4.2s *)
  [`Q31`]; (* 2315: usra v18.2d, v31.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 2316: adc x3, x16, xzr *)
  []; (* 2317: adds x1, x1, x12 *)
  [`Q25`; `Q4`]; (* 2318: umlal v28.2d, v25.2s, v4.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2319: adc x16, xzr, xzr *)
  [`X17`; `X7`]; (* 2320: subs x15, x17, x7 *)
  [`X1`; `X14`]; (* 2321: sbcs x7, x14, x1 *)
  []; (* 2322: lsl x1, x15, #32 *)
  [`X13`]; (* 2323: sbcs x16, x13, x16 *)
  [`X1`; `X15`]; (* 2324: add x8, x1, x15 *)
  [`Q3`]; (* 2325: usra v18.2d, v3.2d, #32 *)
  [`X11`]; (* 2326: sbcs x14, x11, xzr *)
  []; (* 2327: lsr x1, x8, #32 *)
  [`X3`]; (* 2328: sbcs x17, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2329: sbc x11, x12, xzr *)
  [`X1`]; (* 2330: subs x13, x1, x8 *)
  []; (* 2331: umulh x12, x4, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2332: sbc x1, x8, xzr *)
  []; (* 2333: extr x13, x1, x13, #32 *)
  []; (* 2334: lsr x1, x1, #32 *)
  [`X1`]; (* 2335: adds x15, x1, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2336: adc x1, xzr, xzr *)
  [`X13`]; (* 2337: subs x7, x7, x13 *)
  [`X15`; `X16`]; (* 2338: sbcs x13, x16, x15 *)
  []; (* 2339: lsl x3, x7, #32 *)
  []; (* 2340: umulh x16, x2, x5 *)
  [`X1`; `X14`]; (* 2341: sbcs x15, x14, x1 *)
  [`X3`]; (* 2342: add x7, x3, x7 *)
  [`X17`]; (* 2343: sbcs x3, x17, xzr *)
  []; (* 2344: lsr x1, x7, #32 *)
  [`X11`]; (* 2345: sbcs x14, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 2346: sbc x11, x8, xzr *)
  [`X1`]; (* 2347: subs x8, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2348: sbc x1, x7, xzr *)
  []; (* 2349: extr x8, x1, x8, #32 *)
  []; (* 2350: lsr x1, x1, #32 *)
  []; (* 2351: adds x1, x1, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2352: adc x17, xzr, xzr *)
  [`X8`]; (* 2353: subs x13, x13, x8 *)
  []; (* 2354: umulh x8, x9, x6 *)
  [`X15`]; (* 2355: sbcs x1, x15, x1 *)
  [`X17`; `X3`]; (* 2356: sbcs x19, x3, x17 *)
  [`X14`]; (* 2357: sbcs x20, x14, xzr *)
  []; (* 2358: mul x17, x2, x5 *)
  []; (* 2359: sbcs x11, x11, xzr *)
  [`X1`; `X13`]; (* 2360: stp x13, x1, [sp, #192] *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 2361: sbc x14, x7, xzr *)
  []; (* 2362: mul x7, x4, x10 *)
  []; (* 2363: subs x1, x9, x2 *)
  []; (* 2364: csetm x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2365: cneg x1, x1, cc *)
  [`X11`; `X14`]; (* 2366: stp x11, x14, [sp, #224] *)
  []; (* 2367: mul x14, x9, x6 *)
  [`X8`]; (* 2368: adds x17, x8, x17 *)
  [`X16`]; (* 2369: adcs x7, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2370: adc x13, x12, xzr *)
  []; (* 2371: subs x12, x5, x6 *)
  [`X12`]; (* 2372: cneg x3, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2373: cinv x16, x15, cc *)
  []; (* 2374: mul x8, x1, x3 *)
  [`X3`]; (* 2375: umulh x1, x1, x3 *)
  [`X8`]; (* 2376: eor x12, x8, x16 *)
  []; (* 2377: adds x11, x17, x14 *)
  []; (* 2378: adcs x3, x7, x17 *)
  []; (* 2379: adcs x15, x13, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2380: adc x8, x13, xzr *)
  []; (* 2381: adds x3, x3, x14 *)
  [`X17`]; (* 2382: adcs x15, x15, x17 *)
  [`X7`; `X8`]; (* 2383: adcs x17, x8, x7 *)
  []; (* 2384: eor x1, x1, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2385: adc x13, x13, xzr *)
  []; (* 2386: subs x9, x9, x4 *)
  []; (* 2387: csetm x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2388: cneg x9, x9, cc *)
  [`X2`]; (* 2389: subs x4, x2, x4 *)
  []; (* 2390: cneg x4, x4, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2391: csetm x7, cc *)
  []; (* 2392: subs x2, x10, x6 *)
  []; (* 2393: cinv x8, x8, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2394: cneg x2, x2, cc *)
  []; (* 2395: cmn x16, #0x1 *)
  [`X12`]; (* 2396: adcs x11, x11, x12 *)
  []; (* 2397: mul x12, x9, x2 *)
  [`X1`]; (* 2398: adcs x3, x3, x1 *)
  []; (* 2399: adcs x15, x15, x16 *)
  [`X2`]; (* 2400: umulh x9, x9, x2 *)
  []; (* 2401: adcs x17, x17, x16 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 2402: adc x13, x13, x16 *)
  []; (* 2403: subs x1, x10, x5 *)
  [`X7`]; (* 2404: cinv x2, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2405: cneg x1, x1, cc *)
  []; (* 2406: eor x9, x9, x8 *)
  []; (* 2407: cmn x8, #0x1 *)
  [`X12`]; (* 2408: eor x7, x12, x8 *)
  []; (* 2409: mul x12, x4, x1 *)
  [`X7`]; (* 2410: adcs x3, x3, x7 *)
  [`X15`; `X9`]; (* 2411: adcs x7, x15, x9 *)
  [`X17`]; (* 2412: adcs x15, x17, x8 *)
  [`X1`]; (* 2413: umulh x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 2414: adc x8, x13, x8 *)
  []; (* 2415: cmn x2, #0x1 *)
  [`X12`]; (* 2416: eor x1, x12, x2 *)
  [`X7`]; (* 2417: adcs x1, x7, x1 *)
  []; (* 2418: ldp x7, x16, [sp, #192] *)
  [`X4`]; (* 2419: eor x12, x4, x2 *)
  [`X12`; `X15`]; (* 2420: adcs x4, x15, x12 *)
  []; (* 2421: ldp x15, x12, [sp, #224] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 2422: adc x8, x8, x2 *)
  [`X14`]; (* 2423: adds x13, x14, x14 *)
  []; (* 2424: umulh x14, x5, x10 *)
  [`X11`]; (* 2425: adcs x2, x11, x11 *)
  []; (* 2426: adcs x3, x3, x3 *)
  []; (* 2427: adcs x1, x1, x1 *)
  []; (* 2428: adcs x4, x4, x4 *)
  [`X8`]; (* 2429: adcs x11, x8, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2430: adc x8, xzr, xzr *)
  [`X7`]; (* 2431: adds x13, x13, x7 *)
  [`X16`]; (* 2432: adcs x2, x2, x16 *)
  []; (* 2433: mul x16, x5, x10 *)
  [`X19`]; (* 2434: adcs x3, x3, x19 *)
  [`X20`]; (* 2435: adcs x1, x1, x20 *)
  []; (* 2436: umulh x5, x5, x5 *)
  []; (* 2437: lsl x9, x13, #32 *)
  [`X13`]; (* 2438: add x9, x9, x13 *)
  [`X15`]; (* 2439: adcs x4, x4, x15 *)
  []; (* 2440: mov x13, v28.d[1] *)
  [`X11`; `X12`]; (* 2441: adcs x15, x11, x12 *)
  []; (* 2442: lsr x7, x9, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 2443: adc x11, x8, xzr *)
  []; (* 2444: subs x7, x7, x9 *)
  []; (* 2445: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2446: sbc x17, x9, xzr *)
  []; (* 2447: extr x7, x17, x7, #32 *)
  []; (* 2448: lsr x17, x17, #32 *)
  []; (* 2449: adds x17, x17, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2450: adc x12, xzr, xzr *)
  [`X2`; `X7`]; (* 2451: subs x8, x2, x7 *)
  [`X3`]; (* 2452: sbcs x17, x3, x17 *)
  []; (* 2453: lsl x7, x8, #32 *)
  [`X1`; `X12`]; (* 2454: sbcs x2, x1, x12 *)
  [`X7`; `X8`]; (* 2455: add x3, x7, x8 *)
  [`X4`]; (* 2456: sbcs x12, x4, xzr *)
  []; (* 2457: lsr x1, x3, #32 *)
  [`X15`]; (* 2458: sbcs x7, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2459: sbc x15, x9, xzr *)
  []; (* 2460: subs x1, x1, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2461: sbc x4, x3, xzr *)
  []; (* 2462: lsr x9, x4, #32 *)
  [`X1`; `X4`]; (* 2463: extr x8, x4, x1, #32 *)
  []; (* 2464: adds x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2465: adc x4, xzr, xzr *)
  [`X17`; `X8`]; (* 2466: subs x1, x17, x8 *)
  []; (* 2467: lsl x17, x1, #32 *)
  [`X2`; `X9`]; (* 2468: sbcs x8, x2, x9 *)
  [`X12`; `X4`]; (* 2469: sbcs x9, x12, x4 *)
  [`X1`]; (* 2470: add x17, x17, x1 *)
  []; (* 2471: mov x1, v18.d[1] *)
  []; (* 2472: lsr x2, x17, #32 *)
  []; (* 2473: sbcs x7, x7, xzr *)
  [`Q18`]; (* 2474: mov x12, v18.d[0] *)
  []; (* 2475: sbcs x15, x15, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2476: sbc x3, x3, xzr *)
  [`X2`]; (* 2477: subs x4, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2478: sbc x2, x17, xzr *)
  [`X13`]; (* 2479: adds x12, x13, x12 *)
  [`X1`]; (* 2480: adcs x16, x16, x1 *)
  []; (* 2481: lsr x13, x2, #32 *)
  [`X2`; `X4`]; (* 2482: extr x1, x2, x4, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2483: adc x2, x14, xzr *)
  [`X13`]; (* 2484: adds x4, x13, x17 *)
  []; (* 2485: mul x13, x6, x6 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2486: adc x14, xzr, xzr *)
  [`X8`]; (* 2487: subs x1, x8, x1 *)
  [`X9`]; (* 2488: sbcs x4, x9, x4 *)
  [`Q28`]; (* 2489: mov x9, v28.d[0] *)
  [`X14`]; (* 2490: sbcs x7, x7, x14 *)
  [`X15`]; (* 2491: sbcs x8, x15, xzr *)
  []; (* 2492: sbcs x3, x3, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 2493: sbc x14, x17, xzr *)
  [`X9`]; (* 2494: adds x17, x9, x9 *)
  []; (* 2495: adcs x12, x12, x12 *)
  []; (* 2496: mov x15, v19.d[0] *)
  [`X16`]; (* 2497: adcs x9, x16, x16 *)
  []; (* 2498: umulh x6, x6, x6 *)
  [`X2`]; (* 2499: adcs x16, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2500: adc x2, xzr, xzr *)
  [`X8`]; (* 2501: adds x11, x11, x8 *)
  []; (* 2502: adcs x3, x3, xzr *)
  []; (* 2503: adcs x14, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2504: adcs x8, xzr, xzr *)
  [`X1`]; (* 2505: adds x13, x1, x13 *)
  [`Q19`]; (* 2506: mov x1, v19.d[1] *)
  [`X4`]; (* 2507: adcs x6, x4, x6 *)
  []; (* 2508: mov x4, #0xffffffff *)
  [`X7`]; (* 2509: adcs x15, x7, x15 *)
  [`X11`; `X5`]; (* 2510: adcs x7, x11, x5 *)
  [`X3`]; (* 2511: adcs x1, x3, x1 *)
  [`X10`]; (* 2512: adcs x14, x14, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 2513: adc x11, x8, xzr *)
  [`X17`]; (* 2514: adds x6, x6, x17 *)
  [`X12`; `X15`]; (* 2515: adcs x8, x15, x12 *)
  [`X7`; `X9`]; (* 2516: adcs x3, x7, x9 *)
  [`X1`; `X16`]; (* 2517: adcs x15, x1, x16 *)
  []; (* 2518: mov x16, #0xffffffff00000001 *)
  [`X2`]; (* 2519: adcs x14, x14, x2 *)
  []; (* 2520: mov x2, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2521: adc x17, x11, xzr *)
  []; (* 2522: cmn x13, x16 *)
  []; (* 2523: adcs xzr, x6, x4 *)
  []; (* 2524: adcs xzr, x8, x2 *)
  []; (* 2525: adcs xzr, x3, xzr *)
  []; (* 2526: adcs xzr, x15, xzr *)
  []; (* 2527: adcs xzr, x14, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 2528: adc x1, x17, xzr *)
  [`X1`]; (* 2529: neg x9, x1 *)
  [`X16`]; (* 2530: and x1, x16, x9 *)
  [`X1`; `X13`]; (* 2531: adds x11, x13, x1 *)
  [`X4`]; (* 2532: and x13, x4, x9 *)
  [`X13`; `X6`]; (* 2533: adcs x5, x6, x13 *)
  [`X2`; `X9`]; (* 2534: and x1, x2, x9 *)
  [`X1`; `X8`]; (* 2535: adcs x7, x8, x1 *)
  [`X11`; `X5`]; (* 2536: stp x11, x5, [sp, #192] *)
  [`X3`]; (* 2537: adcs x11, x3, xzr *)
  [`X15`]; (* 2538: adcs x2, x15, xzr *)
  [`X11`; `X7`]; (* 2539: stp x7, x11, [sp, #208] *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2540: adc x17, x14, xzr *)
  [`X17`; `X2`]; (* 2541: stp x2, x17, [sp, #224] *)
  []; (* 2542: ldp x5, x6, [sp, #240] *)
  []; (* 2543: ldp x4, x3, [sp, #48] *)
  [`X4`]; (* 2544: subs x5, x5, x4 *)
  [`X3`]; (* 2545: sbcs x6, x6, x3 *)
  []; (* 2546: ldp x7, x8, [sp, #256] *)
  []; (* 2547: ldp x4, x3, [sp, #64] *)
  [`X4`]; (* 2548: sbcs x7, x7, x4 *)
  [`X3`]; (* 2549: sbcs x8, x8, x3 *)
  []; (* 2550: ldp x9, x10, [sp, #272] *)
  []; (* 2551: ldp x4, x3, [sp, #80] *)
  [`X4`]; (* 2552: sbcs x9, x9, x4 *)
  [`X3`]; (* 2553: sbcs x10, x10, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2554: csetm x3, cc *)
  []; (* 2555: mov x4, #0xffffffff *)
  []; (* 2556: and x4, x4, x3 *)
  []; (* 2557: adds x5, x5, x4 *)
  []; (* 2558: eor x4, x4, x3 *)
  [`X4`]; (* 2559: adcs x6, x6, x4 *)
  []; (* 2560: mov x4, #0xfffffffffffffffe *)
  []; (* 2561: and x4, x4, x3 *)
  [`X4`]; (* 2562: adcs x7, x7, x4 *)
  []; (* 2563: adcs x8, x8, x3 *)
  []; (* 2564: adcs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2565: adc x10, x10, x3 *)
  [`X5`; `X6`]; (* 2566: stp x5, x6, [x25, #96] *)
  [`X7`; `X8`]; (* 2567: stp x7, x8, [x25, #112] *)
  [`X10`; `X9`]; (* 2568: stp x9, x10, [x25, #128] *)
  []; (* 2569: ldr q3, [sp, #288] *)
  []; (* 2570: ldr q25, [sp, #96] *)
  []; (* 2571: ldp x13, x23, [sp, #96] *)
  []; (* 2572: ldp x3, x21, [sp, #288] *)
  []; (* 2573: rev64 v23.4s, v25.4s *)
  [`Q25`]; (* 2574: uzp1 v17.4s, v25.4s, v3.4s *)
  []; (* 2575: umulh x15, x3, x13 *)
  [`Q23`]; (* 2576: mul v6.4s, v23.4s, v3.4s *)
  []; (* 2577: uzp1 v3.4s, v3.4s, v3.4s *)
  []; (* 2578: ldr q27, [sp, #128] *)
  []; (* 2579: ldp x8, x24, [sp, #304] *)
  []; (* 2580: subs x6, x3, x21 *)
  []; (* 2581: ldr q0, [sp, #320] *)
  []; (* 2582: movi v23.2d, #0xffffffff *)
  []; (* 2583: csetm x10, cc *)
  []; (* 2584: umulh x19, x21, x23 *)
  []; (* 2585: rev64 v4.4s, v27.4s *)
  []; (* 2586: uzp2 v25.4s, v27.4s, v27.4s *)
  [`CF`; `NF`; `ZF`; `VF`; `X6`]; (* 2587: cneg x4, x6, cc *)
  []; (* 2588: subs x7, x23, x13 *)
  []; (* 2589: xtn v22.2s, v0.2d *)
  [`Q27`]; (* 2590: xtn v24.2s, v27.2d *)
  [`X7`]; (* 2591: cneg x20, x7, cc *)
  []; (* 2592: ldp x6, x14, [sp, #112] *)
  [`Q4`]; (* 2593: mul v27.4s, v4.4s, v0.4s *)
  [`Q6`]; (* 2594: uaddlp v20.2d, v6.4s *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 2595: cinv x5, x10, cc *)
  []; (* 2596: mul x16, x4, x20 *)
  [`Q0`]; (* 2597: uzp2 v6.4s, v0.4s, v0.4s *)
  []; (* 2598: umull v21.2d, v22.2s, v25.2s *)
  [`Q20`]; (* 2599: shl v0.2d, v20.2d, #32 *)
  [`Q17`; `Q3`]; (* 2600: umlal v0.2d, v3.2s, v17.2s *)
  []; (* 2601: mul x22, x8, x6 *)
  [`Q25`]; (* 2602: umull v1.2d, v6.2s, v25.2s *)
  []; (* 2603: subs x12, x3, x8 *)
  []; (* 2604: umull v20.2d, v22.2s, v24.2s *)
  [`X12`]; (* 2605: cneg x17, x12, cc *)
  []; (* 2606: umulh x9, x8, x6 *)
  []; (* 2607: mov x12, v0.d[1] *)
  [`X16`]; (* 2608: eor x11, x16, x5 *)
  [`Q0`]; (* 2609: mov x7, v0.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2610: csetm x10, cc *)
  [`Q20`]; (* 2611: usra v21.2d, v20.2d, #32 *)
  [`X12`]; (* 2612: adds x15, x15, x12 *)
  [`X19`; `X22`]; (* 2613: adcs x12, x19, x22 *)
  [`X4`]; (* 2614: umulh x20, x4, x20 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2615: adc x19, x9, xzr *)
  []; (* 2616: usra v1.2d, v21.2d, #32 *)
  []; (* 2617: adds x22, x15, x7 *)
  [`Q21`; `Q23`]; (* 2618: and v26.16b, v21.16b, v23.16b *)
  []; (* 2619: adcs x16, x12, x15 *)
  [`Q27`]; (* 2620: uaddlp v25.2d, v27.4s *)
  []; (* 2621: adcs x9, x19, x12 *)
  [`Q6`]; (* 2622: umlal v26.2d, v6.2s, v24.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2623: adc x4, x19, xzr *)
  []; (* 2624: adds x16, x16, x7 *)
  [`Q25`]; (* 2625: shl v27.2d, v25.2d, #32 *)
  [`X15`]; (* 2626: adcs x9, x9, x15 *)
  [`X12`]; (* 2627: adcs x4, x4, x12 *)
  [`X20`]; (* 2628: eor x12, x20, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`]; (* 2629: adc x15, x19, xzr *)
  []; (* 2630: subs x20, x6, x13 *)
  []; (* 2631: cneg x20, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2632: cinv x10, x10, cc *)
  []; (* 2633: cmn x5, #0x1 *)
  []; (* 2634: mul x19, x17, x20 *)
  [`X22`]; (* 2635: adcs x11, x22, x11 *)
  [`X16`]; (* 2636: adcs x12, x16, x12 *)
  []; (* 2637: adcs x9, x9, x5 *)
  [`X20`]; (* 2638: umulh x17, x17, x20 *)
  [`X4`]; (* 2639: adcs x22, x4, x5 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2640: adc x5, x15, x5 *)
  []; (* 2641: subs x16, x21, x8 *)
  [`X16`]; (* 2642: cneg x20, x16, cc *)
  []; (* 2643: eor x19, x19, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2644: csetm x4, cc *)
  []; (* 2645: subs x16, x6, x23 *)
  []; (* 2646: cneg x16, x16, cc *)
  [`Q22`; `Q24`]; (* 2647: umlal v27.2d, v22.2s, v24.2s *)
  []; (* 2648: mul x15, x20, x16 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2649: cinv x4, x4, cc *)
  []; (* 2650: cmn x10, #0x1 *)
  [`Q26`]; (* 2651: usra v1.2d, v26.2d, #32 *)
  [`X12`]; (* 2652: adcs x19, x12, x19 *)
  []; (* 2653: eor x17, x17, x10 *)
  [`X17`]; (* 2654: adcs x9, x9, x17 *)
  []; (* 2655: adcs x22, x22, x10 *)
  []; (* 2656: lsl x12, x7, #32 *)
  [`X16`]; (* 2657: umulh x20, x20, x16 *)
  [`X15`]; (* 2658: eor x16, x15, x4 *)
  []; (* 2659: ldp x15, x17, [sp, #128] *)
  [`X12`; `X7`]; (* 2660: add x2, x12, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`; `X5`]; (* 2661: adc x7, x5, x10 *)
  []; (* 2662: ldp x5, x10, [sp, #320] *)
  []; (* 2663: lsr x1, x2, #32 *)
  [`X20`]; (* 2664: eor x12, x20, x4 *)
  []; (* 2665: subs x1, x1, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2666: sbc x20, x2, xzr *)
  []; (* 2667: cmn x4, #0x1 *)
  [`X16`]; (* 2668: adcs x9, x9, x16 *)
  []; (* 2669: extr x1, x20, x1, #32 *)
  []; (* 2670: lsr x20, x20, #32 *)
  [`X12`]; (* 2671: adcs x22, x22, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X7`]; (* 2672: adc x16, x7, x4 *)
  [`X20`]; (* 2673: adds x12, x20, x2 *)
  []; (* 2674: umulh x7, x24, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2675: adc x4, xzr, xzr *)
  [`X11`]; (* 2676: subs x1, x11, x1 *)
  [`X12`; `X19`]; (* 2677: sbcs x20, x19, x12 *)
  [`X4`; `X9`]; (* 2678: sbcs x12, x9, x4 *)
  []; (* 2679: lsl x9, x1, #32 *)
  [`X9`]; (* 2680: add x1, x9, x1 *)
  [`X22`]; (* 2681: sbcs x9, x22, xzr *)
  []; (* 2682: mul x22, x24, x14 *)
  []; (* 2683: sbcs x16, x16, xzr *)
  []; (* 2684: lsr x4, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 2685: sbc x19, x2, xzr *)
  []; (* 2686: subs x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2687: sbc x11, x1, xzr *)
  [`X4`]; (* 2688: extr x2, x11, x4, #32 *)
  [`X11`]; (* 2689: lsr x4, x11, #32 *)
  []; (* 2690: adds x4, x4, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2691: adc x11, xzr, xzr *)
  [`X20`]; (* 2692: subs x2, x20, x2 *)
  [`X12`]; (* 2693: sbcs x4, x12, x4 *)
  [`X11`; `X9`]; (* 2694: sbcs x20, x9, x11 *)
  []; (* 2695: lsl x12, x2, #32 *)
  [`X12`]; (* 2696: add x2, x12, x2 *)
  [`X16`]; (* 2697: sbcs x9, x16, xzr *)
  []; (* 2698: lsr x11, x2, #32 *)
  []; (* 2699: sbcs x19, x19, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2700: sbc x1, x1, xzr *)
  [`X11`]; (* 2701: subs x16, x11, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2702: sbc x12, x2, xzr *)
  []; (* 2703: extr x16, x12, x16, #32 *)
  []; (* 2704: lsr x12, x12, #32 *)
  [`X12`]; (* 2705: adds x11, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2706: adc x12, xzr, xzr *)
  [`X16`; `X4`]; (* 2707: subs x26, x4, x16 *)
  []; (* 2708: mov x4, v27.d[0] *)
  [`X11`; `X20`]; (* 2709: sbcs x27, x20, x11 *)
  [`X12`; `X9`]; (* 2710: sbcs x20, x9, x12 *)
  [`X19`]; (* 2711: sbcs x11, x19, xzr *)
  [`X1`]; (* 2712: sbcs x9, x1, xzr *)
  [`X11`; `X20`]; (* 2713: stp x20, x11, [sp, #256] *)
  []; (* 2714: mov x1, v1.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 2715: sbc x20, x2, xzr *)
  []; (* 2716: subs x12, x24, x5 *)
  [`Q27`]; (* 2717: mov x11, v27.d[1] *)
  [`X12`]; (* 2718: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2719: csetm x2, cc *)
  []; (* 2720: subs x19, x15, x14 *)
  [`Q1`]; (* 2721: mov x12, v1.d[1] *)
  []; (* 2722: cinv x2, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2723: cneg x19, x19, cc *)
  [`X20`; `X9`]; (* 2724: stp x9, x20, [sp, #272] *)
  []; (* 2725: mul x9, x16, x19 *)
  [`X7`]; (* 2726: adds x4, x7, x4 *)
  [`X1`]; (* 2727: adcs x11, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2728: adc x1, x12, xzr *)
  []; (* 2729: adds x20, x4, x22 *)
  [`X16`]; (* 2730: umulh x19, x16, x19 *)
  []; (* 2731: adcs x7, x11, x4 *)
  [`X9`]; (* 2732: eor x16, x9, x2 *)
  []; (* 2733: adcs x9, x1, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2734: adc x12, x1, xzr *)
  []; (* 2735: adds x7, x7, x22 *)
  [`X9`]; (* 2736: adcs x4, x9, x4 *)
  [`X11`; `X12`]; (* 2737: adcs x9, x12, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2738: adc x12, x1, xzr *)
  []; (* 2739: cmn x2, #0x1 *)
  [`X19`]; (* 2740: eor x1, x19, x2 *)
  [`X16`; `X20`]; (* 2741: adcs x11, x20, x16 *)
  [`X1`; `X7`]; (* 2742: adcs x19, x7, x1 *)
  [`X4`]; (* 2743: adcs x1, x4, x2 *)
  [`X9`]; (* 2744: adcs x20, x9, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2745: adc x2, x12, x2 *)
  []; (* 2746: subs x12, x24, x10 *)
  [`X12`]; (* 2747: cneg x16, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2748: csetm x12, cc *)
  []; (* 2749: subs x9, x17, x14 *)
  []; (* 2750: cinv x12, x12, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2751: cneg x9, x9, cc *)
  [`X24`]; (* 2752: subs x3, x24, x3 *)
  []; (* 2753: sbcs x21, x5, x21 *)
  []; (* 2754: mul x24, x16, x9 *)
  [`X8`]; (* 2755: sbcs x4, x10, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2756: ngc x8, xzr *)
  [`X5`]; (* 2757: subs x10, x5, x10 *)
  [`X24`]; (* 2758: eor x5, x24, x12 *)
  []; (* 2759: csetm x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 2760: cneg x24, x10, cc *)
  []; (* 2761: subs x10, x17, x15 *)
  []; (* 2762: cinv x7, x7, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2763: cneg x10, x10, cc *)
  [`X13`]; (* 2764: subs x14, x13, x14 *)
  [`X23`]; (* 2765: sbcs x15, x23, x15 *)
  [`X21`]; (* 2766: eor x13, x21, x8 *)
  []; (* 2767: mul x23, x24, x10 *)
  [`X6`]; (* 2768: sbcs x17, x6, x17 *)
  [`X3`]; (* 2769: eor x6, x3, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2770: ngc x21, xzr *)
  [`X16`]; (* 2771: umulh x9, x16, x9 *)
  []; (* 2772: cmn x8, #0x1 *)
  [`X23`]; (* 2773: eor x3, x23, x7 *)
  [`X6`]; (* 2774: adcs x23, x6, xzr *)
  []; (* 2775: adcs x13, x13, xzr *)
  [`X4`]; (* 2776: eor x16, x4, x8 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2777: adc x16, x16, xzr *)
  [`X17`]; (* 2778: eor x4, x17, x21 *)
  [`X10`; `X24`]; (* 2779: umulh x17, x24, x10 *)
  []; (* 2780: cmn x21, #0x1 *)
  [`X14`]; (* 2781: eor x24, x14, x21 *)
  [`X15`]; (* 2782: eor x6, x15, x21 *)
  [`X24`]; (* 2783: adcs x15, x24, xzr *)
  [`X6`]; (* 2784: adcs x14, x6, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2785: adc x6, x4, xzr *)
  []; (* 2786: cmn x12, #0x1 *)
  [`X9`]; (* 2787: eor x4, x9, x12 *)
  [`X5`]; (* 2788: adcs x19, x19, x5 *)
  []; (* 2789: umulh x5, x23, x15 *)
  [`X4`]; (* 2790: adcs x1, x1, x4 *)
  [`X20`]; (* 2791: adcs x10, x20, x12 *)
  [`X17`]; (* 2792: eor x4, x17, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2793: adc x2, x2, x12 *)
  []; (* 2794: cmn x7, #0x1 *)
  [`X1`; `X3`]; (* 2795: adcs x12, x1, x3 *)
  []; (* 2796: ldp x17, x24, [sp, #256] *)
  []; (* 2797: mul x1, x16, x6 *)
  [`X10`; `X4`]; (* 2798: adcs x3, x10, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 2799: adc x2, x2, x7 *)
  []; (* 2800: ldp x7, x4, [sp, #272] *)
  [`X22`; `X26`]; (* 2801: adds x20, x22, x26 *)
  []; (* 2802: mul x10, x13, x14 *)
  [`X27`]; (* 2803: adcs x11, x11, x27 *)
  [`X21`; `X8`]; (* 2804: eor x9, x8, x21 *)
  [`X17`; `X19`]; (* 2805: adcs x26, x19, x17 *)
  [`X11`; `X20`]; (* 2806: stp x20, x11, [sp, #240] *)
  [`X12`; `X24`]; (* 2807: adcs x27, x12, x24 *)
  []; (* 2808: mul x8, x23, x15 *)
  [`X7`]; (* 2809: adcs x3, x3, x7 *)
  [`X2`; `X4`]; (* 2810: adcs x12, x2, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2811: adc x19, xzr, xzr *)
  []; (* 2812: subs x21, x23, x16 *)
  []; (* 2813: umulh x2, x16, x6 *)
  [`X12`; `X3`]; (* 2814: stp x3, x12, [sp, #272] *)
  [`X21`]; (* 2815: cneg x3, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2816: csetm x24, cc *)
  []; (* 2817: umulh x11, x13, x14 *)
  [`X16`]; (* 2818: subs x21, x13, x16 *)
  []; (* 2819: eor x7, x8, x9 *)
  [`X21`]; (* 2820: cneg x17, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2821: csetm x16, cc *)
  []; (* 2822: subs x21, x6, x15 *)
  [`X21`]; (* 2823: cneg x22, x21, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`]; (* 2824: cinv x21, x24, cc *)
  [`X13`; `X23`]; (* 2825: subs x20, x23, x13 *)
  []; (* 2826: umulh x12, x3, x22 *)
  [`X20`]; (* 2827: cneg x23, x20, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2828: csetm x24, cc *)
  [`X15`]; (* 2829: subs x20, x14, x15 *)
  []; (* 2830: cinv x24, x24, cc *)
  [`X3`]; (* 2831: mul x22, x3, x22 *)
  [`CF`; `NF`; `ZF`; `VF`; `X20`]; (* 2832: cneg x3, x20, cc *)
  [`X14`; `X6`]; (* 2833: subs x13, x6, x14 *)
  [`X13`]; (* 2834: cneg x20, x13, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 2835: cinv x15, x16, cc *)
  [`X10`; `X5`]; (* 2836: adds x13, x5, x10 *)
  []; (* 2837: mul x4, x23, x3 *)
  [`X1`]; (* 2838: adcs x11, x11, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`]; (* 2839: adc x14, x2, xzr *)
  []; (* 2840: adds x5, x13, x8 *)
  []; (* 2841: adcs x16, x11, x13 *)
  [`X3`]; (* 2842: umulh x23, x23, x3 *)
  []; (* 2843: adcs x3, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2844: adc x1, x14, xzr *)
  [`X16`; `X8`]; (* 2845: adds x10, x16, x8 *)
  [`X13`; `X3`]; (* 2846: adcs x6, x3, x13 *)
  [`X1`; `X11`]; (* 2847: adcs x8, x1, x11 *)
  []; (* 2848: umulh x13, x17, x20 *)
  [`X4`]; (* 2849: eor x1, x4, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2850: adc x4, x14, xzr *)
  []; (* 2851: cmn x24, #0x1 *)
  [`X5`]; (* 2852: adcs x1, x5, x1 *)
  [`X23`]; (* 2853: eor x16, x23, x24 *)
  [`X1`]; (* 2854: eor x11, x1, x9 *)
  [`X10`; `X16`]; (* 2855: adcs x23, x10, x16 *)
  [`X22`]; (* 2856: eor x2, x22, x21 *)
  [`X6`]; (* 2857: adcs x3, x6, x24 *)
  [`X17`; `X20`]; (* 2858: mul x14, x17, x20 *)
  [`X13`]; (* 2859: eor x17, x13, x15 *)
  [`X8`]; (* 2860: adcs x13, x8, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X24`; `X4`]; (* 2861: adc x8, x4, x24 *)
  []; (* 2862: cmn x21, #0x1 *)
  [`X2`; `X23`]; (* 2863: adcs x6, x23, x2 *)
  []; (* 2864: mov x16, #0xfffffffffffffffe *)
  [`X12`]; (* 2865: eor x20, x12, x21 *)
  [`X3`]; (* 2866: adcs x20, x3, x20 *)
  [`X14`]; (* 2867: eor x23, x14, x15 *)
  [`X13`]; (* 2868: adcs x2, x13, x21 *)
  [`CF`; `NF`; `ZF`; `VF`; `X21`]; (* 2869: adc x8, x8, x21 *)
  []; (* 2870: cmn x15, #0x1 *)
  []; (* 2871: ldp x5, x4, [sp, #240] *)
  [`X20`; `X23`]; (* 2872: adcs x22, x20, x23 *)
  [`X22`]; (* 2873: eor x23, x22, x9 *)
  [`X2`]; (* 2874: adcs x17, x2, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X8`]; (* 2875: adc x22, x8, x15 *)
  []; (* 2876: cmn x9, #0x1 *)
  [`X7`]; (* 2877: adcs x15, x7, x5 *)
  []; (* 2878: ldp x10, x14, [sp, #272] *)
  [`X6`]; (* 2879: eor x1, x6, x9 *)
  []; (* 2880: lsl x2, x15, #32 *)
  [`X11`]; (* 2881: adcs x8, x11, x4 *)
  [`X1`]; (* 2882: adcs x13, x1, x26 *)
  [`X22`]; (* 2883: eor x1, x22, x9 *)
  [`X23`]; (* 2884: adcs x24, x23, x27 *)
  [`X17`]; (* 2885: eor x11, x17, x9 *)
  [`X11`]; (* 2886: adcs x23, x11, x10 *)
  [`X1`]; (* 2887: adcs x7, x1, x14 *)
  []; (* 2888: adcs x17, x9, x19 *)
  []; (* 2889: adcs x20, x9, xzr *)
  [`X15`; `X2`]; (* 2890: add x1, x2, x15 *)
  []; (* 2891: lsr x3, x1, #32 *)
  []; (* 2892: adcs x11, x9, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2893: adc x9, x9, xzr *)
  []; (* 2894: subs x3, x3, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2895: sbc x6, x1, xzr *)
  [`X5`]; (* 2896: adds x24, x24, x5 *)
  [`X23`]; (* 2897: adcs x4, x23, x4 *)
  []; (* 2898: extr x3, x6, x3, #32 *)
  []; (* 2899: lsr x6, x6, #32 *)
  [`X26`; `X7`]; (* 2900: adcs x21, x7, x26 *)
  [`X17`; `X27`]; (* 2901: adcs x15, x17, x27 *)
  [`X10`; `X20`]; (* 2902: adcs x7, x20, x10 *)
  [`X11`; `X14`]; (* 2903: adcs x20, x11, x14 *)
  []; (* 2904: mov x14, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`; `X19`; `X9`]; (* 2905: adc x22, x9, x19 *)
  [`X6`]; (* 2906: adds x12, x6, x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2907: adc x10, xzr, xzr *)
  [`X8`]; (* 2908: subs x3, x8, x3 *)
  [`X13`]; (* 2909: sbcs x12, x13, x12 *)
  []; (* 2910: lsl x9, x3, #32 *)
  [`X9`]; (* 2911: add x3, x9, x3 *)
  [`X24`]; (* 2912: sbcs x10, x24, x10 *)
  [`X4`]; (* 2913: sbcs x24, x4, xzr *)
  []; (* 2914: lsr x9, x3, #32 *)
  []; (* 2915: sbcs x21, x21, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2916: sbc x1, x1, xzr *)
  []; (* 2917: subs x9, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2918: sbc x13, x3, xzr *)
  []; (* 2919: extr x9, x13, x9, #32 *)
  []; (* 2920: lsr x13, x13, #32 *)
  []; (* 2921: adds x13, x13, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2922: adc x6, xzr, xzr *)
  [`X9`]; (* 2923: subs x12, x12, x9 *)
  [`X10`; `X13`]; (* 2924: sbcs x17, x10, x13 *)
  []; (* 2925: lsl x2, x12, #32 *)
  [`X24`; `X6`]; (* 2926: sbcs x10, x24, x6 *)
  [`X12`; `X2`]; (* 2927: add x9, x2, x12 *)
  [`X21`]; (* 2928: sbcs x6, x21, xzr *)
  []; (* 2929: lsr x5, x9, #32 *)
  [`X1`]; (* 2930: sbcs x21, x1, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2931: sbc x13, x3, xzr *)
  [`X5`]; (* 2932: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2933: sbc x19, x9, xzr *)
  []; (* 2934: lsr x12, x19, #32 *)
  [`X19`; `X8`]; (* 2935: extr x3, x19, x8, #32 *)
  [`X12`]; (* 2936: adds x8, x12, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2937: adc x1, xzr, xzr *)
  [`X17`; `X3`]; (* 2938: subs x2, x17, x3 *)
  [`X10`; `X8`]; (* 2939: sbcs x12, x10, x8 *)
  [`X1`; `X6`]; (* 2940: sbcs x5, x6, x1 *)
  [`X21`]; (* 2941: sbcs x3, x21, xzr *)
  [`X13`]; (* 2942: sbcs x19, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2943: sbc x24, x9, xzr *)
  [`X15`; `X3`]; (* 2944: adds x23, x15, x3 *)
  [`X19`; `X7`]; (* 2945: adcs x8, x7, x19 *)
  [`X20`; `X24`]; (* 2946: adcs x11, x20, x24 *)
  [`CF`; `NF`; `ZF`; `VF`; `X22`]; (* 2947: adc x9, x22, xzr *)
  [`X9`]; (* 2948: add x24, x9, #0x1 *)
  []; (* 2949: lsl x7, x24, #32 *)
  []; (* 2950: subs x21, x24, x7 *)
  [`CF`; `NF`; `ZF`; `VF`; `X7`]; (* 2951: sbc x10, x7, xzr *)
  [`X2`; `X21`]; (* 2952: adds x6, x2, x21 *)
  [`X10`; `X12`]; (* 2953: adcs x7, x12, x10 *)
  [`X5`]; (* 2954: adcs x24, x5, x24 *)
  [`X23`]; (* 2955: adcs x13, x23, xzr *)
  []; (* 2956: adcs x8, x8, xzr *)
  [`X11`]; (* 2957: adcs x15, x11, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2958: csetm x23, cc *)
  [`X16`]; (* 2959: and x11, x16, x23 *)
  [`X14`]; (* 2960: and x20, x14, x23 *)
  [`X6`]; (* 2961: adds x22, x6, x20 *)
  [`X20`]; (* 2962: eor x3, x20, x23 *)
  [`X3`; `X7`]; (* 2963: adcs x5, x7, x3 *)
  [`X11`; `X24`]; (* 2964: adcs x14, x24, x11 *)
  [`X22`; `X5`]; (* 2965: stp x22, x5, [sp, #240] *)
  [`X13`]; (* 2966: adcs x5, x13, x23 *)
  [`X8`]; (* 2967: adcs x12, x8, x23 *)
  [`X14`; `X5`]; (* 2968: stp x14, x5, [sp, #256] *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`; `X23`]; (* 2969: adc x19, x15, x23 *)
  []; (* 2970: ldp x1, x2, [sp, #144] *)
  []; (* 2971: ldp x3, x4, [sp, #160] *)
  []; (* 2972: ldp x5, x6, [sp, #176] *)
  []; (* 2973: lsl x0, x1, #2 *)
  []; (* 2974: ldp x7, x8, [sp, #288] *)
  [`X7`]; (* 2975: subs x0, x0, x7 *)
  []; (* 2976: extr x1, x2, x1, #62 *)
  [`X8`]; (* 2977: sbcs x1, x1, x8 *)
  []; (* 2978: ldp x7, x8, [sp, #304] *)
  []; (* 2979: extr x2, x3, x2, #62 *)
  [`X7`]; (* 2980: sbcs x2, x2, x7 *)
  []; (* 2981: extr x3, x4, x3, #62 *)
  [`X8`]; (* 2982: sbcs x3, x3, x8 *)
  []; (* 2983: extr x4, x5, x4, #62 *)
  []; (* 2984: ldp x7, x8, [sp, #320] *)
  [`X7`]; (* 2985: sbcs x4, x4, x7 *)
  []; (* 2986: extr x5, x6, x5, #62 *)
  [`X8`]; (* 2987: sbcs x5, x5, x8 *)
  []; (* 2988: lsr x6, x6, #62 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2989: adc x6, x6, xzr *)
  []; (* 2990: lsl x7, x6, #32 *)
  []; (* 2991: subs x8, x6, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2992: sbc x7, x7, xzr *)
  [`X8`]; (* 2993: adds x0, x0, x8 *)
  [`X7`]; (* 2994: adcs x1, x1, x7 *)
  [`X6`]; (* 2995: adcs x2, x2, x6 *)
  []; (* 2996: adcs x3, x3, xzr *)
  []; (* 2997: adcs x4, x4, xzr *)
  []; (* 2998: adcs x5, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2999: csetm x8, cc *)
  []; (* 3000: mov x9, #0xffffffff *)
  []; (* 3001: and x9, x9, x8 *)
  []; (* 3002: adds x0, x0, x9 *)
  []; (* 3003: eor x9, x9, x8 *)
  [`X9`]; (* 3004: adcs x1, x1, x9 *)
  []; (* 3005: mov x9, #0xfffffffffffffffe *)
  []; (* 3006: and x9, x9, x8 *)
  [`X9`]; (* 3007: adcs x2, x2, x9 *)
  []; (* 3008: adcs x3, x3, x8 *)
  []; (* 3009: adcs x4, x4, x8 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 3010: adc x5, x5, x8 *)
  [`X0`; `X1`]; (* 3011: stp x0, x1, [x25] *)
  [`X2`; `X3`]; (* 3012: stp x2, x3, [x25, #16] *)
  [`X4`; `X5`]; (* 3013: stp x4, x5, [x25, #32] *)
  []; (* 3014: ldp x0, x1, [sp, #192] *)
  []; (* 3015: mov x6, #0xffffffff *)
  [`X0`]; (* 3016: subs x6, x6, x0 *)
  []; (* 3017: mov x7, #0xffffffff00000000 *)
  [`X1`]; (* 3018: sbcs x7, x7, x1 *)
  []; (* 3019: ldp x0, x1, [sp, #208] *)
  []; (* 3020: mov x8, #0xfffffffffffffffe *)
  [`X0`]; (* 3021: sbcs x8, x8, x0 *)
  []; (* 3022: mov x13, #0xffffffffffffffff *)
  [`X1`]; (* 3023: sbcs x9, x13, x1 *)
  []; (* 3024: ldp x0, x1, [sp, #224] *)
  [`X0`]; (* 3025: sbcs x10, x13, x0 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`; `X13`]; (* 3026: sbc x11, x13, x1 *)
  []; (* 3027: lsl x0, x6, #3 *)
  [`X6`]; (* 3028: extr x1, x7, x6, #61 *)
  [`X7`]; (* 3029: extr x2, x8, x7, #61 *)
  [`X8`]; (* 3030: extr x3, x9, x8, #61 *)
  [`X9`]; (* 3031: extr x4, x10, x9, #61 *)
  [`X10`]; (* 3032: extr x5, x11, x10, #61 *)
  [`X11`]; (* 3033: lsr x6, x11, #61 *)
  []; (* 3034: add x6, x6, #0x1 *)
  []; (* 3035: ldp x8, x9, [sp, #240] *)
  []; (* 3036: ldp x10, x11, [sp, #256] *)
  []; (* 3037: mov x14, #0x3 *)
  []; (* 3038: mul x15, x14, x8 *)
  []; (* 3039: umulh x8, x14, x8 *)
  [`X15`]; (* 3040: adds x0, x0, x15 *)
  []; (* 3041: mul x15, x14, x9 *)
  []; (* 3042: umulh x9, x14, x9 *)
  [`X15`]; (* 3043: adcs x1, x1, x15 *)
  []; (* 3044: mul x15, x14, x10 *)
  []; (* 3045: umulh x10, x14, x10 *)
  [`X15`]; (* 3046: adcs x2, x2, x15 *)
  []; (* 3047: mul x15, x14, x11 *)
  []; (* 3048: umulh x11, x14, x11 *)
  [`X15`]; (* 3049: adcs x3, x3, x15 *)
  []; (* 3050: mul x15, x14, x12 *)
  []; (* 3051: umulh x12, x14, x12 *)
  [`X15`]; (* 3052: adcs x4, x4, x15 *)
  []; (* 3053: mul x15, x14, x19 *)
  [`X14`; `X19`]; (* 3054: umulh x13, x14, x19 *)
  [`X15`]; (* 3055: adcs x5, x5, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3056: adc x6, x6, xzr *)
  [`X8`]; (* 3057: adds x1, x1, x8 *)
  [`X9`]; (* 3058: adcs x2, x2, x9 *)
  [`X10`]; (* 3059: adcs x3, x3, x10 *)
  [`X11`]; (* 3060: adcs x4, x4, x11 *)
  [`X12`]; (* 3061: adcs x5, x5, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 3062: adcs x6, x6, x13 *)
  []; (* 3063: lsl x7, x6, #32 *)
  []; (* 3064: subs x8, x6, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3065: sbc x7, x7, xzr *)
  [`X8`]; (* 3066: adds x0, x0, x8 *)
  [`X7`]; (* 3067: adcs x1, x1, x7 *)
  [`X6`]; (* 3068: adcs x2, x2, x6 *)
  []; (* 3069: adcs x3, x3, xzr *)
  []; (* 3070: adcs x4, x4, xzr *)
  []; (* 3071: adcs x5, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3072: csetm x6, cc *)
  []; (* 3073: mov x7, #0xffffffff *)
  []; (* 3074: and x7, x7, x6 *)
  []; (* 3075: adds x0, x0, x7 *)
  []; (* 3076: eor x7, x7, x6 *)
  [`X7`]; (* 3077: adcs x1, x1, x7 *)
  []; (* 3078: mov x7, #0xfffffffffffffffe *)
  []; (* 3079: and x7, x7, x6 *)
  [`X7`]; (* 3080: adcs x2, x2, x7 *)
  []; (* 3081: adcs x3, x3, x6 *)
  []; (* 3082: adcs x4, x4, x6 *)
  [`CF`; `NF`; `ZF`; `VF`; `X6`]; (* 3083: adc x5, x5, x6 *)
  [`X0`; `X1`]; (* 3084: stp x0, x1, [x25, #48] *)
  [`X2`; `X3`]; (* 3085: stp x2, x3, [x25, #64] *)
  [`X25`; `X4`; `X5`]; (* 3086: stp x4, x5, [x25, #80] *)
|];;
