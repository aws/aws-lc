(*
 * Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
 * SPDX-License-Identifier: Apache-2.0 OR ISC OR MIT-0
 *)

(* The number of instructions of functions. *)

let count_insts (execth:thm*thm option array) =
  let length_th = fst execth in
  dest_small_numeral (snd (dest_eq (concl length_th))) / 4;;

let len_montsqr_p256, len_montmul_p256, len_sub_p256 =
  count_insts BIGNUM_MONTSQR_P256_EXEC,
  count_insts BIGNUM_MONTMUL_P256_EXEC,
  count_insts BIGNUM_SUB_P256_EXEC;;

(* ------------------------------------------------------------------------- *)
(* Building actions for proving correctness of optimization step 1 inlining. *)
(* The inlined code is simply the result of turning 'bl' to macro invocation *)
(* and removing the 'ret' instruction at the end of subroutine.              *)
(* The functions were inlined by hand, not using a script.                   *)
(* ------------------------------------------------------------------------- *)

let code_blocks = [
  (* (action("equal"|"call <subroutine>"), # instructions if "equal") *)
  ("equal", Some 3);
  ("call montsqr_p256", None);
  ("call montsqr_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call sub_p256", None);
  ("call sub_p256", None);
  ("call montsqr_p256", None);
  ("call montsqr_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call sub_p256", None);
  ("call sub_p256", None);
  ("call montmul_p256", None);
  ("call sub_p256", None);
  ("call sub_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call montmul_p256", None);
  ("call sub_p256", None);
  ("equal", Some (162 - 103))
];;

(* The number of instructions of functions. *)

let len_montsqr_p256, len_montmul_p256, len_sub_p256 =
  count_insts BIGNUM_MONTSQR_P256_EXEC,
  count_insts BIGNUM_MONTMUL_P256_EXEC,
  count_insts BIGNUM_SUB_P256_EXEC;;

(* Build the actions. *)

let actions1 = ref [];;
let last_n1 = ref 0 and last_n2 = ref 0;;
List.iter (fun code_block ->
  let n1,n2 = !last_n1,!last_n2 in
  match code_block with
  | "equal", Some nsteps ->
    actions1 := !actions1 @ [("equal",n1,n1+nsteps,n2,n2+nsteps)];
    last_n1 := nsteps + n1;
    last_n2 := nsteps + n2
  | callfn, None ->
    (* nsteps_prologue = # fn arguments
       nsteps_fnbody = # insts of fn except last ret *)
    let nsteps_prologue, nsteps_fnbody = match callfn with
      | "call montsqr_p256" -> 2, len_montsqr_p256 - 1
      | "call montmul_p256" -> 3, len_montmul_p256 - 1
      | "call sub_p256" -> 3, len_sub_p256 - 1
      | _ -> failwith callfn in begin
    actions1 := !actions1 @
      [(* For argument assignments, use 'replace' not 'equiv' because
          the symbolic expression of memory addresses shouldn't be abbreviated.
          Otherwise symbolic simulator will be confused. *)
       ("replace",n1,n1+nsteps_prologue,n2,n2+nsteps_prologue)];
    let n1 = n1+nsteps_prologue and n2 = n2+nsteps_prologue in begin
    actions1 := !actions1 @
      [(* bl *)
       ("delete", n1, n1+1, n2, n2);
       (* fn body *)
       ("equal",  n1+1, n1+1+nsteps_fnbody,
                  n2, n2+nsteps_fnbody);
       (* ret *)
       ("delete", n1+1+nsteps_fnbody, n1+1+nsteps_fnbody+1,
                  n2+nsteps_fnbody, n2+nsteps_fnbody)];
    last_n1 := n1+1+nsteps_fnbody+1;
    last_n2 := n2+nsteps_fnbody
    end end)
  code_blocks;;


(* ------------------------------------------------------------------------- *)
(* Actions for proving correctness of step 2 memory optimizations.           *)
(* To get this, trim the callee-save register spills & ret from the assembly *)
(* source files after the first stage (inlining) and second stage (mem opt), *)
(* and run                                                                   *)
(* 'tools/gen-actions.py <trimmed first asm> <trimmed second asm>'.          *)
(* ------------------------------------------------------------------------- *)

let actions2 = [
  ("equal", 0, 4, 0, 4);
  ("replace", 4, 10, 4, 9);
  ("equal", 10, 135, 9, 134);
  ("replace", 135, 136, 134, 135);
  ("equal", 136, 138, 135, 137);
  ("replace", 138, 139, 137, 138);
  ("equal", 139, 140, 138, 139);
  ("replace", 140, 148, 139, 145);
  ("equal", 148, 277, 145, 274);
  ("replace", 277, 287, 274, 281);
  ("equal", 287, 295, 281, 289);
  ("replace", 295, 296, 289, 290);
  ("equal", 296, 311, 290, 305);
  ("replace", 311, 312, 305, 306);
  ("equal", 312, 328, 306, 322);
  ("replace", 328, 329, 322, 323);
  ("equal", 329, 360, 323, 354);
  ("replace", 360, 362, 354, 356);
  ("equal", 362, 364, 356, 358);
  ("replace", 364, 365, 358, 359);
  ("equal", 365, 366, 359, 360);
  ("replace", 366, 367, 360, 361);
  ("equal", 367, 368, 361, 362);
  ("delete", 368, 369, 362, 362);
  ("equal", 369, 392, 362, 385);
  ("delete", 392, 393, 385, 385);
  ("equal", 393, 412, 385, 404);
  ("delete", 412, 413, 404, 404);
  ("equal", 413, 419, 404, 410);
  ("delete", 419, 420, 410, 410);
  ("equal", 420, 423, 410, 413);
  ("replace", 423, 425, 413, 415);
  ("equal", 425, 426, 415, 416);
  ("replace", 426, 427, 416, 417);
  ("equal", 427, 428, 417, 418);
  ("replace", 428, 429, 418, 419);
  ("equal", 429, 482, 419, 472);
  ("replace", 482, 483, 472, 473);
  ("equal", 483, 485, 473, 475);
  ("replace", 485, 494, 475, 481);
  ("equal", 494, 502, 481, 489);
  ("replace", 502, 503, 489, 490);
  ("equal", 503, 518, 490, 505);
  ("replace", 518, 519, 505, 506);
  ("equal", 519, 535, 506, 522);
  ("replace", 535, 536, 522, 523);
  ("equal", 536, 567, 523, 554);
  ("replace", 567, 569, 554, 556);
  ("equal", 569, 571, 556, 558);
  ("replace", 571, 572, 558, 559);
  ("equal", 572, 573, 559, 560);
  ("replace", 573, 574, 560, 561);
  ("equal", 574, 575, 561, 562);
  ("delete", 575, 576, 562, 562);
  ("equal", 576, 599, 562, 585);
  ("delete", 599, 600, 585, 585);
  ("equal", 600, 619, 585, 604);
  ("delete", 619, 620, 604, 604);
  ("equal", 620, 626, 604, 610);
  ("delete", 626, 627, 610, 610);
  ("equal", 627, 630, 610, 613);
  ("replace", 630, 632, 613, 615);
  ("equal", 632, 633, 615, 616);
  ("replace", 633, 634, 616, 617);
  ("equal", 634, 635, 617, 618);
  ("replace", 635, 636, 618, 619);
  ("equal", 636, 685, 619, 668);
  ("replace", 685, 686, 668, 669);
  ("equal", 686, 687, 669, 670);
  ("replace", 687, 688, 670, 671);
  ("equal", 688, 689, 671, 672);
  ("replace", 689, 690, 672, 673);
  ("equal", 690, 692, 673, 675);
  ("replace", 692, 694, 675, 676);
  ("equal", 694, 695, 676, 677);
  ("replace", 695, 698, 677, 678);
  ("equal", 698, 699, 678, 679);
  ("replace", 699, 700, 679, 680);
  ("equal", 700, 702, 680, 682);
  ("replace", 702, 703, 682, 683);
  ("equal", 703, 706, 683, 686);
  ("replace", 706, 707, 686, 687);
  ("equal", 707, 708, 687, 688);
  ("replace", 708, 711, 688, 691);
  ("equal", 711, 714, 691, 694);
  ("replace", 714, 715, 694, 695);
  ("equal", 715, 742, 695, 722);
  ("replace", 742, 743, 722, 723);
  ("equal", 743, 774, 723, 754);
  ("replace", 774, 776, 754, 756);
  ("equal", 776, 778, 756, 758);
  ("replace", 778, 779, 758, 759);
  ("equal", 779, 780, 759, 760);
  ("replace", 780, 781, 760, 761);
  ("equal", 781, 782, 761, 762);
  ("delete", 782, 783, 762, 762);
  ("equal", 783, 806, 762, 785);
  ("delete", 806, 807, 785, 785);
  ("equal", 807, 826, 785, 804);
  ("delete", 826, 827, 804, 804);
  ("equal", 827, 833, 804, 810);
  ("delete", 833, 834, 810, 810);
  ("equal", 834, 837, 810, 813);
  ("replace", 837, 839, 813, 815);
  ("equal", 839, 840, 815, 816);
  ("replace", 840, 841, 816, 817);
  ("equal", 841, 842, 817, 818);
  ("replace", 842, 843, 818, 819);
  ("equal", 843, 896, 819, 872);
  ("replace", 896, 897, 872, 873);
  ("equal", 897, 899, 873, 875);
  ("replace", 899, 908, 875, 881);
  ("equal", 908, 916, 881, 889);
  ("replace", 916, 917, 889, 890);
  ("equal", 917, 932, 890, 905);
  ("replace", 932, 933, 905, 906);
  ("equal", 933, 949, 906, 922);
  ("replace", 949, 950, 922, 923);
  ("equal", 950, 981, 923, 954);
  ("replace", 981, 983, 954, 956);
  ("equal", 983, 985, 956, 958);
  ("replace", 985, 986, 958, 959);
  ("equal", 986, 987, 959, 960);
  ("replace", 987, 988, 960, 961);
  ("equal", 988, 989, 961, 962);
  ("delete", 989, 990, 962, 962);
  ("equal", 990, 1013, 962, 985);
  ("delete", 1013, 1014, 985, 985);
  ("equal", 1014, 1033, 985, 1004);
  ("delete", 1033, 1034, 1004, 1004);
  ("equal", 1034, 1040, 1004, 1010);
  ("delete", 1040, 1041, 1010, 1010);
  ("equal", 1041, 1044, 1010, 1013);
  ("replace", 1044, 1046, 1013, 1015);
  ("equal", 1046, 1047, 1015, 1016);
  ("replace", 1047, 1048, 1016, 1017);
  ("equal", 1048, 1049, 1017, 1018);
  ("replace", 1049, 1050, 1018, 1019);
  ("equal", 1050, 1103, 1019, 1072);
  ("replace", 1103, 1104, 1072, 1073);
  ("equal", 1104, 1106, 1073, 1075);
  ("replace", 1106, 1108, 1075, 1076);
  ("equal", 1108, 1109, 1076, 1077);
  ("replace", 1109, 1111, 1077, 1078);
  ("equal", 1111, 1113, 1078, 1080);
  ("delete", 1113, 1114, 1080, 1080);
  ("equal", 1114, 1120, 1080, 1086);
  ("replace", 1120, 1121, 1086, 1087);
  ("equal", 1121, 1123, 1087, 1089);
  ("replace", 1123, 1124, 1089, 1090);
  ("equal", 1124, 1128, 1090, 1094);
  ("replace", 1128, 1129, 1094, 1095);
  ("equal", 1129, 1133, 1095, 1099);
  ("replace", 1133, 1134, 1099, 1100);
  ("equal", 1134, 1156, 1100, 1122);
  ("replace", 1156, 1157, 1122, 1123);
  ("equal", 1157, 1164, 1123, 1130);
  ("replace", 1164, 1166, 1130, 1132);
  ("equal", 1166, 1188, 1132, 1154);
  ("replace", 1188, 1190, 1154, 1156);
  ("equal", 1190, 1192, 1156, 1158);
  ("replace", 1192, 1193, 1158, 1159);
  ("equal", 1193, 1194, 1159, 1160);
  ("replace", 1194, 1195, 1160, 1161);
  ("equal", 1195, 1196, 1161, 1162);
  ("delete", 1196, 1197, 1162, 1162);
  ("equal", 1197, 1220, 1162, 1185);
  ("delete", 1220, 1221, 1185, 1185);
  ("equal", 1221, 1240, 1185, 1204);
  ("delete", 1240, 1241, 1204, 1204);
  ("equal", 1241, 1247, 1204, 1210);
  ("delete", 1247, 1248, 1210, 1210);
  ("equal", 1248, 1251, 1210, 1213);
  ("replace", 1251, 1253, 1213, 1215);
  ("equal", 1253, 1254, 1215, 1216);
  ("replace", 1254, 1255, 1216, 1217);
  ("equal", 1255, 1256, 1217, 1218);
  ("replace", 1256, 1257, 1218, 1219);
  ("equal", 1257, 1306, 1219, 1268);
  ("replace", 1306, 1307, 1268, 1269);
  ("equal", 1307, 1308, 1269, 1270);
  ("replace", 1308, 1309, 1270, 1271);
  ("equal", 1309, 1310, 1271, 1272);
  ("delete", 1310, 1311, 1272, 1272);
  ("equal", 1311, 1313, 1272, 1274);
  ("replace", 1313, 1322, 1274, 1280);
  ("equal", 1322, 1330, 1280, 1288);
  ("replace", 1330, 1331, 1288, 1289);
  ("equal", 1331, 1346, 1289, 1304);
  ("replace", 1346, 1347, 1304, 1305);
  ("equal", 1347, 1363, 1305, 1321);
  ("replace", 1363, 1364, 1321, 1322);
  ("equal", 1364, 1395, 1322, 1353);
  ("replace", 1395, 1397, 1353, 1355);
  ("equal", 1397, 1399, 1355, 1357);
  ("replace", 1399, 1400, 1357, 1358);
  ("equal", 1400, 1401, 1358, 1359);
  ("replace", 1401, 1402, 1359, 1360);
  ("equal", 1402, 1403, 1360, 1361);
  ("delete", 1403, 1404, 1361, 1361);
  ("equal", 1404, 1427, 1361, 1384);
  ("delete", 1427, 1428, 1384, 1384);
  ("equal", 1428, 1447, 1384, 1403);
  ("delete", 1447, 1448, 1403, 1403);
  ("equal", 1448, 1454, 1403, 1409);
  ("delete", 1454, 1455, 1409, 1409);
  ("equal", 1455, 1458, 1409, 1412);
  ("replace", 1458, 1460, 1412, 1414);
  ("equal", 1460, 1461, 1414, 1415);
  ("replace", 1461, 1462, 1415, 1416);
  ("equal", 1462, 1463, 1416, 1417);
  ("replace", 1463, 1464, 1417, 1418);
  ("equal", 1464, 1513, 1418, 1467);
  ("replace", 1513, 1514, 1467, 1468);
  ("equal", 1514, 1515, 1468, 1469);
  ("replace", 1515, 1516, 1469, 1470);
  ("equal", 1516, 1517, 1470, 1471);
  ("replace", 1517, 1526, 1471, 1477);
  ("equal", 1526, 1528, 1477, 1479);
  ("replace", 1528, 1530, 1479, 1481);
  ("equal", 1530, 1533, 1481, 1484);
  ("replace", 1533, 1534, 1484, 1485);
  ("equal", 1534, 1535, 1485, 1486);
  ("replace", 1535, 1537, 1486, 1488);
  ("equal", 1537, 1538, 1488, 1489);
  ("replace", 1538, 1552, 1489, 1497);
  ("equal", 1552, 1553, 1497, 1498);
  ("replace", 1553, 1554, 1498, 1499);
  ("equal", 1554, 1555, 1499, 1500);
  ("replace", 1555, 1556, 1500, 1501);
  ("equal", 1556, 1559, 1501, 1504);
  ("replace", 1559, 1568, 1504, 1509);
  ("equal", 1568, 1570, 1509, 1511);
  ("replace", 1570, 1571, 1511, 1512);
  ("equal", 1571, 1575, 1512, 1516);
  ("replace", 1575, 1577, 1516, 1518);
  ("equal", 1577, 1583, 1518, 1524);
  ("replace", 1583, 1584, 1524, 1525);
  ("equal", 1584, 1589, 1525, 1530);
  ("replace", 1589, 1590, 1530, 1531);
  ("equal", 1590, 1616, 1531, 1557);
  ("replace", 1616, 1617, 1557, 1558);
  ("equal", 1617, 1625, 1558, 1566);
  ("replace", 1625, 1626, 1566, 1567);
  ("equal", 1626, 1633, 1567, 1574);
  ("replace", 1633, 1634, 1574, 1575);
  ("equal", 1634, 1639, 1575, 1580);
  ("replace", 1639, 1640, 1580, 1581);
  ("equal", 1640, 1642, 1581, 1583);
  ("replace", 1642, 1643, 1583, 1584);
  ("equal", 1643, 1650, 1584, 1591);
  ("replace", 1650, 1651, 1591, 1592);
  ("equal", 1651, 1655, 1592, 1596);
  ("replace", 1655, 1656, 1596, 1597);
  ("equal", 1656, 1693, 1597, 1634);
  ("replace", 1693, 1699, 1634, 1640);
  ("equal", 1699, 1700, 1640, 1641);
  ("replace", 1700, 1706, 1641, 1645);
  ("equal", 1706, 1708, 1645, 1647);
  ("replace", 1708, 1709, 1647, 1648);
  ("equal", 1709, 1713, 1648, 1652);
  ("replace", 1713, 1715, 1652, 1654);
  ("equal", 1715, 1721, 1654, 1660);
  ("replace", 1721, 1722, 1660, 1661);
  ("equal", 1722, 1754, 1661, 1693);
  ("replace", 1754, 1755, 1693, 1694);
  ("equal", 1755, 1837, 1694, 1776);
  ("replace", 1837, 1845, 1776, 1779);
  ("equal", 1845, 1846, 1779, 1780);
  ("replace", 1846, 1847, 1780, 1781);
  ("equal", 1847, 1850, 1781, 1784);
  ("replace", 1850, 1851, 1784, 1785);
  ("equal", 1851, 1852, 1785, 1786);
  ("replace", 1852, 1855, 1786, 1789);
  ("equal", 1855, 1856, 1789, 1790);
  ("replace", 1856, 1857, 1790, 1791);
  ("equal", 1857, 1858, 1791, 1792);
  ("replace", 1858, 1859, 1792, 1793);
  ("equal", 1859, 1869, 1793, 1803);
  ("replace", 1869, 1870, 1803, 1804);
  ("equal", 1870, 1886, 1804, 1820);
  ("replace", 1886, 1887, 1820, 1821);
  ("equal", 1887, 1918, 1821, 1852);
  ("replace", 1918, 1920, 1852, 1854);
  ("equal", 1920, 1922, 1854, 1856);
  ("replace", 1922, 1923, 1856, 1857);
  ("equal", 1923, 1924, 1857, 1858);
  ("replace", 1924, 1925, 1858, 1859);
  ("equal", 1925, 1926, 1859, 1860);
  ("delete", 1926, 1927, 1860, 1860);
  ("equal", 1927, 1950, 1860, 1883);
  ("delete", 1950, 1951, 1883, 1883);
  ("equal", 1951, 1970, 1883, 1902);
  ("delete", 1970, 1971, 1902, 1902);
  ("equal", 1971, 1977, 1902, 1908);
  ("delete", 1977, 1978, 1908, 1908);
  ("equal", 1978, 1981, 1908, 1911);
  ("replace", 1981, 1983, 1911, 1913);
  ("equal", 1983, 1984, 1913, 1914);
  ("replace", 1984, 1985, 1914, 1915);
  ("equal", 1985, 1986, 1915, 1916);
  ("replace", 1986, 1987, 1916, 1917);
  ("equal", 1987, 2036, 1917, 1966);
  ("replace", 2036, 2037, 1966, 1967);
  ("equal", 2037, 2038, 1967, 1968);
  ("replace", 2038, 2039, 1968, 1969);
  ("equal", 2039, 2040, 1969, 1970);
  ("replace", 2040, 2041, 1970, 1971);
  ("equal", 2041, 2043, 1971, 1973);
  ("replace", 2043, 2052, 1973, 1978);
  ("equal", 2052, 2053, 1978, 1979);
  ("replace", 2053, 2054, 1979, 1980);
  ("equal", 2054, 2057, 1980, 1983);
  ("replace", 2057, 2058, 1983, 1984);
  ("equal", 2058, 2059, 1984, 1985);
  ("replace", 2059, 2062, 1985, 1988);
  ("equal", 2062, 2065, 1988, 1991);
  ("replace", 2065, 2066, 1991, 1992);
  ("equal", 2066, 2076, 1992, 2002);
  ("replace", 2076, 2077, 2002, 2003);
  ("equal", 2077, 2093, 2003, 2019);
  ("replace", 2093, 2094, 2019, 2020);
  ("equal", 2094, 2125, 2020, 2051);
  ("replace", 2125, 2127, 2051, 2053);
  ("equal", 2127, 2129, 2053, 2055);
  ("replace", 2129, 2130, 2055, 2056);
  ("equal", 2130, 2131, 2056, 2057);
  ("replace", 2131, 2132, 2057, 2058);
  ("equal", 2132, 2133, 2058, 2059);
  ("delete", 2133, 2134, 2059, 2059);
  ("equal", 2134, 2157, 2059, 2082);
  ("delete", 2157, 2158, 2082, 2082);
  ("equal", 2158, 2177, 2082, 2101);
  ("delete", 2177, 2178, 2101, 2101);
  ("equal", 2178, 2184, 2101, 2107);
  ("delete", 2184, 2185, 2107, 2107);
  ("equal", 2185, 2188, 2107, 2110);
  ("replace", 2188, 2190, 2110, 2112);
  ("equal", 2190, 2191, 2112, 2113);
  ("replace", 2191, 2192, 2113, 2114);
  ("equal", 2192, 2193, 2114, 2115);
  ("replace", 2193, 2194, 2115, 2116);
  ("equal", 2194, 2243, 2116, 2165);
  ("replace", 2243, 2244, 2165, 2166);
  ("equal", 2244, 2245, 2166, 2167);
  ("replace", 2245, 2246, 2167, 2168);
  ("equal", 2246, 2247, 2168, 2169);
  ("replace", 2247, 2251, 2169, 2173);
  ("equal", 2251, 2253, 2173, 2175);
  ("delete", 2253, 2254, 2175, 2175);
  ("equal", 2254, 2255, 2175, 2176);
  ("replace", 2255, 2258, 2176, 2178);
  ("equal", 2258, 2259, 2178, 2179);
  ("replace", 2259, 2260, 2179, 2180);
  ("equal", 2260, 2263, 2180, 2183);
  ("replace", 2263, 2264, 2183, 2184);
  ("equal", 2264, 2265, 2184, 2185);
  ("replace", 2265, 2266, 2185, 2186);
  ("equal", 2266, 2269, 2186, 2189);
  ("delete", 2269, 2270, 2189, 2189);
  ("equal", 2270, 2271, 2189, 2190);
  ("replace", 2271, 2282, 2190, 2195);
  ("equal", 2282, 2289, 2195, 2202);
  ("replace", 2289, 2299, 2202, 2209);
  ("equal", 2299, 2307, 2209, 2217);
  ("replace", 2307, 2308, 2217, 2218);
  ("equal", 2308, 2323, 2218, 2233);
  ("replace", 2323, 2324, 2233, 2234);
  ("equal", 2324, 2340, 2234, 2250);
  ("replace", 2340, 2341, 2250, 2251);
  ("equal", 2341, 2372, 2251, 2282);
  ("replace", 2372, 2374, 2282, 2284);
  ("equal", 2374, 2376, 2284, 2286);
  ("replace", 2376, 2377, 2286, 2287);
  ("equal", 2377, 2378, 2287, 2288);
  ("replace", 2378, 2379, 2288, 2289);
  ("equal", 2379, 2380, 2289, 2290);
  ("delete", 2380, 2381, 2290, 2290);
  ("equal", 2381, 2404, 2290, 2313);
  ("delete", 2404, 2405, 2313, 2313);
  ("equal", 2405, 2424, 2313, 2332);
  ("delete", 2424, 2425, 2332, 2332);
  ("equal", 2425, 2431, 2332, 2338);
  ("delete", 2431, 2432, 2338, 2338);
  ("equal", 2432, 2435, 2338, 2341);
  ("replace", 2435, 2437, 2341, 2343);
  ("equal", 2437, 2438, 2343, 2344);
  ("replace", 2438, 2439, 2344, 2345);
  ("equal", 2439, 2440, 2345, 2346);
  ("replace", 2440, 2441, 2346, 2347);
  ("equal", 2441, 2494, 2347, 2400);
  ("replace", 2494, 2498, 2400, 2404);
  ("equal", 2498, 2500, 2404, 2406);
  ("replace", 2500, 2505, 2406, 2409);
  ("equal", 2505, 2506, 2409, 2410);
  ("replace", 2506, 2507, 2410, 2411);
  ("equal", 2507, 2510, 2411, 2414);
  ("replace", 2510, 2511, 2414, 2415);
  ("equal", 2511, 2512, 2415, 2416);
  ("replace", 2512, 2514, 2416, 2418);
  ("equal", 2514, 2515, 2418, 2419);
  ("replace", 2515, 2528, 2419, 2427);
  ("equal", 2528, 2536, 2427, 2435);
  ("replace", 2536, 2546, 2435, 2442);
  ("equal", 2546, 2554, 2442, 2450);
  ("replace", 2554, 2555, 2450, 2451);
  ("equal", 2555, 2570, 2451, 2466);
  ("replace", 2570, 2571, 2466, 2467);
  ("equal", 2571, 2587, 2467, 2483);
  ("replace", 2587, 2588, 2483, 2484);
  ("equal", 2588, 2619, 2484, 2515);
  ("replace", 2619, 2621, 2515, 2517);
  ("equal", 2621, 2623, 2517, 2519);
  ("replace", 2623, 2624, 2519, 2520);
  ("equal", 2624, 2625, 2520, 2521);
  ("replace", 2625, 2626, 2521, 2522);
  ("equal", 2626, 2627, 2522, 2523);
  ("delete", 2627, 2628, 2523, 2523);
  ("equal", 2628, 2651, 2523, 2546);
  ("delete", 2651, 2652, 2546, 2546);
  ("equal", 2652, 2671, 2546, 2565);
  ("delete", 2671, 2672, 2565, 2565);
  ("equal", 2672, 2678, 2565, 2571);
  ("delete", 2678, 2679, 2571, 2571);
  ("equal", 2679, 2682, 2571, 2574);
  ("replace", 2682, 2684, 2574, 2576);
  ("equal", 2684, 2685, 2576, 2577);
  ("replace", 2685, 2686, 2577, 2578);
  ("equal", 2686, 2687, 2578, 2579);
  ("replace", 2687, 2688, 2579, 2580);
  ("equal", 2688, 2741, 2580, 2633);
  ("replace", 2741, 2742, 2633, 2634);
  ("equal", 2742, 2744, 2634, 2636);
  ("replace", 2744, 2753, 2636, 2641);
  ("equal", 2753, 2760, 2641, 2648);
  ("replace", 2760, 2763, 2648, 2651);
  ("equal", 2763, 2764, 2651, 2652);
  ("replace", 2764, 2765, 2652, 2653);
  ("equal", 2765, 2777, 2653, 2665);
  ("replace", 2777, 2778, 2665, 2666);
  ("equal", 2778, 2794, 2666, 2682);
  ("replace", 2794, 2795, 2682, 2683);
  ("equal", 2795, 2826, 2683, 2714);
  ("replace", 2826, 2828, 2714, 2716);
  ("equal", 2828, 2830, 2716, 2718);
  ("replace", 2830, 2831, 2718, 2719);
  ("equal", 2831, 2832, 2719, 2720);
  ("replace", 2832, 2833, 2720, 2721);
  ("equal", 2833, 2834, 2721, 2722);
  ("delete", 2834, 2835, 2722, 2722);
  ("equal", 2835, 2858, 2722, 2745);
  ("delete", 2858, 2859, 2745, 2745);
  ("equal", 2859, 2878, 2745, 2764);
  ("delete", 2878, 2879, 2764, 2764);
  ("equal", 2879, 2885, 2764, 2770);
  ("delete", 2885, 2886, 2770, 2770);
  ("equal", 2886, 2889, 2770, 2773);
  ("replace", 2889, 2891, 2773, 2775);
  ("equal", 2891, 2892, 2775, 2776);
  ("replace", 2892, 2893, 2776, 2777);
  ("equal", 2893, 2894, 2777, 2778);
  ("replace", 2894, 2895, 2778, 2779);
  ("equal", 2895, 2944, 2779, 2828);
  ("replace", 2944, 2945, 2828, 2829);
  ("equal", 2945, 2946, 2829, 2830);
  ("replace", 2946, 2947, 2830, 2831);
  ("equal", 2947, 2948, 2831, 2832);
  ("replace", 2948, 2949, 2832, 2833);
  ("equal", 2949, 2951, 2833, 2835);
  ("replace", 2951, 2960, 2835, 2841);
  ("equal", 2960, 2968, 2841, 2849);
  ("replace", 2968, 2969, 2849, 2850);
  ("equal", 2969, 2984, 2850, 2865);
  ("replace", 2984, 2985, 2865, 2866);
  ("equal", 2985, 3001, 2866, 2882);
  ("replace", 3001, 3002, 2882, 2883);
  ("equal", 3002, 3033, 2883, 2914);
  ("replace", 3033, 3035, 2914, 2916);
  ("equal", 3035, 3037, 2916, 2918);
  ("replace", 3037, 3038, 2918, 2919);
  ("equal", 3038, 3039, 2919, 2920);
  ("replace", 3039, 3040, 2920, 2921);
  ("equal", 3040, 3041, 2921, 2922);
  ("delete", 3041, 3042, 2922, 2922);
  ("equal", 3042, 3065, 2922, 2945);
  ("delete", 3065, 3066, 2945, 2945);
  ("equal", 3066, 3085, 2945, 2964);
  ("delete", 3085, 3086, 2964, 2964);
  ("equal", 3086, 3092, 2964, 2970);
  ("delete", 3092, 3093, 2970, 2970);
  ("equal", 3093, 3096, 2970, 2973);
  ("replace", 3096, 3098, 2973, 2975);
  ("equal", 3098, 3099, 2975, 2976);
  ("replace", 3099, 3100, 2976, 2977);
  ("equal", 3100, 3101, 2977, 2978);
  ("replace", 3101, 3102, 2978, 2979);
  ("equal", 3102, 3151, 2979, 3028);
  ("replace", 3151, 3152, 3028, 3029);
  ("equal", 3152, 3153, 3029, 3030);
  ("replace", 3153, 3154, 3030, 3031);
  ("equal", 3154, 3155, 3031, 3032);
  ("replace", 3155, 3164, 3032, 3035);
  ("equal", 3164, 3166, 3035, 3037);
  ("replace", 3166, 3168, 3037, 3038);
  ("equal", 3168, 3169, 3038, 3039);
  ("replace", 3169, 3170, 3039, 3040);
  ("equal", 3170, 3171, 3040, 3041);
  ("replace", 3171, 3172, 3041, 3042);
  ("equal", 3172, 3173, 3042, 3043);
  ("replace", 3173, 3175, 3043, 3045);
  ("equal", 3175, 3176, 3045, 3046);
  ("replace", 3176, 3179, 3046, 3049);
  ("equal", 3179, 3194, 3049, 3064);
  ("replace", 3194, 3197, 3064, 3066);
  ("equal", 3197, 3219, 3066, 3088);
  ("replace", 3219, 3222, 3088, 3090);
  ("equal", 3222, 3226, 3090, 3094);
  ("replace", 3226, 3229, 3094, 3096);
  ("equal", 3229, 3238, 3096, 3105);
];;


(* ------------------------------------------------------------------------- *)
(* Full actions.                                                             *)
(* ------------------------------------------------------------------------- *)

let actions_merged = merge_actions (!actions1,actions2);;


(* ------------------------------------------------------------------------- *)
(* Define arrays describing which registers are containing dead values at    *)
(* each program location.                                                    *)
(*                                                                           *)
(* First, let's build dead value info of the original program. These don't   *)
(* consider callee-save register spills and ret.                             *)
(* ------------------------------------------------------------------------- *)

let local_montmul_p256_dead_value_info = [|
  []; (* 1: ldr q20, [x2] *)
  []; (* 2: ldp x7, x17, [x1] *)
  []; (* 3: ldr q0, [x1] *)
  []; (* 4: ldp x6, x10, [x2] *)
  []; (* 5: ldp x11, x15, [x1, #16] *)
  []; (* 6: rev64       v16.4s, v20.4s *)
  []; (* 7: subs        x4, x7, x17 *)
  []; (* 8: csetm       x3, cc  // cc = lo, ul, last *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 9: cneg    x13, x4, cc  // cc = lo, ul, last *)
  []; (* 10: mul        v16.4s, v16.4s, v0.4s *)
  []; (* 11: umulh      x12, x17, x10 *)
  [`Q20`]; (* 12: uzp1  v28.4s, v20.4s, v0.4s *)
  []; (* 13: subs       x14, x11, x7 *)
  []; (* 14: ldr        q20, [x2, #16] *)
  [`X17`]; (* 15: sbcs  x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 16: ngc  x17, xzr *)
  [`X11`; `X15`]; (* 17: subs   x8, x11, x15 *)
  [`Q16`]; (* 18: uaddlp        v27.2d, v16.4s *)
  [`X7`]; (* 19: umulh  x4, x7, x6 *)
  [`Q0`]; (* 20: uzp1   v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 21: cneg   x11, x8, cc  // cc = lo, ul, last *)
  [`Q27`]; (* 22: shl   v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 23: csetm        x15, cc  // cc = lo, ul, last *)
  []; (* 24: subs       x9, x10, x6 *)
  [`X14`]; (* 25: eor   x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 26: umlal  v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 27: cneg   x8, x9, cc  // cc = lo, ul, last *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 28: cinv   x9, x3, cc  // cc = lo, ul, last *)
  []; (* 29: cmn        x17, #0x1 *)
  []; (* 30: ldr        q28, [x1, #16] *)
  [`X7`]; (* 31: adcs   x14, x7, xzr *)
  []; (* 32: mul        x7, x13, x8 *)
  [`X5`]; (* 33: eor    x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 34: adcs   x5, x1, xzr *)
  []; (* 35: xtn        v1.2s, v20.2d *)
  []; (* 36: mov        x1, v17.d[0] *)
  [`Q17`]; (* 37: mov   x3, v17.d[1] *)
  []; (* 38: uzp2       v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 39: umulh   x16, x13, x8 *)
  [`X7`]; (* 40: eor    x13, x7, x9 *)
  []; (* 41: adds       x8, x1, x3 *)
  []; (* 42: adcs       x7, x4, x12 *)
  []; (* 43: xtn        v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 44: adcs x12, x12, xzr *)
  [`X4`]; (* 45: adds   x8, x4, x8 *)
  [`X7`]; (* 46: adcs   x3, x3, x7 *)
  []; (* 47: ldp        x7, x2, [x2, #16] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 48: adcs x12, x12, xzr *)
  []; (* 49: cmn        x9, #0x1 *)
  [`X13`]; (* 50: adcs  x8, x8, x13 *)
  [`X16`]; (* 51: eor   x13, x16, x9 *)
  [`X13`; `X3`]; (* 52: adcs    x16, x3, x13 *)
  []; (* 53: lsl        x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 54: adc     x13, x12, x9 *)
  [`X6`]; (* 55: subs   x12, x6, x7 *)
  [`X10`]; (* 56: sbcs  x9, x10, x2 *)
  []; (* 57: lsr        x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 58: ngc  x4, xzr *)
  [`X2`; `X7`]; (* 59: subs     x6, x2, x7 *)
  [`X15`]; (* 60: cinv  x2, x15, cc  // cc = lo, ul, last *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 61: cneg x6, x6, cc  // cc = lo, ul, last *)
  []; (* 62: subs       x7, x1, x3 *)
  []; (* 63: eor        x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 64: sbc  x1, x1, x10 *)
  [`X3`; `X8`]; (* 65: adds     x15, x8, x3 *)
  [`X10`; `X16`]; (* 66: adcs   x3, x16, x10 *)
  []; (* 67: mul        x16, x11, x6 *)
  [`X13`; `X7`]; (* 68: adcs    x8, x13, x7 *)
  [`X12`]; (* 69: eor   x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 70: adc    x10, x1, xzr *)
  []; (* 71: cmn        x4, #0x1 *)
  [`X11`]; (* 72: umulh x6, x11, x6 *)
  [`X13`]; (* 73: adcs  x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 74: adcs   x1, x9, xzr *)
  []; (* 75: lsl        x13, x15, #32 *)
  []; (* 76: subs       x12, x15, x13 *)
  []; (* 77: lsr        x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 78: sbc  x15, x15, x7 *)
  [`X13`; `X3`]; (* 79: adds    x9, x3, x13 *)
  [`X7`; `X8`]; (* 80: adcs     x3, x8, x7 *)
  []; (* 81: umulh      x8, x14, x11 *)
  []; (* 82: umull      v21.2d, v0.2s, v1.2s *)
  [`X10`]; (* 83: adcs  x12, x10, x12 *)
  []; (* 84: umull      v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 85: adc  x15, x15, xzr *)
  [`Q20`]; (* 86: rev64 v24.4s, v20.4s *)
  [`X12`; `X15`]; (* 87: stp    x12, x15, [x0, #16] *)
  []; (* 88: movi       v2.2d, #0xffffffff *)
  []; (* 89: mul        x10, x14, x11 *)
  [`Q24`]; (* 90: mul   v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 91: subs  x13, x14, x5 *)
  [`Q28`]; (* 92: uzp2  v19.4s, v28.4s, v28.4s *)
  []; (* 93: csetm      x15, cc  // cc = lo, ul, last *)
  [`Q21`]; (* 94: usra  v3.2d, v21.2d, #32 *)
  []; (* 95: mul        x7, x5, x1 *)
  [`Q16`]; (* 96: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 97: cneg x13, x13, cc  // cc = lo, ul, last *)
  [`Q4`]; (* 98: uaddlp v5.2d, v4.4s *)
  []; (* 99: subs       x11, x1, x11 *)
  [`Q2`]; (* 100: and   v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 101: umulh x5, x5, x1 *)
  [`Q5`]; (* 102: shl   v24.2d, v5.2d, #32 *)
  []; (* 103: cneg      x11, x11, cc  // cc = lo, ul, last *)
  [`Q19`]; (* 104: umlal        v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 105: cinv x12, x15, cc  // cc = lo, ul, last *)
  [`Q0`; `Q1`]; (* 106: umlal   v24.2d, v0.2s, v1.2s *)
  []; (* 107: adds      x15, x10, x7 *)
  []; (* 108: mul       x14, x13, x11 *)
  [`X6`]; (* 109: eor   x1, x6, x2 *)
  []; (* 110: adcs      x6, x8, x5 *)
  [`X3`; `X9`]; (* 111: stp     x9, x3, [x0] *)
  [`Q3`]; (* 112: usra  v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 113: adcs  x9, x5, xzr *)
  [`X13`]; (* 114: umulh        x11, x13, x11 *)
  [`X8`]; (* 115: adds  x15, x8, x15 *)
  [`X6`]; (* 116: adcs  x7, x7, x6 *)
  [`X14`]; (* 117: eor  x8, x14, x12 *)
  [`Q16`]; (* 118: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 119: adcs  x13, x9, xzr *)
  []; (* 120: cmn       x12, #0x1 *)
  []; (* 121: mov       x9, v24.d[1] *)
  [`X15`; `X8`]; (* 122: adcs   x14, x15, x8 *)
  [`X11`]; (* 123: eor  x6, x11, x12 *)
  [`X7`]; (* 124: adcs  x6, x7, x6 *)
  [`Q24`]; (* 125: mov  x5, v24.d[0] *)
  []; (* 126: mov       x11, v21.d[1] *)
  [`Q21`]; (* 127: mov  x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 128: adc   x3, x13, x12 *)
  []; (* 129: adds      x12, x5, x9 *)
  []; (* 130: adcs      x13, x7, x11 *)
  []; (* 131: ldp       x15, x8, [x0] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 132: adcs        x11, x11, xzr *)
  [`X7`]; (* 133: adds  x12, x7, x12 *)
  []; (* 134: eor       x16, x16, x2 *)
  [`X13`; `X9`]; (* 135: adcs   x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 136: adcs        x11, x11, xzr *)
  []; (* 137: cmn       x2, #0x1 *)
  []; (* 138: ldp       x9, x13, [x0, #16] *)
  [`X12`]; (* 139: adcs x16, x12, x16 *)
  [`X7`]; (* 140: adcs  x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 141: adc  x2, x11, x2 *)
  [`X15`; `X5`]; (* 142: adds   x7, x5, x15 *)
  [`X16`; `X8`]; (* 143: adcs   x15, x16, x8 *)
  [`X17`; `X4`]; (* 144: eor    x5, x17, x4 *)
  [`X1`]; (* 145: adcs  x9, x1, x9 *)
  [`X10`]; (* 146: eor  x1, x10, x5 *)
  [`X13`; `X2`]; (* 147: adcs   x16, x2, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 148: adc x2, xzr, xzr *)
  []; (* 149: cmn       x5, #0x1 *)
  [`X14`]; (* 150: eor  x13, x14, x5 *)
  [`X1`]; (* 151: adcs  x14, x1, x7 *)
  [`X6`]; (* 152: eor   x1, x6, x5 *)
  [`X13`]; (* 153: adcs x6, x13, x15 *)
  [`X1`]; (* 154: adcs  x10, x1, x9 *)
  [`X3`]; (* 155: eor   x4, x3, x5 *)
  []; (* 156: mov       x1, #0xffffffff                 // #4294967295 *)
  [`X4`]; (* 157: adcs  x8, x4, x16 *)
  []; (* 158: lsr       x13, x14, #32 *)
  []; (* 159: adcs      x17, x2, x5 *)
  []; (* 160: adcs      x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 161: adc   x4, x5, xzr *)
  [`X10`; `X7`]; (* 162: adds   x12, x10, x7 *)
  [`X15`; `X8`]; (* 163: adcs   x7, x8, x15 *)
  [`X17`; `X9`]; (* 164: adcs   x5, x17, x9 *)
  [`X11`; `X16`]; (* 165: adcs  x9, x11, x16 *)
  []; (* 166: lsl       x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 167: adc     x10, x4, x2 *)
  []; (* 168: subs      x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 169: sbc  x4, x14, x13 *)
  [`X6`]; (* 170: adds  x11, x6, x11 *)
  [`X13`]; (* 171: adcs x12, x12, x13 *)
  []; (* 172: lsl       x15, x11, #32 *)
  [`X7`]; (* 173: adcs  x17, x7, x17 *)
  []; (* 174: lsr       x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 175: adc   x13, x4, xzr *)
  []; (* 176: subs      x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 177: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 178: adds  x8, x12, x15 *)
  [`X17`; `X7`]; (* 179: adcs   x15, x17, x7 *)
  [`X13`]; (* 180: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 181: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 182: adds    x7, x5, x4 *)
  [`X11`; `X9`]; (* 183: adcs   x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 184: adc  x13, x10, xzr *)
  []; (* 185: add       x12, x13, #0x1 *)
  []; (* 186: neg       x11, x12 *)
  []; (* 187: lsl       x4, x12, #32 *)
  []; (* 188: adds      x17, x17, x4 *)
  []; (* 189: sub       x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 190: adc x13, x13, xzr *)
  [`X8`]; (* 191: subs  x11, x8, x11 *)
  [`X15`]; (* 192: sbcs x4, x15, x4 *)
  []; (* 193: sbcs      x7, x7, xzr *)
  []; (* 194: sbcs      x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 195: sbcs x13, x13, x12 *)
  []; (* 196: mov       x12, #0xffffffff00000001        // #-4294967295 *)
  []; (* 197: adds      x11, x11, x13 *)
  []; (* 198: and       x1, x1, x13 *)
  [`X1`]; (* 199: adcs  x4, x4, x1 *)
  [`X12`; `X13`]; (* 200: and   x1, x12, x13 *)
  [`X11`; `X4`]; (* 201: stp    x11, x4, [x0] *)
  [`X7`]; (* 202: adcs  x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 203: adc  x1, x17, x1 *)
  [`X1`; `X4`]; (* 204: stp     x4, x1, [x0, #16] *)
|];;

let local_montsqr_p256_dead_value_info = [|
  []; (* 1: ldr q19, [x1] *)
  []; (* 2: ldp x9, x13, [x1] *)
  []; (* 3: ldr q23, [x1, #16] *)
  []; (* 4: ldr q0, [x1] *)
  []; (* 5: ldp x1, x10, [x1, #16] *)
  []; (* 6: uzp2        v29.4s, v19.4s, v19.4s *)
  []; (* 7: xtn v4.2s, v19.2d *)
  []; (* 8: umulh       x8, x9, x13 *)
  []; (* 9: rev64       v20.4s, v23.4s *)
  []; (* 10: umull      v16.2d, v19.2s, v19.2s *)
  [`Q29`; `Q4`]; (* 11: umull   v1.2d, v29.2s, v4.2s *)
  []; (* 12: mul        v20.4s, v20.4s, v0.4s *)
  []; (* 13: subs       x14, x9, x13 *)
  []; (* 14: umulh      x15, x9, x1 *)
  []; (* 15: mov        x16, v16.d[1] *)
  [`Q19`]; (* 16: umull2        v4.2d, v19.4s, v19.4s *)
  [`Q16`]; (* 17: mov   x4, v16.d[0] *)
  [`Q23`]; (* 18: uzp1  v17.4s, v23.4s, v0.4s *)
  [`Q20`]; (* 19: uaddlp        v19.2d, v20.4s *)
  []; (* 20: lsr        x7, x8, #63 *)
  [`X9`]; (* 21: mul    x11, x9, x13 *)
  []; (* 22: mov        x12, v1.d[0] *)
  []; (* 23: csetm      x5, cc  // cc = lo, ul, last *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 24: cneg  x6, x14, cc  // cc = lo, ul, last *)
  []; (* 25: mov        x3, v4.d[1] *)
  [`Q4`]; (* 26: mov    x14, v4.d[0] *)
  []; (* 27: subs       x2, x10, x1 *)
  [`Q1`]; (* 28: mov    x9, v1.d[1] *)
  [`X2`]; (* 29: cneg   x17, x2, cc  // cc = lo, ul, last *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 30: cinv   x2, x5, cc  // cc = lo, ul, last *)
  [`X4`]; (* 31: adds   x5, x4, x12, lsl #33 *)
  [`X8`]; (* 32: extr   x4, x8, x11, #63 *)
  [`X12`]; (* 33: lsr   x8, x12, #31 *)
  [`Q0`]; (* 34: uzp1   v20.4s, v0.4s, v0.4s *)
  []; (* 35: shl        v19.2d, v19.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 36: adc    x16, x16, x8 *)
  [`X14`]; (* 37: adds  x8, x14, x9, lsl #33 *)
  [`X9`]; (* 38: lsr    x14, x9, #31 *)
  []; (* 39: lsl        x9, x5, #32 *)
  [`Q17`; `Q20`]; (* 40: umlal  v19.2d, v20.2s, v17.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 41: adc    x14, x3, x14 *)
  [`X11`]; (* 42: adds  x16, x16, x11, lsl #1 *)
  []; (* 43: lsr        x3, x5, #32 *)
  []; (* 44: umulh      x12, x6, x17 *)
  [`X8`]; (* 45: adcs   x4, x8, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`; `X7`]; (* 46: adc     x11, x14, x7 *)
  []; (* 47: subs       x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 48: sbc  x5, x5, x3 *)
  [`X9`]; (* 49: adds   x16, x16, x9 *)
  []; (* 50: mov        x14, v19.d[0] *)
  [`X6`]; (* 51: mul    x17, x6, x17 *)
  [`X4`]; (* 52: adcs   x3, x4, x3 *)
  []; (* 53: lsl        x7, x16, #32 *)
  []; (* 54: umulh      x13, x13, x10 *)
  [`X8`]; (* 55: adcs   x11, x11, x8 *)
  []; (* 56: lsr        x8, x16, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 57: adc  x5, x5, xzr *)
  []; (* 58: subs       x9, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 59: sbc  x16, x16, x8 *)
  [`X3`]; (* 60: adds   x7, x3, x7 *)
  [`Q19`]; (* 61: mov   x3, v19.d[1] *)
  [`X11`; `X8`]; (* 62: adcs    x6, x11, x8 *)
  []; (* 63: umulh      x11, x1, x10 *)
  [`X9`]; (* 64: adcs   x5, x5, x9 *)
  [`X12`]; (* 65: eor   x8, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 66: adc   x9, x16, xzr *)
  []; (* 67: adds       x16, x14, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 68: adc  x15, x15, xzr *)
  [`X16`]; (* 69: adds  x12, x16, x3 *)
  [`X17`]; (* 70: eor   x16, x17, x2 *)
  []; (* 71: mul        x4, x1, x10 *)
  []; (* 72: adcs       x15, x15, x13 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 73: adc   x17, x13, xzr *)
  [`X3`]; (* 74: adds   x15, x15, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 75: adc   x3, x17, xzr *)
  []; (* 76: cmn        x2, #0x1 *)
  []; (* 77: mul        x17, x10, x10 *)
  [`X16`]; (* 78: adcs  x12, x12, x16 *)
  [`X15`; `X8`]; (* 79: adcs    x16, x15, x8 *)
  []; (* 80: umulh      x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 81: adc    x2, x3, x2 *)
  []; (* 82: adds       x14, x14, x14 *)
  []; (* 83: adcs       x12, x12, x12 *)
  []; (* 84: adcs       x16, x16, x16 *)
  []; (* 85: adcs       x2, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 86: adc  x15, xzr, xzr *)
  [`X7`]; (* 87: adds   x14, x14, x7 *)
  []; (* 88: mul        x3, x1, x1 *)
  [`X6`]; (* 89: adcs   x12, x12, x6 *)
  []; (* 90: lsr        x7, x14, #32 *)
  [`X5`]; (* 91: adcs   x16, x16, x5 *)
  []; (* 92: lsl        x5, x14, #32 *)
  [`X1`]; (* 93: umulh  x13, x1, x1 *)
  [`X9`]; (* 94: adcs   x2, x2, x9 *)
  []; (* 95: mov        x6, #0xffffffff                 // #4294967295 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 96: adc  x15, x15, xzr *)
  [`X4`]; (* 97: adds   x8, x4, x4 *)
  [`X11`]; (* 98: adcs  x1, x11, x11 *)
  []; (* 99: mov        x11, #0xffffffff00000001        // #-4294967295 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 100: adc x4, xzr, xzr *)
  []; (* 101: subs      x9, x14, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 102: sbc x14, x14, x7 *)
  [`X5`]; (* 103: adds  x12, x12, x5 *)
  [`X7`]; (* 104: adcs  x16, x16, x7 *)
  []; (* 105: lsl       x5, x12, #32 *)
  []; (* 106: lsr       x7, x12, #32 *)
  [`X9`]; (* 107: adcs  x2, x2, x9 *)
  [`X15`]; (* 108: adcs x14, x15, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 109: adc x15, xzr, xzr *)
  []; (* 110: subs      x9, x12, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 111: sbc x12, x12, x7 *)
  [`X5`]; (* 112: adds  x16, x16, x5 *)
  [`X7`]; (* 113: adcs  x2, x2, x7 *)
  [`X9`]; (* 114: adcs  x14, x14, x9 *)
  [`X15`]; (* 115: adcs x12, x15, x12 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 116: adc x15, xzr, xzr *)
  [`X3`]; (* 117: adds  x16, x16, x3 *)
  [`X13`]; (* 118: adcs x2, x2, x13 *)
  [`X17`]; (* 119: adcs x14, x14, x17 *)
  [`X10`]; (* 120: adcs x12, x12, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 121: adc x15, x15, xzr *)
  [`X8`]; (* 122: adds  x2, x2, x8 *)
  [`X1`]; (* 123: adcs  x14, x14, x1 *)
  [`X4`]; (* 124: adcs  x12, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 125: adcs        x15, x15, xzr *)
  []; (* 126: adds      x3, x16, #0x1 *)
  [`X6`]; (* 127: sbcs  x5, x2, x6 *)
  []; (* 128: sbcs      x8, x14, xzr *)
  []; (* 129: sbcs      x11, x12, x11 *)
  [`X15`]; (* 130: sbcs xzr, x15, xzr *)
  [`X3`]; (* 131: csel  x16, x3, x16, cs  // cs = hs, nlast *)
  [`X8`]; (* 132: csel  x14, x8, x14, cs  // cs = hs, nlast *)
  [`X11`]; (* 133: csel x12, x11, x12, cs  // cs = hs, nlast *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 134: csel  x2, x5, x2, cs  // cs = hs, nlast *)
  [`X12`; `X14`]; (* 135: stp   x14, x12, [x0, #16] *)
  [`X16`; `X2`]; (* 136: stp    x16, x2, [x0] *)
|];;

let local_sub_p256_dead_value_info = [|
  []; (* 1: ldp x5, x6, [x1] *)
  []; (* 2: ldp x4, x3, [x2] *)
  [`X4`]; (* 3: subs    x5, x5, x4 *)
  [`X3`]; (* 4: sbcs    x6, x6, x3 *)
  []; (* 5: ldp x7, x8, [x1, #16] *)
  []; (* 6: ldp x4, x3, [x2, #16] *)
  [`X4`]; (* 7: sbcs    x7, x7, x4 *)
  [`X3`]; (* 8: sbcs    x8, x8, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 9: csetm x3, cc  // cc = lo, ul, last *)
  []; (* 10: adds       x5, x5, x3 *)
  []; (* 11: and        x4, x3, #0xffffffff *)
  [`X4`]; (* 12: adcs   x6, x6, x4 *)
  []; (* 13: adcs       x7, x7, xzr *)
  [`X3`]; (* 14: and    x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 15: adc    x8, x8, x4 *)
  [`X5`; `X6`]; (* 16: stp      x5, x6, [x0] *)
  [`X7`; `X8`]; (* 17: stp      x7, x8, [x0, #16] *)
|];;

let p256_montjadd_unopt_dead_value_info =
  let _,_,n,_,_ = last !actions1 in Array.init n (fun _ -> []);;

let i = ref 0;;
List.iter (fun code_block ->
  match code_block with
  | "equal", Some instcnt ->
    (* simply, don't add any data. *)
    i := instcnt + !i
  | callstr, None -> begin
    match callstr with
    | "call montmul_p256" ->
      i := 4 + !i; (* arguments + bl *)
      for j = 0 to Array.length local_montmul_p256_dead_value_info - 1 do
        p256_montjadd_unopt_dead_value_info.(!i) <-
          local_montmul_p256_dead_value_info.(j);
        i := 1 + !i;
      done;
      i := 1 + !i (* ret *)
    | "call montsqr_p256" ->
      i := 3 + !i; (* arguments + bl *)
      for j = 0 to Array.length local_montsqr_p256_dead_value_info - 1 do
        p256_montjadd_unopt_dead_value_info.(!i) <-
          local_montsqr_p256_dead_value_info.(j);
        i := 1 + !i;
      done;
      i := 1 + !i (* ret *)
    | "call sub_p256" ->
      i := 4 + !i; (* arguments + bl *)
      for j = 0 to Array.length local_sub_p256_dead_value_info - 1 do
        p256_montjadd_unopt_dead_value_info.(!i) <-
          local_sub_p256_dead_value_info.(j);
        i := 1 + !i;
      done;
      i := 1 + !i (* ret *)
  end)
  code_blocks;;

assert (!i = Array.length p256_montjadd_unopt_dead_value_info);;

(* ------------------------------------------------------------------------- *)
(* Second, build dead value info of the optimized program.                   *)
(* ------------------------------------------------------------------------- *)

let p256_montjadd_dead_value_info = [|
  []; (* 1: mov x21, x0 *)
  []; (* 2: mov x22, x1 *)
  []; (* 3: mov x23, x2 *)
  []; (* 4: mov x0, sp *)
  []; (* 5: ldr q19, [x22, #64] *)
  []; (* 6: ldp x9, x13, [x22, #64] *)
  []; (* 7: ldr q23, [x22, #80] *)
  []; (* 8: ldr q0, [x22, #64] *)
  []; (* 9: ldp x1, x10, [x22, #80] *)
  []; (* 10: uzp2 v29.4s, v19.4s, v19.4s *)
  []; (* 11: xtn v4.2s, v19.2d *)
  []; (* 12: umulh x8, x9, x13 *)
  []; (* 13: rev64 v20.4s, v23.4s *)
  []; (* 14: umull v16.2d, v19.2s, v19.2s *)
  [`Q29`; `Q4`]; (* 15: umull v1.2d, v29.2s, v4.2s *)
  []; (* 16: mul v20.4s, v20.4s, v0.4s *)
  []; (* 17: subs x14, x9, x13 *)
  []; (* 18: umulh x15, x9, x1 *)
  []; (* 19: mov x16, v16.d[1] *)
  [`Q19`]; (* 20: umull2 v4.2d, v19.4s, v19.4s *)
  [`Q16`]; (* 21: mov x4, v16.d[0] *)
  [`Q23`]; (* 22: uzp1 v17.4s, v23.4s, v0.4s *)
  [`Q20`]; (* 23: uaddlp v19.2d, v20.4s *)
  []; (* 24: lsr x7, x8, #63 *)
  [`X9`]; (* 25: mul x11, x9, x13 *)
  []; (* 26: mov x12, v1.d[0] *)
  []; (* 27: csetm x5, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 28: cneg x6, x14, cc *)
  []; (* 29: mov x3, v4.d[1] *)
  [`Q4`]; (* 30: mov x14, v4.d[0] *)
  []; (* 31: subs x2, x10, x1 *)
  [`Q1`]; (* 32: mov x9, v1.d[1] *)
  [`X2`]; (* 33: cneg x17, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 34: cinv x2, x5, cc *)
  [`X4`]; (* 35: adds x5, x4, x12, lsl #33 *)
  [`X8`]; (* 36: extr x4, x8, x11, #63 *)
  [`X12`]; (* 37: lsr x8, x12, #31 *)
  [`Q0`]; (* 38: uzp1 v20.4s, v0.4s, v0.4s *)
  []; (* 39: shl v19.2d, v19.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 40: adc x16, x16, x8 *)
  [`X14`]; (* 41: adds x8, x14, x9, lsl #33 *)
  [`X9`]; (* 42: lsr x14, x9, #31 *)
  []; (* 43: lsl x9, x5, #32 *)
  [`Q17`; `Q20`]; (* 44: umlal v19.2d, v20.2s, v17.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 45: adc x14, x3, x14 *)
  [`X11`]; (* 46: adds x16, x16, x11, lsl #1 *)
  []; (* 47: lsr x3, x5, #32 *)
  []; (* 48: umulh x12, x6, x17 *)
  [`X8`]; (* 49: adcs x4, x8, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`; `X7`]; (* 50: adc x11, x14, x7 *)
  []; (* 51: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 52: sbc x5, x5, x3 *)
  [`X9`]; (* 53: adds x16, x16, x9 *)
  []; (* 54: mov x14, v19.d[0] *)
  [`X6`]; (* 55: mul x17, x6, x17 *)
  [`X4`]; (* 56: adcs x3, x4, x3 *)
  []; (* 57: lsl x7, x16, #32 *)
  []; (* 58: umulh x13, x13, x10 *)
  [`X8`]; (* 59: adcs x11, x11, x8 *)
  []; (* 60: lsr x8, x16, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 61: adc x5, x5, xzr *)
  []; (* 62: subs x9, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 63: sbc x16, x16, x8 *)
  [`X3`]; (* 64: adds x7, x3, x7 *)
  [`Q19`]; (* 65: mov x3, v19.d[1] *)
  [`X11`; `X8`]; (* 66: adcs x6, x11, x8 *)
  []; (* 67: umulh x11, x1, x10 *)
  [`X9`]; (* 68: adcs x5, x5, x9 *)
  [`X12`]; (* 69: eor x8, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 70: adc x9, x16, xzr *)
  []; (* 71: adds x16, x14, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 72: adc x15, x15, xzr *)
  [`X16`]; (* 73: adds x12, x16, x3 *)
  [`X17`]; (* 74: eor x16, x17, x2 *)
  []; (* 75: mul x4, x1, x10 *)
  []; (* 76: adcs x15, x15, x13 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 77: adc x17, x13, xzr *)
  [`X3`]; (* 78: adds x15, x15, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 79: adc x3, x17, xzr *)
  []; (* 80: cmn x2, #0x1 *)
  []; (* 81: mul x17, x10, x10 *)
  [`X16`]; (* 82: adcs x12, x12, x16 *)
  [`X15`; `X8`]; (* 83: adcs x16, x15, x8 *)
  []; (* 84: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 85: adc x2, x3, x2 *)
  []; (* 86: adds x14, x14, x14 *)
  []; (* 87: adcs x12, x12, x12 *)
  []; (* 88: adcs x16, x16, x16 *)
  []; (* 89: adcs x2, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 90: adc x15, xzr, xzr *)
  [`X7`]; (* 91: adds x14, x14, x7 *)
  []; (* 92: mul x3, x1, x1 *)
  [`X6`]; (* 93: adcs x12, x12, x6 *)
  []; (* 94: lsr x7, x14, #32 *)
  [`X5`]; (* 95: adcs x16, x16, x5 *)
  []; (* 96: lsl x5, x14, #32 *)
  [`X1`]; (* 97: umulh x13, x1, x1 *)
  [`X9`]; (* 98: adcs x2, x2, x9 *)
  []; (* 99: mov x6, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 100: adc x15, x15, xzr *)
  [`X4`]; (* 101: adds x8, x4, x4 *)
  [`X11`]; (* 102: adcs x1, x11, x11 *)
  []; (* 103: mov x11, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 104: adc x4, xzr, xzr *)
  []; (* 105: subs x9, x14, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 106: sbc x14, x14, x7 *)
  [`X5`]; (* 107: adds x12, x12, x5 *)
  [`X7`]; (* 108: adcs x16, x16, x7 *)
  []; (* 109: lsl x5, x12, #32 *)
  []; (* 110: lsr x7, x12, #32 *)
  [`X9`]; (* 111: adcs x2, x2, x9 *)
  [`X15`]; (* 112: adcs x14, x15, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 113: adc x15, xzr, xzr *)
  []; (* 114: subs x9, x12, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 115: sbc x12, x12, x7 *)
  [`X5`]; (* 116: adds x16, x16, x5 *)
  [`X7`]; (* 117: adcs x2, x2, x7 *)
  [`X9`]; (* 118: adcs x14, x14, x9 *)
  [`X15`]; (* 119: adcs x12, x15, x12 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 120: adc x15, xzr, xzr *)
  [`X3`]; (* 121: adds x16, x16, x3 *)
  [`X13`]; (* 122: adcs x2, x2, x13 *)
  [`X17`]; (* 123: adcs x14, x14, x17 *)
  [`X10`]; (* 124: adcs x12, x12, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 125: adc x15, x15, xzr *)
  [`X8`]; (* 126: adds x2, x2, x8 *)
  [`X1`]; (* 127: adcs x14, x14, x1 *)
  [`X4`]; (* 128: adcs x12, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 129: adcs x15, x15, xzr *)
  []; (* 130: adds x3, x16, #0x1 *)
  [`X6`]; (* 131: sbcs x5, x2, x6 *)
  []; (* 132: sbcs x8, x14, xzr *)
  []; (* 133: sbcs x11, x12, x11 *)
  [`X15`]; (* 134: sbcs xzr, x15, xzr *)
  [`X16`; `X3`]; (* 135: csel x19, x3, x16, cs *)
  [`X8`]; (* 136: csel x14, x8, x14, cs *)
  [`X11`]; (* 137: csel x12, x11, x12, cs *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X5`]; (* 138: csel x20, x5, x2, cs *)
  [`X12`; `X14`]; (* 139: stp x14, x12, [x0, #16] *)
  [`X0`]; (* 140: stp x19, x20, [x0] *)
  []; (* 141: ldr q19, [x23, #64] *)
  []; (* 142: ldp x9, x13, [x23, #64] *)
  []; (* 143: ldr q23, [x23, #80] *)
  []; (* 144: ldr q0, [x23, #64] *)
  []; (* 145: ldp x1, x10, [x23, #80] *)
  []; (* 146: uzp2 v29.4s, v19.4s, v19.4s *)
  []; (* 147: xtn v4.2s, v19.2d *)
  []; (* 148: umulh x8, x9, x13 *)
  []; (* 149: rev64 v20.4s, v23.4s *)
  []; (* 150: umull v16.2d, v19.2s, v19.2s *)
  [`Q29`; `Q4`]; (* 151: umull v1.2d, v29.2s, v4.2s *)
  []; (* 152: mul v20.4s, v20.4s, v0.4s *)
  []; (* 153: subs x14, x9, x13 *)
  []; (* 154: umulh x15, x9, x1 *)
  []; (* 155: mov x16, v16.d[1] *)
  [`Q19`]; (* 156: umull2 v4.2d, v19.4s, v19.4s *)
  [`Q16`]; (* 157: mov x4, v16.d[0] *)
  [`Q23`]; (* 158: uzp1 v17.4s, v23.4s, v0.4s *)
  [`Q20`]; (* 159: uaddlp v19.2d, v20.4s *)
  []; (* 160: lsr x7, x8, #63 *)
  [`X9`]; (* 161: mul x11, x9, x13 *)
  []; (* 162: mov x12, v1.d[0] *)
  []; (* 163: csetm x5, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 164: cneg x6, x14, cc *)
  []; (* 165: mov x3, v4.d[1] *)
  [`Q4`]; (* 166: mov x14, v4.d[0] *)
  []; (* 167: subs x2, x10, x1 *)
  [`Q1`]; (* 168: mov x9, v1.d[1] *)
  [`X2`]; (* 169: cneg x17, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 170: cinv x2, x5, cc *)
  [`X4`]; (* 171: adds x5, x4, x12, lsl #33 *)
  [`X8`]; (* 172: extr x4, x8, x11, #63 *)
  [`X12`]; (* 173: lsr x8, x12, #31 *)
  [`Q0`]; (* 174: uzp1 v20.4s, v0.4s, v0.4s *)
  []; (* 175: shl v19.2d, v19.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 176: adc x16, x16, x8 *)
  [`X14`]; (* 177: adds x8, x14, x9, lsl #33 *)
  [`X9`]; (* 178: lsr x14, x9, #31 *)
  []; (* 179: lsl x9, x5, #32 *)
  [`Q17`; `Q20`]; (* 180: umlal v19.2d, v20.2s, v17.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 181: adc x14, x3, x14 *)
  [`X11`]; (* 182: adds x16, x16, x11, lsl #1 *)
  []; (* 183: lsr x3, x5, #32 *)
  []; (* 184: umulh x12, x6, x17 *)
  [`X8`]; (* 185: adcs x4, x8, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`; `X7`]; (* 186: adc x11, x14, x7 *)
  []; (* 187: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 188: sbc x5, x5, x3 *)
  [`X9`]; (* 189: adds x16, x16, x9 *)
  []; (* 190: mov x14, v19.d[0] *)
  [`X6`]; (* 191: mul x17, x6, x17 *)
  [`X4`]; (* 192: adcs x3, x4, x3 *)
  []; (* 193: lsl x7, x16, #32 *)
  []; (* 194: umulh x13, x13, x10 *)
  [`X8`]; (* 195: adcs x11, x11, x8 *)
  []; (* 196: lsr x8, x16, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 197: adc x5, x5, xzr *)
  []; (* 198: subs x9, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 199: sbc x16, x16, x8 *)
  [`X3`]; (* 200: adds x7, x3, x7 *)
  [`Q19`]; (* 201: mov x3, v19.d[1] *)
  [`X11`; `X8`]; (* 202: adcs x6, x11, x8 *)
  []; (* 203: umulh x11, x1, x10 *)
  [`X9`]; (* 204: adcs x5, x5, x9 *)
  [`X12`]; (* 205: eor x8, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 206: adc x9, x16, xzr *)
  []; (* 207: adds x16, x14, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 208: adc x15, x15, xzr *)
  [`X16`]; (* 209: adds x12, x16, x3 *)
  [`X17`]; (* 210: eor x16, x17, x2 *)
  []; (* 211: mul x4, x1, x10 *)
  []; (* 212: adcs x15, x15, x13 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 213: adc x17, x13, xzr *)
  [`X3`]; (* 214: adds x15, x15, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 215: adc x3, x17, xzr *)
  []; (* 216: cmn x2, #0x1 *)
  []; (* 217: mul x17, x10, x10 *)
  [`X16`]; (* 218: adcs x12, x12, x16 *)
  [`X15`; `X8`]; (* 219: adcs x16, x15, x8 *)
  []; (* 220: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 221: adc x2, x3, x2 *)
  []; (* 222: adds x14, x14, x14 *)
  []; (* 223: adcs x12, x12, x12 *)
  []; (* 224: adcs x16, x16, x16 *)
  []; (* 225: adcs x2, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 226: adc x15, xzr, xzr *)
  [`X7`]; (* 227: adds x14, x14, x7 *)
  []; (* 228: mul x3, x1, x1 *)
  [`X6`]; (* 229: adcs x12, x12, x6 *)
  []; (* 230: lsr x7, x14, #32 *)
  [`X5`]; (* 231: adcs x16, x16, x5 *)
  []; (* 232: lsl x5, x14, #32 *)
  [`X1`]; (* 233: umulh x13, x1, x1 *)
  [`X9`]; (* 234: adcs x2, x2, x9 *)
  []; (* 235: mov x6, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 236: adc x15, x15, xzr *)
  [`X4`]; (* 237: adds x8, x4, x4 *)
  [`X11`]; (* 238: adcs x1, x11, x11 *)
  []; (* 239: mov x11, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 240: adc x4, xzr, xzr *)
  []; (* 241: subs x9, x14, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 242: sbc x14, x14, x7 *)
  [`X5`]; (* 243: adds x12, x12, x5 *)
  [`X7`]; (* 244: adcs x16, x16, x7 *)
  []; (* 245: lsl x5, x12, #32 *)
  []; (* 246: lsr x7, x12, #32 *)
  [`X9`]; (* 247: adcs x2, x2, x9 *)
  [`X15`]; (* 248: adcs x14, x15, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 249: adc x15, xzr, xzr *)
  []; (* 250: subs x9, x12, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 251: sbc x12, x12, x7 *)
  [`X5`]; (* 252: adds x16, x16, x5 *)
  [`X7`]; (* 253: adcs x2, x2, x7 *)
  [`X9`]; (* 254: adcs x14, x14, x9 *)
  [`X15`]; (* 255: adcs x12, x15, x12 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 256: adc x15, xzr, xzr *)
  [`X3`]; (* 257: adds x16, x16, x3 *)
  [`X13`]; (* 258: adcs x2, x2, x13 *)
  [`X17`]; (* 259: adcs x14, x14, x17 *)
  [`X10`]; (* 260: adcs x12, x12, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 261: adc x15, x15, xzr *)
  [`X8`]; (* 262: adds x2, x2, x8 *)
  [`X1`]; (* 263: adcs x14, x14, x1 *)
  [`X4`]; (* 264: adcs x12, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 265: adcs x15, x15, xzr *)
  []; (* 266: adds x3, x16, #0x1 *)
  [`X6`]; (* 267: sbcs x5, x2, x6 *)
  []; (* 268: sbcs x8, x14, xzr *)
  []; (* 269: sbcs x11, x12, x11 *)
  [`X15`]; (* 270: sbcs xzr, x15, xzr *)
  [`X3`]; (* 271: csel x16, x3, x16, cs *)
  [`X8`]; (* 272: csel x14, x8, x14, cs *)
  [`X11`]; (* 273: csel x12, x11, x12, cs *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 274: csel x2, x5, x2, cs *)
  [`X12`; `X14`]; (* 275: stp x14, x12, [sp, #176] *)
  [`X16`; `X2`]; (* 276: stp x16, x2, [sp, #160] *)
  []; (* 277: ldr q20, [x22, #32] *)
  []; (* 278: ldp x7, x17, [x23, #64] *)
  []; (* 279: ldr q0, [x23, #64] *)
  []; (* 280: ldp x6, x10, [x22, #32] *)
  []; (* 281: ldp x11, x15, [x23, #80] *)
  []; (* 282: rev64 v16.4s, v20.4s *)
  []; (* 283: subs x4, x7, x17 *)
  []; (* 284: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 285: cneg x13, x4, cc *)
  []; (* 286: mul v16.4s, v16.4s, v0.4s *)
  []; (* 287: umulh x12, x17, x10 *)
  [`Q20`]; (* 288: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 289: subs x14, x11, x7 *)
  []; (* 290: ldr q20, [x22, #48] *)
  [`X17`]; (* 291: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 292: ngc x17, xzr *)
  [`X11`; `X15`]; (* 293: subs x8, x11, x15 *)
  [`Q16`]; (* 294: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 295: umulh x4, x7, x6 *)
  [`Q0`]; (* 296: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 297: cneg x11, x8, cc *)
  [`Q27`]; (* 298: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 299: csetm x15, cc *)
  []; (* 300: subs x9, x10, x6 *)
  [`X14`]; (* 301: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 302: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 303: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 304: cinv x9, x3, cc *)
  []; (* 305: cmn x17, #0x1 *)
  []; (* 306: ldr q28, [x23, #80] *)
  [`X7`]; (* 307: adcs x14, x7, xzr *)
  []; (* 308: mul x7, x13, x8 *)
  [`X5`]; (* 309: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 310: adcs x5, x1, xzr *)
  []; (* 311: xtn v1.2s, v20.2d *)
  []; (* 312: mov x1, v17.d[0] *)
  [`Q17`]; (* 313: mov x3, v17.d[1] *)
  []; (* 314: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 315: umulh x16, x13, x8 *)
  [`X7`]; (* 316: eor x13, x7, x9 *)
  []; (* 317: adds x8, x1, x3 *)
  []; (* 318: adcs x7, x4, x12 *)
  []; (* 319: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 320: adcs x12, x12, xzr *)
  [`X4`]; (* 321: adds x8, x4, x8 *)
  [`X7`]; (* 322: adcs x3, x3, x7 *)
  []; (* 323: ldp x7, x2, [x22, #48] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 324: adcs x12, x12, xzr *)
  []; (* 325: cmn x9, #0x1 *)
  [`X13`]; (* 326: adcs x8, x8, x13 *)
  [`X16`]; (* 327: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 328: adcs x16, x3, x13 *)
  []; (* 329: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 330: adc x13, x12, x9 *)
  [`X6`]; (* 331: subs x12, x6, x7 *)
  [`X10`]; (* 332: sbcs x9, x10, x2 *)
  []; (* 333: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 334: ngc x4, xzr *)
  [`X2`; `X7`]; (* 335: subs x6, x2, x7 *)
  [`X15`]; (* 336: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 337: cneg x6, x6, cc *)
  []; (* 338: subs x7, x1, x3 *)
  []; (* 339: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 340: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 341: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 342: adcs x3, x16, x10 *)
  []; (* 343: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 344: adcs x8, x13, x7 *)
  [`X12`]; (* 345: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 346: adc x10, x1, xzr *)
  []; (* 347: cmn x4, #0x1 *)
  [`X11`]; (* 348: umulh x6, x11, x6 *)
  [`X13`]; (* 349: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 350: adcs x1, x9, xzr *)
  []; (* 351: lsl x13, x15, #32 *)
  []; (* 352: subs x12, x15, x13 *)
  []; (* 353: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 354: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 355: adds x24, x3, x13 *)
  [`X7`; `X8`]; (* 356: adcs x25, x8, x7 *)
  []; (* 357: umulh x8, x14, x11 *)
  []; (* 358: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 359: adcs x26, x10, x12 *)
  []; (* 360: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 361: adc x27, x15, xzr *)
  [`Q20`]; (* 362: rev64 v24.4s, v20.4s *)
  []; (* 363: movi v2.2d, #0xffffffff *)
  []; (* 364: mul x10, x14, x11 *)
  [`Q24`]; (* 365: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 366: subs x13, x14, x5 *)
  [`Q28`]; (* 367: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 368: csetm x15, cc *)
  [`Q21`]; (* 369: usra v3.2d, v21.2d, #32 *)
  []; (* 370: mul x7, x5, x1 *)
  [`Q16`]; (* 371: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 372: cneg x13, x13, cc *)
  [`Q4`]; (* 373: uaddlp v5.2d, v4.4s *)
  []; (* 374: subs x11, x1, x11 *)
  [`Q2`]; (* 375: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 376: umulh x5, x5, x1 *)
  [`Q5`]; (* 377: shl v24.2d, v5.2d, #32 *)
  []; (* 378: cneg x11, x11, cc *)
  [`Q19`]; (* 379: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 380: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 381: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 382: adds x15, x10, x7 *)
  []; (* 383: mul x14, x13, x11 *)
  [`X6`]; (* 384: eor x1, x6, x2 *)
  []; (* 385: adcs x6, x8, x5 *)
  [`Q3`]; (* 386: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 387: adcs x9, x5, xzr *)
  [`X13`]; (* 388: umulh x11, x13, x11 *)
  [`X8`]; (* 389: adds x15, x8, x15 *)
  [`X6`]; (* 390: adcs x7, x7, x6 *)
  [`X14`]; (* 391: eor x8, x14, x12 *)
  [`Q16`]; (* 392: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 393: adcs x13, x9, xzr *)
  []; (* 394: cmn x12, #0x1 *)
  []; (* 395: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 396: adcs x14, x15, x8 *)
  [`X11`]; (* 397: eor x6, x11, x12 *)
  [`X7`]; (* 398: adcs x6, x7, x6 *)
  [`Q24`]; (* 399: mov x5, v24.d[0] *)
  []; (* 400: mov x11, v21.d[1] *)
  [`Q21`]; (* 401: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 402: adc x3, x13, x12 *)
  []; (* 403: adds x12, x5, x9 *)
  []; (* 404: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 405: adcs x11, x11, xzr *)
  [`X7`]; (* 406: adds x12, x7, x12 *)
  []; (* 407: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 408: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 409: adcs x11, x11, xzr *)
  []; (* 410: cmn x2, #0x1 *)
  [`X12`]; (* 411: adcs x16, x12, x16 *)
  [`X7`]; (* 412: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 413: adc x2, x11, x2 *)
  [`X24`; `X5`]; (* 414: adds x7, x5, x24 *)
  [`X16`; `X25`]; (* 415: adcs x15, x16, x25 *)
  [`X17`; `X4`]; (* 416: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 417: adcs x9, x1, x26 *)
  [`X10`]; (* 418: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 419: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 420: adc x2, xzr, xzr *)
  []; (* 421: cmn x5, #0x1 *)
  [`X14`]; (* 422: eor x13, x14, x5 *)
  [`X1`]; (* 423: adcs x14, x1, x7 *)
  [`X6`]; (* 424: eor x1, x6, x5 *)
  [`X13`]; (* 425: adcs x6, x13, x15 *)
  [`X1`]; (* 426: adcs x10, x1, x9 *)
  [`X3`]; (* 427: eor x4, x3, x5 *)
  []; (* 428: mov x1, #0xffffffff *)
  [`X4`]; (* 429: adcs x8, x4, x16 *)
  []; (* 430: lsr x13, x14, #32 *)
  []; (* 431: adcs x17, x2, x5 *)
  []; (* 432: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 433: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 434: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 435: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 436: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 437: adcs x9, x11, x16 *)
  []; (* 438: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 439: adc x10, x4, x2 *)
  []; (* 440: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 441: sbc x4, x14, x13 *)
  [`X6`]; (* 442: adds x11, x6, x11 *)
  [`X13`]; (* 443: adcs x12, x12, x13 *)
  []; (* 444: lsl x15, x11, #32 *)
  [`X7`]; (* 445: adcs x17, x7, x17 *)
  []; (* 446: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 447: adc x13, x4, xzr *)
  []; (* 448: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 449: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 450: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 451: adcs x15, x17, x7 *)
  [`X13`]; (* 452: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 453: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 454: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 455: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 456: adc x13, x10, xzr *)
  []; (* 457: add x12, x13, #0x1 *)
  []; (* 458: neg x11, x12 *)
  []; (* 459: lsl x4, x12, #32 *)
  []; (* 460: adds x17, x17, x4 *)
  []; (* 461: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 462: adc x13, x13, xzr *)
  [`X8`]; (* 463: subs x11, x8, x11 *)
  [`X15`]; (* 464: sbcs x4, x15, x4 *)
  []; (* 465: sbcs x7, x7, xzr *)
  []; (* 466: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 467: sbcs x13, x13, x12 *)
  []; (* 468: mov x12, #0xffffffff00000001 *)
  []; (* 469: adds x11, x11, x13 *)
  []; (* 470: and x1, x1, x13 *)
  [`X1`]; (* 471: adcs x4, x4, x1 *)
  [`X12`; `X13`]; (* 472: and x1, x12, x13 *)
  [`X11`; `X4`]; (* 473: stp x11, x4, [sp, #192] *)
  [`X7`]; (* 474: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 475: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 476: stp x4, x1, [sp, #208] *)
  []; (* 477: ldr q20, [x23, #32] *)
  []; (* 478: ldp x7, x17, [x22, #64] *)
  []; (* 479: ldr q0, [x22, #64] *)
  []; (* 480: ldp x6, x10, [x23, #32] *)
  []; (* 481: ldp x11, x15, [x22, #80] *)
  []; (* 482: rev64 v16.4s, v20.4s *)
  []; (* 483: subs x4, x7, x17 *)
  []; (* 484: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 485: cneg x13, x4, cc *)
  []; (* 486: mul v16.4s, v16.4s, v0.4s *)
  []; (* 487: umulh x12, x17, x10 *)
  [`Q20`]; (* 488: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 489: subs x14, x11, x7 *)
  []; (* 490: ldr q20, [x23, #48] *)
  [`X17`]; (* 491: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 492: ngc x17, xzr *)
  [`X11`; `X15`]; (* 493: subs x8, x11, x15 *)
  [`Q16`]; (* 494: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 495: umulh x4, x7, x6 *)
  [`Q0`]; (* 496: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 497: cneg x11, x8, cc *)
  [`Q27`]; (* 498: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 499: csetm x15, cc *)
  []; (* 500: subs x9, x10, x6 *)
  [`X14`]; (* 501: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 502: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 503: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 504: cinv x9, x3, cc *)
  []; (* 505: cmn x17, #0x1 *)
  []; (* 506: ldr q28, [x22, #80] *)
  [`X7`]; (* 507: adcs x14, x7, xzr *)
  []; (* 508: mul x7, x13, x8 *)
  [`X5`]; (* 509: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 510: adcs x5, x1, xzr *)
  []; (* 511: xtn v1.2s, v20.2d *)
  []; (* 512: mov x1, v17.d[0] *)
  [`Q17`]; (* 513: mov x3, v17.d[1] *)
  []; (* 514: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 515: umulh x16, x13, x8 *)
  [`X7`]; (* 516: eor x13, x7, x9 *)
  []; (* 517: adds x8, x1, x3 *)
  []; (* 518: adcs x7, x4, x12 *)
  []; (* 519: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 520: adcs x12, x12, xzr *)
  [`X4`]; (* 521: adds x8, x4, x8 *)
  [`X7`]; (* 522: adcs x3, x3, x7 *)
  []; (* 523: ldp x7, x2, [x23, #48] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 524: adcs x12, x12, xzr *)
  []; (* 525: cmn x9, #0x1 *)
  [`X13`]; (* 526: adcs x8, x8, x13 *)
  [`X16`]; (* 527: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 528: adcs x16, x3, x13 *)
  []; (* 529: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 530: adc x13, x12, x9 *)
  [`X6`]; (* 531: subs x12, x6, x7 *)
  [`X10`]; (* 532: sbcs x9, x10, x2 *)
  []; (* 533: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 534: ngc x4, xzr *)
  [`X2`; `X7`]; (* 535: subs x6, x2, x7 *)
  [`X15`]; (* 536: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 537: cneg x6, x6, cc *)
  []; (* 538: subs x7, x1, x3 *)
  []; (* 539: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 540: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 541: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 542: adcs x3, x16, x10 *)
  []; (* 543: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 544: adcs x8, x13, x7 *)
  [`X12`]; (* 545: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 546: adc x10, x1, xzr *)
  []; (* 547: cmn x4, #0x1 *)
  [`X11`]; (* 548: umulh x6, x11, x6 *)
  [`X13`]; (* 549: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 550: adcs x1, x9, xzr *)
  []; (* 551: lsl x13, x15, #32 *)
  []; (* 552: subs x12, x15, x13 *)
  []; (* 553: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 554: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 555: adds x24, x3, x13 *)
  [`X7`; `X8`]; (* 556: adcs x25, x8, x7 *)
  []; (* 557: umulh x8, x14, x11 *)
  []; (* 558: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 559: adcs x26, x10, x12 *)
  []; (* 560: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 561: adc x27, x15, xzr *)
  [`Q20`]; (* 562: rev64 v24.4s, v20.4s *)
  []; (* 563: movi v2.2d, #0xffffffff *)
  []; (* 564: mul x10, x14, x11 *)
  [`Q24`]; (* 565: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 566: subs x13, x14, x5 *)
  [`Q28`]; (* 567: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 568: csetm x15, cc *)
  [`Q21`]; (* 569: usra v3.2d, v21.2d, #32 *)
  []; (* 570: mul x7, x5, x1 *)
  [`Q16`]; (* 571: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 572: cneg x13, x13, cc *)
  [`Q4`]; (* 573: uaddlp v5.2d, v4.4s *)
  []; (* 574: subs x11, x1, x11 *)
  [`Q2`]; (* 575: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 576: umulh x5, x5, x1 *)
  [`Q5`]; (* 577: shl v24.2d, v5.2d, #32 *)
  []; (* 578: cneg x11, x11, cc *)
  [`Q19`]; (* 579: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 580: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 581: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 582: adds x15, x10, x7 *)
  []; (* 583: mul x14, x13, x11 *)
  [`X6`]; (* 584: eor x1, x6, x2 *)
  []; (* 585: adcs x6, x8, x5 *)
  [`Q3`]; (* 586: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 587: adcs x9, x5, xzr *)
  [`X13`]; (* 588: umulh x11, x13, x11 *)
  [`X8`]; (* 589: adds x15, x8, x15 *)
  [`X6`]; (* 590: adcs x7, x7, x6 *)
  [`X14`]; (* 591: eor x8, x14, x12 *)
  [`Q16`]; (* 592: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 593: adcs x13, x9, xzr *)
  []; (* 594: cmn x12, #0x1 *)
  []; (* 595: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 596: adcs x14, x15, x8 *)
  [`X11`]; (* 597: eor x6, x11, x12 *)
  [`X7`]; (* 598: adcs x6, x7, x6 *)
  [`Q24`]; (* 599: mov x5, v24.d[0] *)
  []; (* 600: mov x11, v21.d[1] *)
  [`Q21`]; (* 601: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 602: adc x3, x13, x12 *)
  []; (* 603: adds x12, x5, x9 *)
  []; (* 604: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 605: adcs x11, x11, xzr *)
  [`X7`]; (* 606: adds x12, x7, x12 *)
  []; (* 607: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 608: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 609: adcs x11, x11, xzr *)
  []; (* 610: cmn x2, #0x1 *)
  [`X12`]; (* 611: adcs x16, x12, x16 *)
  [`X7`]; (* 612: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 613: adc x2, x11, x2 *)
  [`X24`; `X5`]; (* 614: adds x7, x5, x24 *)
  [`X16`; `X25`]; (* 615: adcs x15, x16, x25 *)
  [`X17`; `X4`]; (* 616: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 617: adcs x9, x1, x26 *)
  [`X10`]; (* 618: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 619: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 620: adc x2, xzr, xzr *)
  []; (* 621: cmn x5, #0x1 *)
  [`X14`]; (* 622: eor x13, x14, x5 *)
  [`X1`]; (* 623: adcs x14, x1, x7 *)
  [`X6`]; (* 624: eor x1, x6, x5 *)
  [`X13`]; (* 625: adcs x6, x13, x15 *)
  [`X1`]; (* 626: adcs x10, x1, x9 *)
  [`X3`]; (* 627: eor x4, x3, x5 *)
  []; (* 628: mov x1, #0xffffffff *)
  [`X4`]; (* 629: adcs x8, x4, x16 *)
  []; (* 630: lsr x13, x14, #32 *)
  []; (* 631: adcs x17, x2, x5 *)
  []; (* 632: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 633: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 634: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 635: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 636: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 637: adcs x9, x11, x16 *)
  []; (* 638: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 639: adc x10, x4, x2 *)
  []; (* 640: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 641: sbc x4, x14, x13 *)
  [`X6`]; (* 642: adds x11, x6, x11 *)
  [`X13`]; (* 643: adcs x12, x12, x13 *)
  []; (* 644: lsl x15, x11, #32 *)
  [`X7`]; (* 645: adcs x17, x7, x17 *)
  []; (* 646: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 647: adc x13, x4, xzr *)
  []; (* 648: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 649: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 650: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 651: adcs x15, x17, x7 *)
  [`X13`]; (* 652: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 653: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 654: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 655: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 656: adc x13, x10, xzr *)
  []; (* 657: add x12, x13, #0x1 *)
  []; (* 658: neg x11, x12 *)
  []; (* 659: lsl x4, x12, #32 *)
  []; (* 660: adds x17, x17, x4 *)
  []; (* 661: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 662: adc x13, x13, xzr *)
  [`X8`]; (* 663: subs x11, x8, x11 *)
  [`X15`]; (* 664: sbcs x4, x15, x4 *)
  []; (* 665: sbcs x7, x7, xzr *)
  []; (* 666: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 667: sbcs x13, x13, x12 *)
  []; (* 668: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 669: adds x24, x11, x13 *)
  []; (* 670: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 671: adcs x25, x4, x1 *)
  [`X12`; `X13`]; (* 672: and x1, x12, x13 *)
  []; (* 673: stp x24, x25, [sp, #32] *)
  [`X7`]; (* 674: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 675: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 676: stp x4, x1, [sp, #48] *)
  []; (* 677: mov x1, sp *)
  []; (* 678: ldr q20, [x23, #0] *)
  []; (* 679: ldr q0, [x1] *)
  []; (* 680: ldp x6, x10, [x23, #0] *)
  []; (* 681: ldp x11, x15, [x1, #16] *)
  []; (* 682: rev64 v16.4s, v20.4s *)
  []; (* 683: subs x4, x19, x20 *)
  []; (* 684: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 685: cneg x13, x4, cc *)
  []; (* 686: mul v16.4s, v16.4s, v0.4s *)
  []; (* 687: umulh x12, x20, x10 *)
  [`Q20`]; (* 688: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 689: subs x14, x11, x19 *)
  []; (* 690: ldr q20, [x23, #16] *)
  [`X20`]; (* 691: sbcs x5, x15, x20 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 692: ngc x17, xzr *)
  [`X11`; `X15`]; (* 693: subs x8, x11, x15 *)
  [`Q16`]; (* 694: uaddlp v27.2d, v16.4s *)
  [`X19`]; (* 695: umulh x4, x19, x6 *)
  [`Q0`]; (* 696: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 697: cneg x11, x8, cc *)
  [`Q27`]; (* 698: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 699: csetm x15, cc *)
  []; (* 700: subs x9, x10, x6 *)
  [`X14`]; (* 701: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 702: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 703: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 704: cinv x9, x3, cc *)
  []; (* 705: cmn x17, #0x1 *)
  [`X1`]; (* 706: ldr q28, [x1, #16] *)
  [`X7`]; (* 707: adcs x14, x7, xzr *)
  []; (* 708: mul x7, x13, x8 *)
  [`X5`]; (* 709: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 710: adcs x5, x1, xzr *)
  []; (* 711: xtn v1.2s, v20.2d *)
  []; (* 712: mov x1, v17.d[0] *)
  [`Q17`]; (* 713: mov x3, v17.d[1] *)
  []; (* 714: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 715: umulh x16, x13, x8 *)
  [`X7`]; (* 716: eor x13, x7, x9 *)
  []; (* 717: adds x8, x1, x3 *)
  []; (* 718: adcs x7, x4, x12 *)
  []; (* 719: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 720: adcs x12, x12, xzr *)
  [`X4`]; (* 721: adds x8, x4, x8 *)
  [`X7`]; (* 722: adcs x3, x3, x7 *)
  []; (* 723: ldp x7, x2, [x23, #16] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 724: adcs x12, x12, xzr *)
  []; (* 725: cmn x9, #0x1 *)
  [`X13`]; (* 726: adcs x8, x8, x13 *)
  [`X16`]; (* 727: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 728: adcs x16, x3, x13 *)
  []; (* 729: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 730: adc x13, x12, x9 *)
  [`X6`]; (* 731: subs x12, x6, x7 *)
  [`X10`]; (* 732: sbcs x9, x10, x2 *)
  []; (* 733: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 734: ngc x4, xzr *)
  [`X2`; `X7`]; (* 735: subs x6, x2, x7 *)
  [`X15`]; (* 736: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 737: cneg x6, x6, cc *)
  []; (* 738: subs x7, x1, x3 *)
  []; (* 739: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 740: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 741: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 742: adcs x3, x16, x10 *)
  []; (* 743: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 744: adcs x8, x13, x7 *)
  [`X12`]; (* 745: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 746: adc x10, x1, xzr *)
  []; (* 747: cmn x4, #0x1 *)
  [`X11`]; (* 748: umulh x6, x11, x6 *)
  [`X13`]; (* 749: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 750: adcs x1, x9, xzr *)
  []; (* 751: lsl x13, x15, #32 *)
  []; (* 752: subs x12, x15, x13 *)
  []; (* 753: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 754: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 755: adds x19, x3, x13 *)
  [`X7`; `X8`]; (* 756: adcs x20, x8, x7 *)
  []; (* 757: umulh x8, x14, x11 *)
  []; (* 758: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 759: adcs x26, x10, x12 *)
  []; (* 760: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 761: adc x27, x15, xzr *)
  [`Q20`]; (* 762: rev64 v24.4s, v20.4s *)
  []; (* 763: movi v2.2d, #0xffffffff *)
  []; (* 764: mul x10, x14, x11 *)
  [`Q24`]; (* 765: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 766: subs x13, x14, x5 *)
  [`Q28`]; (* 767: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 768: csetm x15, cc *)
  [`Q21`]; (* 769: usra v3.2d, v21.2d, #32 *)
  []; (* 770: mul x7, x5, x1 *)
  [`Q16`]; (* 771: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 772: cneg x13, x13, cc *)
  [`Q4`]; (* 773: uaddlp v5.2d, v4.4s *)
  []; (* 774: subs x11, x1, x11 *)
  [`Q2`]; (* 775: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 776: umulh x5, x5, x1 *)
  [`Q5`]; (* 777: shl v24.2d, v5.2d, #32 *)
  []; (* 778: cneg x11, x11, cc *)
  [`Q19`]; (* 779: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 780: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 781: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 782: adds x15, x10, x7 *)
  []; (* 783: mul x14, x13, x11 *)
  [`X6`]; (* 784: eor x1, x6, x2 *)
  []; (* 785: adcs x6, x8, x5 *)
  [`Q3`]; (* 786: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 787: adcs x9, x5, xzr *)
  [`X13`]; (* 788: umulh x11, x13, x11 *)
  [`X8`]; (* 789: adds x15, x8, x15 *)
  [`X6`]; (* 790: adcs x7, x7, x6 *)
  [`X14`]; (* 791: eor x8, x14, x12 *)
  [`Q16`]; (* 792: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 793: adcs x13, x9, xzr *)
  []; (* 794: cmn x12, #0x1 *)
  []; (* 795: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 796: adcs x14, x15, x8 *)
  [`X11`]; (* 797: eor x6, x11, x12 *)
  [`X7`]; (* 798: adcs x6, x7, x6 *)
  [`Q24`]; (* 799: mov x5, v24.d[0] *)
  []; (* 800: mov x11, v21.d[1] *)
  [`Q21`]; (* 801: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 802: adc x3, x13, x12 *)
  []; (* 803: adds x12, x5, x9 *)
  []; (* 804: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 805: adcs x11, x11, xzr *)
  [`X7`]; (* 806: adds x12, x7, x12 *)
  []; (* 807: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 808: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 809: adcs x11, x11, xzr *)
  []; (* 810: cmn x2, #0x1 *)
  [`X12`]; (* 811: adcs x16, x12, x16 *)
  [`X7`]; (* 812: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 813: adc x2, x11, x2 *)
  [`X19`; `X5`]; (* 814: adds x7, x5, x19 *)
  [`X16`; `X20`]; (* 815: adcs x15, x16, x20 *)
  [`X17`; `X4`]; (* 816: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 817: adcs x9, x1, x26 *)
  [`X10`]; (* 818: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 819: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 820: adc x2, xzr, xzr *)
  []; (* 821: cmn x5, #0x1 *)
  [`X14`]; (* 822: eor x13, x14, x5 *)
  [`X1`]; (* 823: adcs x14, x1, x7 *)
  [`X6`]; (* 824: eor x1, x6, x5 *)
  [`X13`]; (* 825: adcs x6, x13, x15 *)
  [`X1`]; (* 826: adcs x10, x1, x9 *)
  [`X3`]; (* 827: eor x4, x3, x5 *)
  []; (* 828: mov x1, #0xffffffff *)
  [`X4`]; (* 829: adcs x8, x4, x16 *)
  []; (* 830: lsr x13, x14, #32 *)
  []; (* 831: adcs x17, x2, x5 *)
  []; (* 832: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 833: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 834: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 835: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 836: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 837: adcs x9, x11, x16 *)
  []; (* 838: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 839: adc x10, x4, x2 *)
  []; (* 840: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 841: sbc x4, x14, x13 *)
  [`X6`]; (* 842: adds x11, x6, x11 *)
  [`X13`]; (* 843: adcs x12, x12, x13 *)
  []; (* 844: lsl x15, x11, #32 *)
  [`X7`]; (* 845: adcs x17, x7, x17 *)
  []; (* 846: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 847: adc x13, x4, xzr *)
  []; (* 848: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 849: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 850: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 851: adcs x15, x17, x7 *)
  [`X13`]; (* 852: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 853: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 854: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 855: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 856: adc x13, x10, xzr *)
  []; (* 857: add x12, x13, #0x1 *)
  []; (* 858: neg x11, x12 *)
  []; (* 859: lsl x4, x12, #32 *)
  []; (* 860: adds x17, x17, x4 *)
  []; (* 861: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 862: adc x13, x13, xzr *)
  [`X8`]; (* 863: subs x11, x8, x11 *)
  [`X15`]; (* 864: sbcs x4, x15, x4 *)
  []; (* 865: sbcs x7, x7, xzr *)
  []; (* 866: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 867: sbcs x13, x13, x12 *)
  []; (* 868: mov x12, #0xffffffff00000001 *)
  []; (* 869: adds x11, x11, x13 *)
  []; (* 870: and x1, x1, x13 *)
  [`X1`]; (* 871: adcs x4, x4, x1 *)
  [`X12`; `X13`]; (* 872: and x1, x12, x13 *)
  [`X11`; `X4`]; (* 873: stp x11, x4, [sp, #64] *)
  [`X7`]; (* 874: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 875: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 876: stp x4, x1, [sp, #80] *)
  []; (* 877: ldr q20, [x22, #0] *)
  []; (* 878: ldp x7, x17, [sp, #160] *)
  []; (* 879: ldr q0, [sp, #160] *)
  []; (* 880: ldp x6, x10, [x22, #0] *)
  []; (* 881: ldp x11, x15, [sp, #176] *)
  []; (* 882: rev64 v16.4s, v20.4s *)
  []; (* 883: subs x4, x7, x17 *)
  []; (* 884: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 885: cneg x13, x4, cc *)
  []; (* 886: mul v16.4s, v16.4s, v0.4s *)
  []; (* 887: umulh x12, x17, x10 *)
  [`Q20`]; (* 888: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 889: subs x14, x11, x7 *)
  []; (* 890: ldr q20, [x22, #16] *)
  [`X17`]; (* 891: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 892: ngc x17, xzr *)
  [`X11`; `X15`]; (* 893: subs x8, x11, x15 *)
  [`Q16`]; (* 894: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 895: umulh x4, x7, x6 *)
  [`Q0`]; (* 896: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 897: cneg x11, x8, cc *)
  [`Q27`]; (* 898: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 899: csetm x15, cc *)
  []; (* 900: subs x9, x10, x6 *)
  [`X14`]; (* 901: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 902: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 903: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 904: cinv x9, x3, cc *)
  []; (* 905: cmn x17, #0x1 *)
  []; (* 906: ldr q28, [sp, #176] *)
  [`X7`]; (* 907: adcs x14, x7, xzr *)
  []; (* 908: mul x7, x13, x8 *)
  [`X5`]; (* 909: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 910: adcs x5, x1, xzr *)
  []; (* 911: xtn v1.2s, v20.2d *)
  []; (* 912: mov x1, v17.d[0] *)
  [`Q17`]; (* 913: mov x3, v17.d[1] *)
  []; (* 914: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 915: umulh x16, x13, x8 *)
  [`X7`]; (* 916: eor x13, x7, x9 *)
  []; (* 917: adds x8, x1, x3 *)
  []; (* 918: adcs x7, x4, x12 *)
  []; (* 919: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 920: adcs x12, x12, xzr *)
  [`X4`]; (* 921: adds x8, x4, x8 *)
  [`X7`]; (* 922: adcs x3, x3, x7 *)
  []; (* 923: ldp x7, x2, [x22, #16] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 924: adcs x12, x12, xzr *)
  []; (* 925: cmn x9, #0x1 *)
  [`X13`]; (* 926: adcs x8, x8, x13 *)
  [`X16`]; (* 927: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 928: adcs x16, x3, x13 *)
  []; (* 929: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 930: adc x13, x12, x9 *)
  [`X6`]; (* 931: subs x12, x6, x7 *)
  [`X10`]; (* 932: sbcs x9, x10, x2 *)
  []; (* 933: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 934: ngc x4, xzr *)
  [`X2`; `X7`]; (* 935: subs x6, x2, x7 *)
  [`X15`]; (* 936: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 937: cneg x6, x6, cc *)
  []; (* 938: subs x7, x1, x3 *)
  []; (* 939: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 940: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 941: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 942: adcs x3, x16, x10 *)
  []; (* 943: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 944: adcs x8, x13, x7 *)
  [`X12`]; (* 945: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 946: adc x10, x1, xzr *)
  []; (* 947: cmn x4, #0x1 *)
  [`X11`]; (* 948: umulh x6, x11, x6 *)
  [`X13`]; (* 949: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 950: adcs x1, x9, xzr *)
  []; (* 951: lsl x13, x15, #32 *)
  []; (* 952: subs x12, x15, x13 *)
  []; (* 953: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 954: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 955: adds x19, x3, x13 *)
  [`X7`; `X8`]; (* 956: adcs x20, x8, x7 *)
  []; (* 957: umulh x8, x14, x11 *)
  []; (* 958: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 959: adcs x26, x10, x12 *)
  []; (* 960: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 961: adc x27, x15, xzr *)
  [`Q20`]; (* 962: rev64 v24.4s, v20.4s *)
  []; (* 963: movi v2.2d, #0xffffffff *)
  []; (* 964: mul x10, x14, x11 *)
  [`Q24`]; (* 965: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 966: subs x13, x14, x5 *)
  [`Q28`]; (* 967: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 968: csetm x15, cc *)
  [`Q21`]; (* 969: usra v3.2d, v21.2d, #32 *)
  []; (* 970: mul x7, x5, x1 *)
  [`Q16`]; (* 971: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 972: cneg x13, x13, cc *)
  [`Q4`]; (* 973: uaddlp v5.2d, v4.4s *)
  []; (* 974: subs x11, x1, x11 *)
  [`Q2`]; (* 975: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 976: umulh x5, x5, x1 *)
  [`Q5`]; (* 977: shl v24.2d, v5.2d, #32 *)
  []; (* 978: cneg x11, x11, cc *)
  [`Q19`]; (* 979: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 980: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 981: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 982: adds x15, x10, x7 *)
  []; (* 983: mul x14, x13, x11 *)
  [`X6`]; (* 984: eor x1, x6, x2 *)
  []; (* 985: adcs x6, x8, x5 *)
  [`Q3`]; (* 986: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 987: adcs x9, x5, xzr *)
  [`X13`]; (* 988: umulh x11, x13, x11 *)
  [`X8`]; (* 989: adds x15, x8, x15 *)
  [`X6`]; (* 990: adcs x7, x7, x6 *)
  [`X14`]; (* 991: eor x8, x14, x12 *)
  [`Q16`]; (* 992: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 993: adcs x13, x9, xzr *)
  []; (* 994: cmn x12, #0x1 *)
  []; (* 995: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 996: adcs x14, x15, x8 *)
  [`X11`]; (* 997: eor x6, x11, x12 *)
  [`X7`]; (* 998: adcs x6, x7, x6 *)
  [`Q24`]; (* 999: mov x5, v24.d[0] *)
  []; (* 1000: mov x11, v21.d[1] *)
  [`Q21`]; (* 1001: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 1002: adc x3, x13, x12 *)
  []; (* 1003: adds x12, x5, x9 *)
  []; (* 1004: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1005: adcs x11, x11, xzr *)
  [`X7`]; (* 1006: adds x12, x7, x12 *)
  []; (* 1007: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 1008: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1009: adcs x11, x11, xzr *)
  []; (* 1010: cmn x2, #0x1 *)
  [`X12`]; (* 1011: adcs x16, x12, x16 *)
  [`X7`]; (* 1012: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1013: adc x2, x11, x2 *)
  [`X19`; `X5`]; (* 1014: adds x7, x5, x19 *)
  [`X16`; `X20`]; (* 1015: adcs x15, x16, x20 *)
  [`X17`; `X4`]; (* 1016: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 1017: adcs x9, x1, x26 *)
  [`X10`]; (* 1018: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 1019: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1020: adc x2, xzr, xzr *)
  []; (* 1021: cmn x5, #0x1 *)
  [`X14`]; (* 1022: eor x13, x14, x5 *)
  [`X1`]; (* 1023: adcs x14, x1, x7 *)
  [`X6`]; (* 1024: eor x1, x6, x5 *)
  [`X13`]; (* 1025: adcs x6, x13, x15 *)
  [`X1`]; (* 1026: adcs x10, x1, x9 *)
  [`X3`]; (* 1027: eor x4, x3, x5 *)
  []; (* 1028: mov x1, #0xffffffff *)
  [`X4`]; (* 1029: adcs x8, x4, x16 *)
  []; (* 1030: lsr x13, x14, #32 *)
  []; (* 1031: adcs x17, x2, x5 *)
  []; (* 1032: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1033: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 1034: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 1035: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 1036: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 1037: adcs x9, x11, x16 *)
  []; (* 1038: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 1039: adc x10, x4, x2 *)
  []; (* 1040: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1041: sbc x4, x14, x13 *)
  [`X6`]; (* 1042: adds x11, x6, x11 *)
  [`X13`]; (* 1043: adcs x12, x12, x13 *)
  []; (* 1044: lsl x15, x11, #32 *)
  [`X7`]; (* 1045: adcs x17, x7, x17 *)
  []; (* 1046: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1047: adc x13, x4, xzr *)
  []; (* 1048: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1049: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 1050: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 1051: adcs x15, x17, x7 *)
  [`X13`]; (* 1052: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1053: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 1054: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 1055: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 1056: adc x13, x10, xzr *)
  []; (* 1057: add x12, x13, #0x1 *)
  []; (* 1058: neg x11, x12 *)
  []; (* 1059: lsl x4, x12, #32 *)
  []; (* 1060: adds x17, x17, x4 *)
  []; (* 1061: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1062: adc x13, x13, xzr *)
  [`X8`]; (* 1063: subs x11, x8, x11 *)
  [`X15`]; (* 1064: sbcs x4, x15, x4 *)
  []; (* 1065: sbcs x7, x7, xzr *)
  []; (* 1066: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1067: sbcs x13, x13, x12 *)
  []; (* 1068: mov x12, #0xffffffff00000001 *)
  []; (* 1069: adds x11, x11, x13 *)
  []; (* 1070: and x1, x1, x13 *)
  [`X1`]; (* 1071: adcs x4, x4, x1 *)
  [`X12`; `X13`]; (* 1072: and x1, x12, x13 *)
  [`X11`; `X4`]; (* 1073: stp x11, x4, [sp, #128] *)
  [`X7`]; (* 1074: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1075: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 1076: stp x4, x1, [sp, #144] *)
  []; (* 1077: mov x1, sp *)
  []; (* 1078: ldr q20, [sp, #32] *)
  []; (* 1079: ldp x7, x17, [x1] *)
  []; (* 1080: ldr q0, [x1] *)
  []; (* 1081: ldp x11, x15, [x1, #16] *)
  []; (* 1082: rev64 v16.4s, v20.4s *)
  []; (* 1083: subs x4, x7, x17 *)
  []; (* 1084: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1085: cneg x13, x4, cc *)
  []; (* 1086: mul v16.4s, v16.4s, v0.4s *)
  []; (* 1087: umulh x12, x17, x25 *)
  [`Q20`]; (* 1088: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 1089: subs x14, x11, x7 *)
  []; (* 1090: ldr q20, [sp, #48] *)
  [`X17`]; (* 1091: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1092: ngc x17, xzr *)
  [`X11`; `X15`]; (* 1093: subs x8, x11, x15 *)
  [`Q16`]; (* 1094: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 1095: umulh x4, x7, x24 *)
  [`Q0`]; (* 1096: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 1097: cneg x11, x8, cc *)
  [`Q27`]; (* 1098: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1099: csetm x15, cc *)
  []; (* 1100: subs x9, x25, x24 *)
  [`X14`]; (* 1101: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 1102: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 1103: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1104: cinv x9, x3, cc *)
  []; (* 1105: cmn x17, #0x1 *)
  [`X1`]; (* 1106: ldr q28, [x1, #16] *)
  [`X7`]; (* 1107: adcs x14, x7, xzr *)
  []; (* 1108: mul x7, x13, x8 *)
  [`X5`]; (* 1109: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1110: adcs x5, x1, xzr *)
  []; (* 1111: xtn v1.2s, v20.2d *)
  []; (* 1112: mov x1, v17.d[0] *)
  [`Q17`]; (* 1113: mov x3, v17.d[1] *)
  []; (* 1114: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 1115: umulh x16, x13, x8 *)
  [`X7`]; (* 1116: eor x13, x7, x9 *)
  []; (* 1117: adds x8, x1, x3 *)
  []; (* 1118: adcs x7, x4, x12 *)
  []; (* 1119: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1120: adcs x12, x12, xzr *)
  [`X4`]; (* 1121: adds x8, x4, x8 *)
  [`X7`]; (* 1122: adcs x3, x3, x7 *)
  []; (* 1123: ldp x7, x2, [sp, #48] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1124: adcs x12, x12, xzr *)
  []; (* 1125: cmn x9, #0x1 *)
  [`X13`]; (* 1126: adcs x8, x8, x13 *)
  [`X16`]; (* 1127: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 1128: adcs x16, x3, x13 *)
  []; (* 1129: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 1130: adc x13, x12, x9 *)
  [`X24`]; (* 1131: subs x12, x24, x7 *)
  [`X25`]; (* 1132: sbcs x9, x25, x2 *)
  []; (* 1133: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1134: ngc x4, xzr *)
  [`X2`; `X7`]; (* 1135: subs x6, x2, x7 *)
  [`X15`]; (* 1136: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1137: cneg x6, x6, cc *)
  []; (* 1138: subs x7, x1, x3 *)
  []; (* 1139: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1140: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 1141: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 1142: adcs x3, x16, x10 *)
  []; (* 1143: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 1144: adcs x8, x13, x7 *)
  [`X12`]; (* 1145: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1146: adc x10, x1, xzr *)
  []; (* 1147: cmn x4, #0x1 *)
  [`X11`]; (* 1148: umulh x6, x11, x6 *)
  [`X13`]; (* 1149: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1150: adcs x1, x9, xzr *)
  []; (* 1151: lsl x13, x15, #32 *)
  []; (* 1152: subs x12, x15, x13 *)
  []; (* 1153: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1154: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 1155: adds x19, x3, x13 *)
  [`X7`; `X8`]; (* 1156: adcs x20, x8, x7 *)
  []; (* 1157: umulh x8, x14, x11 *)
  []; (* 1158: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 1159: adcs x24, x10, x12 *)
  []; (* 1160: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1161: adc x25, x15, xzr *)
  [`Q20`]; (* 1162: rev64 v24.4s, v20.4s *)
  []; (* 1163: movi v2.2d, #0xffffffff *)
  []; (* 1164: mul x10, x14, x11 *)
  [`Q24`]; (* 1165: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 1166: subs x13, x14, x5 *)
  [`Q28`]; (* 1167: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 1168: csetm x15, cc *)
  [`Q21`]; (* 1169: usra v3.2d, v21.2d, #32 *)
  []; (* 1170: mul x7, x5, x1 *)
  [`Q16`]; (* 1171: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1172: cneg x13, x13, cc *)
  [`Q4`]; (* 1173: uaddlp v5.2d, v4.4s *)
  []; (* 1174: subs x11, x1, x11 *)
  [`Q2`]; (* 1175: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 1176: umulh x5, x5, x1 *)
  [`Q5`]; (* 1177: shl v24.2d, v5.2d, #32 *)
  []; (* 1178: cneg x11, x11, cc *)
  [`Q19`]; (* 1179: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1180: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 1181: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 1182: adds x15, x10, x7 *)
  []; (* 1183: mul x14, x13, x11 *)
  [`X6`]; (* 1184: eor x1, x6, x2 *)
  []; (* 1185: adcs x6, x8, x5 *)
  [`Q3`]; (* 1186: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1187: adcs x9, x5, xzr *)
  [`X13`]; (* 1188: umulh x11, x13, x11 *)
  [`X8`]; (* 1189: adds x15, x8, x15 *)
  [`X6`]; (* 1190: adcs x7, x7, x6 *)
  [`X14`]; (* 1191: eor x8, x14, x12 *)
  [`Q16`]; (* 1192: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1193: adcs x13, x9, xzr *)
  []; (* 1194: cmn x12, #0x1 *)
  []; (* 1195: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 1196: adcs x14, x15, x8 *)
  [`X11`]; (* 1197: eor x6, x11, x12 *)
  [`X7`]; (* 1198: adcs x6, x7, x6 *)
  [`Q24`]; (* 1199: mov x5, v24.d[0] *)
  []; (* 1200: mov x11, v21.d[1] *)
  [`Q21`]; (* 1201: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 1202: adc x3, x13, x12 *)
  []; (* 1203: adds x12, x5, x9 *)
  []; (* 1204: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1205: adcs x11, x11, xzr *)
  [`X7`]; (* 1206: adds x12, x7, x12 *)
  []; (* 1207: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 1208: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1209: adcs x11, x11, xzr *)
  []; (* 1210: cmn x2, #0x1 *)
  [`X12`]; (* 1211: adcs x16, x12, x16 *)
  [`X7`]; (* 1212: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1213: adc x2, x11, x2 *)
  [`X19`; `X5`]; (* 1214: adds x7, x5, x19 *)
  [`X16`; `X20`]; (* 1215: adcs x15, x16, x20 *)
  [`X17`; `X4`]; (* 1216: eor x5, x17, x4 *)
  [`X1`; `X24`]; (* 1217: adcs x9, x1, x24 *)
  [`X10`]; (* 1218: eor x1, x10, x5 *)
  [`X2`; `X25`]; (* 1219: adcs x16, x2, x25 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1220: adc x2, xzr, xzr *)
  []; (* 1221: cmn x5, #0x1 *)
  [`X14`]; (* 1222: eor x13, x14, x5 *)
  [`X1`]; (* 1223: adcs x14, x1, x7 *)
  [`X6`]; (* 1224: eor x1, x6, x5 *)
  [`X13`]; (* 1225: adcs x6, x13, x15 *)
  [`X1`]; (* 1226: adcs x10, x1, x9 *)
  [`X3`]; (* 1227: eor x4, x3, x5 *)
  []; (* 1228: mov x1, #0xffffffff *)
  [`X4`]; (* 1229: adcs x8, x4, x16 *)
  []; (* 1230: lsr x13, x14, #32 *)
  []; (* 1231: adcs x17, x2, x5 *)
  []; (* 1232: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1233: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 1234: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 1235: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 1236: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 1237: adcs x9, x11, x16 *)
  []; (* 1238: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 1239: adc x10, x4, x2 *)
  []; (* 1240: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1241: sbc x4, x14, x13 *)
  [`X6`]; (* 1242: adds x11, x6, x11 *)
  [`X13`]; (* 1243: adcs x12, x12, x13 *)
  []; (* 1244: lsl x15, x11, #32 *)
  [`X7`]; (* 1245: adcs x17, x7, x17 *)
  []; (* 1246: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1247: adc x13, x4, xzr *)
  []; (* 1248: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1249: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 1250: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 1251: adcs x15, x17, x7 *)
  [`X13`]; (* 1252: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1253: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 1254: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 1255: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 1256: adc x13, x10, xzr *)
  []; (* 1257: add x12, x13, #0x1 *)
  []; (* 1258: neg x11, x12 *)
  []; (* 1259: lsl x4, x12, #32 *)
  []; (* 1260: adds x17, x17, x4 *)
  []; (* 1261: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1262: adc x13, x13, xzr *)
  [`X8`]; (* 1263: subs x11, x8, x11 *)
  [`X15`]; (* 1264: sbcs x4, x15, x4 *)
  []; (* 1265: sbcs x7, x7, xzr *)
  []; (* 1266: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1267: sbcs x13, x13, x12 *)
  []; (* 1268: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 1269: adds x19, x11, x13 *)
  []; (* 1270: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 1271: adcs x20, x4, x1 *)
  [`X12`; `X13`]; (* 1272: and x1, x12, x13 *)
  [`X7`]; (* 1273: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1274: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 1275: stp x4, x1, [sp, #48] *)
  []; (* 1276: ldr q20, [sp, #192] *)
  []; (* 1277: ldp x7, x17, [sp, #160] *)
  []; (* 1278: ldr q0, [sp, #160] *)
  []; (* 1279: ldp x6, x10, [sp, #192] *)
  []; (* 1280: ldp x11, x15, [sp, #176] *)
  []; (* 1281: rev64 v16.4s, v20.4s *)
  []; (* 1282: subs x4, x7, x17 *)
  []; (* 1283: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1284: cneg x13, x4, cc *)
  []; (* 1285: mul v16.4s, v16.4s, v0.4s *)
  []; (* 1286: umulh x12, x17, x10 *)
  [`Q20`]; (* 1287: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 1288: subs x14, x11, x7 *)
  []; (* 1289: ldr q20, [sp, #208] *)
  [`X17`]; (* 1290: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1291: ngc x17, xzr *)
  [`X11`; `X15`]; (* 1292: subs x8, x11, x15 *)
  [`Q16`]; (* 1293: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 1294: umulh x4, x7, x6 *)
  [`Q0`]; (* 1295: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 1296: cneg x11, x8, cc *)
  [`Q27`]; (* 1297: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1298: csetm x15, cc *)
  []; (* 1299: subs x9, x10, x6 *)
  [`X14`]; (* 1300: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 1301: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 1302: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1303: cinv x9, x3, cc *)
  []; (* 1304: cmn x17, #0x1 *)
  []; (* 1305: ldr q28, [sp, #176] *)
  [`X7`]; (* 1306: adcs x14, x7, xzr *)
  []; (* 1307: mul x7, x13, x8 *)
  [`X5`]; (* 1308: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1309: adcs x5, x1, xzr *)
  []; (* 1310: xtn v1.2s, v20.2d *)
  []; (* 1311: mov x1, v17.d[0] *)
  [`Q17`]; (* 1312: mov x3, v17.d[1] *)
  []; (* 1313: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 1314: umulh x16, x13, x8 *)
  [`X7`]; (* 1315: eor x13, x7, x9 *)
  []; (* 1316: adds x8, x1, x3 *)
  []; (* 1317: adcs x7, x4, x12 *)
  []; (* 1318: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1319: adcs x12, x12, xzr *)
  [`X4`]; (* 1320: adds x8, x4, x8 *)
  [`X7`]; (* 1321: adcs x3, x3, x7 *)
  []; (* 1322: ldp x7, x2, [sp, #208] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1323: adcs x12, x12, xzr *)
  []; (* 1324: cmn x9, #0x1 *)
  [`X13`]; (* 1325: adcs x8, x8, x13 *)
  [`X16`]; (* 1326: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 1327: adcs x16, x3, x13 *)
  []; (* 1328: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 1329: adc x13, x12, x9 *)
  [`X6`]; (* 1330: subs x12, x6, x7 *)
  [`X10`]; (* 1331: sbcs x9, x10, x2 *)
  []; (* 1332: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1333: ngc x4, xzr *)
  [`X2`; `X7`]; (* 1334: subs x6, x2, x7 *)
  [`X15`]; (* 1335: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1336: cneg x6, x6, cc *)
  []; (* 1337: subs x7, x1, x3 *)
  []; (* 1338: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1339: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 1340: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 1341: adcs x3, x16, x10 *)
  []; (* 1342: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 1343: adcs x8, x13, x7 *)
  [`X12`]; (* 1344: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1345: adc x10, x1, xzr *)
  []; (* 1346: cmn x4, #0x1 *)
  [`X11`]; (* 1347: umulh x6, x11, x6 *)
  [`X13`]; (* 1348: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1349: adcs x1, x9, xzr *)
  []; (* 1350: lsl x13, x15, #32 *)
  []; (* 1351: subs x12, x15, x13 *)
  []; (* 1352: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1353: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 1354: adds x24, x3, x13 *)
  [`X7`; `X8`]; (* 1355: adcs x25, x8, x7 *)
  []; (* 1356: umulh x8, x14, x11 *)
  []; (* 1357: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 1358: adcs x26, x10, x12 *)
  []; (* 1359: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1360: adc x27, x15, xzr *)
  [`Q20`]; (* 1361: rev64 v24.4s, v20.4s *)
  []; (* 1362: movi v2.2d, #0xffffffff *)
  []; (* 1363: mul x10, x14, x11 *)
  [`Q24`]; (* 1364: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 1365: subs x13, x14, x5 *)
  [`Q28`]; (* 1366: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 1367: csetm x15, cc *)
  [`Q21`]; (* 1368: usra v3.2d, v21.2d, #32 *)
  []; (* 1369: mul x7, x5, x1 *)
  [`Q16`]; (* 1370: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1371: cneg x13, x13, cc *)
  [`Q4`]; (* 1372: uaddlp v5.2d, v4.4s *)
  []; (* 1373: subs x11, x1, x11 *)
  [`Q2`]; (* 1374: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 1375: umulh x5, x5, x1 *)
  [`Q5`]; (* 1376: shl v24.2d, v5.2d, #32 *)
  []; (* 1377: cneg x11, x11, cc *)
  [`Q19`]; (* 1378: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1379: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 1380: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 1381: adds x15, x10, x7 *)
  []; (* 1382: mul x14, x13, x11 *)
  [`X6`]; (* 1383: eor x1, x6, x2 *)
  []; (* 1384: adcs x6, x8, x5 *)
  [`Q3`]; (* 1385: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1386: adcs x9, x5, xzr *)
  [`X13`]; (* 1387: umulh x11, x13, x11 *)
  [`X8`]; (* 1388: adds x15, x8, x15 *)
  [`X6`]; (* 1389: adcs x7, x7, x6 *)
  [`X14`]; (* 1390: eor x8, x14, x12 *)
  [`Q16`]; (* 1391: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1392: adcs x13, x9, xzr *)
  []; (* 1393: cmn x12, #0x1 *)
  []; (* 1394: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 1395: adcs x14, x15, x8 *)
  [`X11`]; (* 1396: eor x6, x11, x12 *)
  [`X7`]; (* 1397: adcs x6, x7, x6 *)
  [`Q24`]; (* 1398: mov x5, v24.d[0] *)
  []; (* 1399: mov x11, v21.d[1] *)
  [`Q21`]; (* 1400: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 1401: adc x3, x13, x12 *)
  []; (* 1402: adds x12, x5, x9 *)
  []; (* 1403: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1404: adcs x11, x11, xzr *)
  [`X7`]; (* 1405: adds x12, x7, x12 *)
  []; (* 1406: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 1407: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1408: adcs x11, x11, xzr *)
  []; (* 1409: cmn x2, #0x1 *)
  [`X12`]; (* 1410: adcs x16, x12, x16 *)
  [`X7`]; (* 1411: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1412: adc x2, x11, x2 *)
  [`X24`; `X5`]; (* 1413: adds x7, x5, x24 *)
  [`X16`; `X25`]; (* 1414: adcs x15, x16, x25 *)
  [`X17`; `X4`]; (* 1415: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 1416: adcs x9, x1, x26 *)
  [`X10`]; (* 1417: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 1418: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1419: adc x2, xzr, xzr *)
  []; (* 1420: cmn x5, #0x1 *)
  [`X14`]; (* 1421: eor x13, x14, x5 *)
  [`X1`]; (* 1422: adcs x14, x1, x7 *)
  [`X6`]; (* 1423: eor x1, x6, x5 *)
  [`X13`]; (* 1424: adcs x6, x13, x15 *)
  [`X1`]; (* 1425: adcs x10, x1, x9 *)
  [`X3`]; (* 1426: eor x4, x3, x5 *)
  []; (* 1427: mov x1, #0xffffffff *)
  [`X4`]; (* 1428: adcs x8, x4, x16 *)
  []; (* 1429: lsr x13, x14, #32 *)
  []; (* 1430: adcs x17, x2, x5 *)
  []; (* 1431: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1432: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 1433: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 1434: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 1435: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 1436: adcs x9, x11, x16 *)
  []; (* 1437: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 1438: adc x10, x4, x2 *)
  []; (* 1439: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1440: sbc x4, x14, x13 *)
  [`X6`]; (* 1441: adds x11, x6, x11 *)
  [`X13`]; (* 1442: adcs x12, x12, x13 *)
  []; (* 1443: lsl x15, x11, #32 *)
  [`X7`]; (* 1444: adcs x17, x7, x17 *)
  []; (* 1445: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1446: adc x13, x4, xzr *)
  []; (* 1447: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1448: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 1449: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 1450: adcs x15, x17, x7 *)
  [`X13`]; (* 1451: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1452: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 1453: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 1454: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 1455: adc x13, x10, xzr *)
  []; (* 1456: add x12, x13, #0x1 *)
  []; (* 1457: neg x11, x12 *)
  []; (* 1458: lsl x4, x12, #32 *)
  []; (* 1459: adds x17, x17, x4 *)
  []; (* 1460: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1461: adc x13, x13, xzr *)
  [`X8`]; (* 1462: subs x11, x8, x11 *)
  [`X15`]; (* 1463: sbcs x4, x15, x4 *)
  []; (* 1464: sbcs x7, x7, xzr *)
  []; (* 1465: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1466: sbcs x13, x13, x12 *)
  []; (* 1467: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 1468: adds x9, x11, x13 *)
  []; (* 1469: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 1470: adcs x10, x4, x1 *)
  [`X12`; `X13`]; (* 1471: and x1, x12, x13 *)
  []; (* 1472: stp x9, x10, [sp, #192] *)
  [`X7`]; (* 1473: adcs x11, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`; `X17`]; (* 1474: adc x12, x17, x1 *)
  []; (* 1475: stp x11, x12, [sp, #208] *)
  []; (* 1476: ldp x5, x6, [sp, #64] *)
  []; (* 1477: ldp x4, x3, [sp, #128] *)
  [`X4`]; (* 1478: subs x5, x5, x4 *)
  [`X3`]; (* 1479: sbcs x6, x6, x3 *)
  []; (* 1480: ldp x7, x8, [sp, #80] *)
  []; (* 1481: ldp x4, x3, [sp, #144] *)
  [`X4`]; (* 1482: sbcs x7, x7, x4 *)
  [`X3`]; (* 1483: sbcs x8, x8, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1484: csetm x3, cc *)
  [`X5`]; (* 1485: adds x13, x5, x3 *)
  []; (* 1486: and x4, x3, #0xffffffff *)
  [`X4`; `X6`]; (* 1487: adcs x24, x6, x4 *)
  [`X7`]; (* 1488: adcs x25, x7, xzr *)
  [`X3`]; (* 1489: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X8`]; (* 1490: adc x26, x8, x4 *)
  []; (* 1491: stp x13, x24, [sp, #160] *)
  []; (* 1492: stp x25, x26, [sp, #176] *)
  [`X19`; `X9`]; (* 1493: subs x5, x19, x9 *)
  [`X10`; `X20`]; (* 1494: sbcs x6, x20, x10 *)
  []; (* 1495: ldp x7, x8, [sp, #48] *)
  [`X11`]; (* 1496: sbcs x7, x7, x11 *)
  [`X12`]; (* 1497: sbcs x8, x8, x12 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1498: csetm x3, cc *)
  [`X5`]; (* 1499: adds x19, x5, x3 *)
  []; (* 1500: and x4, x3, #0xffffffff *)
  [`X4`; `X6`]; (* 1501: adcs x20, x6, x4 *)
  []; (* 1502: adcs x7, x7, xzr *)
  [`X3`]; (* 1503: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1504: adc x8, x8, x4 *)
  []; (* 1505: stp x19, x20, [sp, #32] *)
  [`X7`; `X8`]; (* 1506: stp x7, x8, [sp, #48] *)
  []; (* 1507: ldr q19, [sp, #160] *)
  []; (* 1508: ldr q23, [sp, #176] *)
  []; (* 1509: ldr q0, [sp, #160] *)
  []; (* 1510: uzp2 v29.4s, v19.4s, v19.4s *)
  []; (* 1511: xtn v4.2s, v19.2d *)
  []; (* 1512: umulh x8, x13, x24 *)
  []; (* 1513: rev64 v20.4s, v23.4s *)
  []; (* 1514: umull v16.2d, v19.2s, v19.2s *)
  [`Q29`; `Q4`]; (* 1515: umull v1.2d, v29.2s, v4.2s *)
  []; (* 1516: mul v20.4s, v20.4s, v0.4s *)
  []; (* 1517: subs x14, x13, x24 *)
  []; (* 1518: umulh x15, x13, x25 *)
  []; (* 1519: mov x16, v16.d[1] *)
  [`Q19`]; (* 1520: umull2 v4.2d, v19.4s, v19.4s *)
  [`Q16`]; (* 1521: mov x4, v16.d[0] *)
  [`Q23`]; (* 1522: uzp1 v17.4s, v23.4s, v0.4s *)
  [`Q20`]; (* 1523: uaddlp v19.2d, v20.4s *)
  []; (* 1524: lsr x7, x8, #63 *)
  [`X13`]; (* 1525: mul x11, x13, x24 *)
  []; (* 1526: mov x12, v1.d[0] *)
  []; (* 1527: csetm x5, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1528: cneg x6, x14, cc *)
  []; (* 1529: mov x3, v4.d[1] *)
  [`Q4`]; (* 1530: mov x14, v4.d[0] *)
  []; (* 1531: subs x2, x26, x25 *)
  [`Q1`]; (* 1532: mov x9, v1.d[1] *)
  [`X2`]; (* 1533: cneg x17, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1534: cinv x2, x5, cc *)
  [`X4`]; (* 1535: adds x5, x4, x12, lsl #33 *)
  [`X8`]; (* 1536: extr x4, x8, x11, #63 *)
  [`X12`]; (* 1537: lsr x8, x12, #31 *)
  [`Q0`]; (* 1538: uzp1 v20.4s, v0.4s, v0.4s *)
  []; (* 1539: shl v19.2d, v19.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1540: adc x16, x16, x8 *)
  [`X14`]; (* 1541: adds x8, x14, x9, lsl #33 *)
  [`X9`]; (* 1542: lsr x14, x9, #31 *)
  []; (* 1543: lsl x9, x5, #32 *)
  [`Q17`; `Q20`]; (* 1544: umlal v19.2d, v20.2s, v17.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1545: adc x14, x3, x14 *)
  [`X11`]; (* 1546: adds x16, x16, x11, lsl #1 *)
  []; (* 1547: lsr x3, x5, #32 *)
  []; (* 1548: umulh x12, x6, x17 *)
  [`X8`]; (* 1549: adcs x4, x8, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`; `X7`]; (* 1550: adc x11, x14, x7 *)
  []; (* 1551: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1552: sbc x5, x5, x3 *)
  [`X9`]; (* 1553: adds x16, x16, x9 *)
  []; (* 1554: mov x14, v19.d[0] *)
  [`X6`]; (* 1555: mul x17, x6, x17 *)
  [`X4`]; (* 1556: adcs x3, x4, x3 *)
  []; (* 1557: lsl x7, x16, #32 *)
  [`X24`]; (* 1558: umulh x13, x24, x26 *)
  [`X8`]; (* 1559: adcs x11, x11, x8 *)
  []; (* 1560: lsr x8, x16, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1561: adc x5, x5, xzr *)
  []; (* 1562: subs x9, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1563: sbc x16, x16, x8 *)
  [`X3`]; (* 1564: adds x7, x3, x7 *)
  [`Q19`]; (* 1565: mov x3, v19.d[1] *)
  [`X11`; `X8`]; (* 1566: adcs x6, x11, x8 *)
  []; (* 1567: umulh x11, x25, x26 *)
  [`X9`]; (* 1568: adcs x5, x5, x9 *)
  [`X12`]; (* 1569: eor x8, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1570: adc x9, x16, xzr *)
  []; (* 1571: adds x16, x14, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1572: adc x15, x15, xzr *)
  [`X16`]; (* 1573: adds x12, x16, x3 *)
  [`X17`]; (* 1574: eor x16, x17, x2 *)
  []; (* 1575: mul x4, x25, x26 *)
  []; (* 1576: adcs x15, x15, x13 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 1577: adc x17, x13, xzr *)
  [`X3`]; (* 1578: adds x15, x15, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1579: adc x3, x17, xzr *)
  []; (* 1580: cmn x2, #0x1 *)
  []; (* 1581: mul x17, x26, x26 *)
  [`X16`]; (* 1582: adcs x12, x12, x16 *)
  [`X15`; `X8`]; (* 1583: adcs x16, x15, x8 *)
  [`X26`]; (* 1584: umulh x10, x26, x26 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1585: adc x2, x3, x2 *)
  []; (* 1586: adds x14, x14, x14 *)
  []; (* 1587: adcs x12, x12, x12 *)
  []; (* 1588: adcs x16, x16, x16 *)
  []; (* 1589: adcs x2, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1590: adc x15, xzr, xzr *)
  [`X7`]; (* 1591: adds x14, x14, x7 *)
  []; (* 1592: mul x3, x25, x25 *)
  [`X6`]; (* 1593: adcs x12, x12, x6 *)
  []; (* 1594: lsr x7, x14, #32 *)
  [`X5`]; (* 1595: adcs x16, x16, x5 *)
  []; (* 1596: lsl x5, x14, #32 *)
  [`X25`]; (* 1597: umulh x13, x25, x25 *)
  [`X9`]; (* 1598: adcs x2, x2, x9 *)
  []; (* 1599: mov x6, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1600: adc x15, x15, xzr *)
  [`X4`]; (* 1601: adds x8, x4, x4 *)
  [`X11`]; (* 1602: adcs x1, x11, x11 *)
  []; (* 1603: mov x11, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1604: adc x4, xzr, xzr *)
  []; (* 1605: subs x9, x14, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1606: sbc x14, x14, x7 *)
  [`X5`]; (* 1607: adds x12, x12, x5 *)
  [`X7`]; (* 1608: adcs x16, x16, x7 *)
  []; (* 1609: lsl x5, x12, #32 *)
  []; (* 1610: lsr x7, x12, #32 *)
  [`X9`]; (* 1611: adcs x2, x2, x9 *)
  [`X15`]; (* 1612: adcs x14, x15, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1613: adc x15, xzr, xzr *)
  []; (* 1614: subs x9, x12, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1615: sbc x12, x12, x7 *)
  [`X5`]; (* 1616: adds x16, x16, x5 *)
  [`X7`]; (* 1617: adcs x2, x2, x7 *)
  [`X9`]; (* 1618: adcs x14, x14, x9 *)
  [`X15`]; (* 1619: adcs x12, x15, x12 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1620: adc x15, xzr, xzr *)
  [`X3`]; (* 1621: adds x16, x16, x3 *)
  [`X13`]; (* 1622: adcs x2, x2, x13 *)
  [`X17`]; (* 1623: adcs x14, x14, x17 *)
  [`X10`]; (* 1624: adcs x12, x12, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1625: adc x15, x15, xzr *)
  [`X8`]; (* 1626: adds x2, x2, x8 *)
  [`X1`]; (* 1627: adcs x14, x14, x1 *)
  [`X4`]; (* 1628: adcs x12, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1629: adcs x15, x15, xzr *)
  []; (* 1630: adds x3, x16, #0x1 *)
  [`X6`]; (* 1631: sbcs x5, x2, x6 *)
  []; (* 1632: sbcs x8, x14, xzr *)
  []; (* 1633: sbcs x11, x12, x11 *)
  [`X15`]; (* 1634: sbcs xzr, x15, xzr *)
  [`X16`; `X3`]; (* 1635: csel x24, x3, x16, cs *)
  [`X14`; `X8`]; (* 1636: csel x25, x8, x14, cs *)
  [`X11`; `X12`]; (* 1637: csel x26, x11, x12, cs *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X5`]; (* 1638: csel x27, x5, x2, cs *)
  []; (* 1639: stp x25, x26, [sp, #112] *)
  []; (* 1640: stp x24, x27, [sp, #96] *)
  []; (* 1641: mov x0, sp *)
  []; (* 1642: ldr q19, [sp, #32] *)
  []; (* 1643: ldr q23, [sp, #48] *)
  []; (* 1644: ldr q0, [sp, #32] *)
  []; (* 1645: ldp x1, x10, [sp, #48] *)
  []; (* 1646: uzp2 v29.4s, v19.4s, v19.4s *)
  []; (* 1647: xtn v4.2s, v19.2d *)
  []; (* 1648: umulh x8, x19, x20 *)
  []; (* 1649: rev64 v20.4s, v23.4s *)
  []; (* 1650: umull v16.2d, v19.2s, v19.2s *)
  [`Q29`; `Q4`]; (* 1651: umull v1.2d, v29.2s, v4.2s *)
  []; (* 1652: mul v20.4s, v20.4s, v0.4s *)
  []; (* 1653: subs x14, x19, x20 *)
  []; (* 1654: umulh x15, x19, x1 *)
  []; (* 1655: mov x16, v16.d[1] *)
  [`Q19`]; (* 1656: umull2 v4.2d, v19.4s, v19.4s *)
  [`Q16`]; (* 1657: mov x4, v16.d[0] *)
  [`Q23`]; (* 1658: uzp1 v17.4s, v23.4s, v0.4s *)
  [`Q20`]; (* 1659: uaddlp v19.2d, v20.4s *)
  []; (* 1660: lsr x7, x8, #63 *)
  [`X19`]; (* 1661: mul x11, x19, x20 *)
  []; (* 1662: mov x12, v1.d[0] *)
  []; (* 1663: csetm x5, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1664: cneg x6, x14, cc *)
  []; (* 1665: mov x3, v4.d[1] *)
  [`Q4`]; (* 1666: mov x14, v4.d[0] *)
  []; (* 1667: subs x2, x10, x1 *)
  [`Q1`]; (* 1668: mov x9, v1.d[1] *)
  [`X2`]; (* 1669: cneg x17, x2, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1670: cinv x2, x5, cc *)
  [`X4`]; (* 1671: adds x5, x4, x12, lsl #33 *)
  [`X8`]; (* 1672: extr x4, x8, x11, #63 *)
  [`X12`]; (* 1673: lsr x8, x12, #31 *)
  [`Q0`]; (* 1674: uzp1 v20.4s, v0.4s, v0.4s *)
  []; (* 1675: shl v19.2d, v19.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X8`]; (* 1676: adc x16, x16, x8 *)
  [`X14`]; (* 1677: adds x8, x14, x9, lsl #33 *)
  [`X9`]; (* 1678: lsr x14, x9, #31 *)
  []; (* 1679: lsl x9, x5, #32 *)
  [`Q17`; `Q20`]; (* 1680: umlal v19.2d, v20.2s, v17.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1681: adc x14, x3, x14 *)
  [`X11`]; (* 1682: adds x16, x16, x11, lsl #1 *)
  []; (* 1683: lsr x3, x5, #32 *)
  []; (* 1684: umulh x12, x6, x17 *)
  [`X8`]; (* 1685: adcs x4, x8, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`; `X7`]; (* 1686: adc x11, x14, x7 *)
  []; (* 1687: subs x8, x5, x9 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1688: sbc x5, x5, x3 *)
  [`X9`]; (* 1689: adds x16, x16, x9 *)
  []; (* 1690: mov x14, v19.d[0] *)
  [`X6`]; (* 1691: mul x17, x6, x17 *)
  [`X4`]; (* 1692: adcs x3, x4, x3 *)
  []; (* 1693: lsl x7, x16, #32 *)
  [`X20`]; (* 1694: umulh x13, x20, x10 *)
  [`X8`]; (* 1695: adcs x11, x11, x8 *)
  []; (* 1696: lsr x8, x16, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1697: adc x5, x5, xzr *)
  []; (* 1698: subs x9, x16, x7 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1699: sbc x16, x16, x8 *)
  [`X3`]; (* 1700: adds x7, x3, x7 *)
  [`Q19`]; (* 1701: mov x3, v19.d[1] *)
  [`X11`; `X8`]; (* 1702: adcs x6, x11, x8 *)
  []; (* 1703: umulh x11, x1, x10 *)
  [`X9`]; (* 1704: adcs x5, x5, x9 *)
  [`X12`]; (* 1705: eor x8, x12, x2 *)
  [`CF`; `NF`; `ZF`; `VF`; `X16`]; (* 1706: adc x9, x16, xzr *)
  []; (* 1707: adds x16, x14, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1708: adc x15, x15, xzr *)
  [`X16`]; (* 1709: adds x12, x16, x3 *)
  [`X17`]; (* 1710: eor x16, x17, x2 *)
  []; (* 1711: mul x4, x1, x10 *)
  []; (* 1712: adcs x15, x15, x13 *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 1713: adc x17, x13, xzr *)
  [`X3`]; (* 1714: adds x15, x15, x3 *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1715: adc x3, x17, xzr *)
  []; (* 1716: cmn x2, #0x1 *)
  []; (* 1717: mul x17, x10, x10 *)
  [`X16`]; (* 1718: adcs x12, x12, x16 *)
  [`X15`; `X8`]; (* 1719: adcs x16, x15, x8 *)
  []; (* 1720: umulh x10, x10, x10 *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1721: adc x2, x3, x2 *)
  []; (* 1722: adds x14, x14, x14 *)
  []; (* 1723: adcs x12, x12, x12 *)
  []; (* 1724: adcs x16, x16, x16 *)
  []; (* 1725: adcs x2, x2, x2 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1726: adc x15, xzr, xzr *)
  [`X7`]; (* 1727: adds x14, x14, x7 *)
  []; (* 1728: mul x3, x1, x1 *)
  [`X6`]; (* 1729: adcs x12, x12, x6 *)
  []; (* 1730: lsr x7, x14, #32 *)
  [`X5`]; (* 1731: adcs x16, x16, x5 *)
  []; (* 1732: lsl x5, x14, #32 *)
  [`X1`]; (* 1733: umulh x13, x1, x1 *)
  [`X9`]; (* 1734: adcs x2, x2, x9 *)
  []; (* 1735: mov x6, #0xffffffff *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1736: adc x15, x15, xzr *)
  [`X4`]; (* 1737: adds x8, x4, x4 *)
  [`X11`]; (* 1738: adcs x1, x11, x11 *)
  []; (* 1739: mov x11, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1740: adc x4, xzr, xzr *)
  []; (* 1741: subs x9, x14, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1742: sbc x14, x14, x7 *)
  [`X5`]; (* 1743: adds x12, x12, x5 *)
  [`X7`]; (* 1744: adcs x16, x16, x7 *)
  []; (* 1745: lsl x5, x12, #32 *)
  []; (* 1746: lsr x7, x12, #32 *)
  [`X9`]; (* 1747: adcs x2, x2, x9 *)
  [`X15`]; (* 1748: adcs x14, x15, x14 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1749: adc x15, xzr, xzr *)
  []; (* 1750: subs x9, x12, x5 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1751: sbc x12, x12, x7 *)
  [`X5`]; (* 1752: adds x16, x16, x5 *)
  [`X7`]; (* 1753: adcs x2, x2, x7 *)
  [`X9`]; (* 1754: adcs x14, x14, x9 *)
  [`X15`]; (* 1755: adcs x12, x15, x12 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1756: adc x15, xzr, xzr *)
  [`X3`]; (* 1757: adds x16, x16, x3 *)
  [`X13`]; (* 1758: adcs x2, x2, x13 *)
  [`X17`]; (* 1759: adcs x14, x14, x17 *)
  [`X10`]; (* 1760: adcs x12, x12, x10 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1761: adc x15, x15, xzr *)
  [`X8`]; (* 1762: adds x2, x2, x8 *)
  [`X1`]; (* 1763: adcs x14, x14, x1 *)
  [`X4`]; (* 1764: adcs x12, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1765: adcs x15, x15, xzr *)
  []; (* 1766: adds x3, x16, #0x1 *)
  [`X6`]; (* 1767: sbcs x5, x2, x6 *)
  []; (* 1768: sbcs x8, x14, xzr *)
  []; (* 1769: sbcs x11, x12, x11 *)
  [`X15`]; (* 1770: sbcs xzr, x15, xzr *)
  [`X3`]; (* 1771: csel x16, x3, x16, cs *)
  [`X8`]; (* 1772: csel x14, x8, x14, cs *)
  [`X11`]; (* 1773: csel x12, x11, x12, cs *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1774: csel x2, x5, x2, cs *)
  [`X12`; `X14`]; (* 1775: stp x14, x12, [x0, #16] *)
  [`X0`; `X16`; `X2`]; (* 1776: stp x16, x2, [x0] *)
  []; (* 1777: ldr q20, [sp, #128] *)
  []; (* 1778: ldr q0, [sp, #96] *)
  []; (* 1779: ldp x6, x10, [sp, #128] *)
  []; (* 1780: rev64 v16.4s, v20.4s *)
  []; (* 1781: subs x4, x24, x27 *)
  []; (* 1782: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1783: cneg x13, x4, cc *)
  []; (* 1784: mul v16.4s, v16.4s, v0.4s *)
  []; (* 1785: umulh x12, x27, x10 *)
  [`Q20`]; (* 1786: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 1787: subs x14, x25, x24 *)
  []; (* 1788: ldr q20, [sp, #144] *)
  []; (* 1789: sbcs x5, x26, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1790: ngc x17, xzr *)
  [`X25`; `X26`]; (* 1791: subs x8, x25, x26 *)
  [`Q16`]; (* 1792: uaddlp v27.2d, v16.4s *)
  []; (* 1793: umulh x4, x24, x6 *)
  [`Q0`]; (* 1794: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 1795: cneg x11, x8, cc *)
  [`Q27`]; (* 1796: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1797: csetm x15, cc *)
  []; (* 1798: subs x9, x10, x6 *)
  [`X14`]; (* 1799: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 1800: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 1801: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 1802: cinv x9, x3, cc *)
  []; (* 1803: cmn x17, #0x1 *)
  []; (* 1804: ldr q28, [sp, #112] *)
  [`X7`]; (* 1805: adcs x14, x7, xzr *)
  []; (* 1806: mul x7, x13, x8 *)
  [`X5`]; (* 1807: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1808: adcs x5, x1, xzr *)
  []; (* 1809: xtn v1.2s, v20.2d *)
  []; (* 1810: mov x1, v17.d[0] *)
  [`Q17`]; (* 1811: mov x3, v17.d[1] *)
  []; (* 1812: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 1813: umulh x16, x13, x8 *)
  [`X7`]; (* 1814: eor x13, x7, x9 *)
  []; (* 1815: adds x8, x1, x3 *)
  []; (* 1816: adcs x7, x4, x12 *)
  []; (* 1817: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1818: adcs x12, x12, xzr *)
  [`X4`]; (* 1819: adds x8, x4, x8 *)
  [`X7`]; (* 1820: adcs x3, x3, x7 *)
  []; (* 1821: ldp x7, x2, [sp, #144] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1822: adcs x12, x12, xzr *)
  []; (* 1823: cmn x9, #0x1 *)
  [`X13`]; (* 1824: adcs x8, x8, x13 *)
  [`X16`]; (* 1825: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 1826: adcs x16, x3, x13 *)
  []; (* 1827: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 1828: adc x13, x12, x9 *)
  [`X6`]; (* 1829: subs x12, x6, x7 *)
  [`X10`]; (* 1830: sbcs x9, x10, x2 *)
  []; (* 1831: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1832: ngc x4, xzr *)
  [`X2`; `X7`]; (* 1833: subs x6, x2, x7 *)
  [`X15`]; (* 1834: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1835: cneg x6, x6, cc *)
  []; (* 1836: subs x7, x1, x3 *)
  []; (* 1837: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1838: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 1839: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 1840: adcs x3, x16, x10 *)
  []; (* 1841: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 1842: adcs x8, x13, x7 *)
  [`X12`]; (* 1843: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 1844: adc x10, x1, xzr *)
  []; (* 1845: cmn x4, #0x1 *)
  [`X11`]; (* 1846: umulh x6, x11, x6 *)
  [`X13`]; (* 1847: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1848: adcs x1, x9, xzr *)
  []; (* 1849: lsl x13, x15, #32 *)
  []; (* 1850: subs x12, x15, x13 *)
  []; (* 1851: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1852: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 1853: adds x19, x3, x13 *)
  [`X7`; `X8`]; (* 1854: adcs x20, x8, x7 *)
  []; (* 1855: umulh x8, x14, x11 *)
  []; (* 1856: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 1857: adcs x25, x10, x12 *)
  []; (* 1858: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1859: adc x26, x15, xzr *)
  [`Q20`]; (* 1860: rev64 v24.4s, v20.4s *)
  []; (* 1861: movi v2.2d, #0xffffffff *)
  []; (* 1862: mul x10, x14, x11 *)
  [`Q24`]; (* 1863: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 1864: subs x13, x14, x5 *)
  [`Q28`]; (* 1865: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 1866: csetm x15, cc *)
  [`Q21`]; (* 1867: usra v3.2d, v21.2d, #32 *)
  []; (* 1868: mul x7, x5, x1 *)
  [`Q16`]; (* 1869: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1870: cneg x13, x13, cc *)
  [`Q4`]; (* 1871: uaddlp v5.2d, v4.4s *)
  []; (* 1872: subs x11, x1, x11 *)
  [`Q2`]; (* 1873: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 1874: umulh x5, x5, x1 *)
  [`Q5`]; (* 1875: shl v24.2d, v5.2d, #32 *)
  []; (* 1876: cneg x11, x11, cc *)
  [`Q19`]; (* 1877: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 1878: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 1879: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 1880: adds x15, x10, x7 *)
  []; (* 1881: mul x14, x13, x11 *)
  [`X6`]; (* 1882: eor x1, x6, x2 *)
  []; (* 1883: adcs x6, x8, x5 *)
  [`Q3`]; (* 1884: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1885: adcs x9, x5, xzr *)
  [`X13`]; (* 1886: umulh x11, x13, x11 *)
  [`X8`]; (* 1887: adds x15, x8, x15 *)
  [`X6`]; (* 1888: adcs x7, x7, x6 *)
  [`X14`]; (* 1889: eor x8, x14, x12 *)
  [`Q16`]; (* 1890: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 1891: adcs x13, x9, xzr *)
  []; (* 1892: cmn x12, #0x1 *)
  []; (* 1893: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 1894: adcs x14, x15, x8 *)
  [`X11`]; (* 1895: eor x6, x11, x12 *)
  [`X7`]; (* 1896: adcs x6, x7, x6 *)
  [`Q24`]; (* 1897: mov x5, v24.d[0] *)
  []; (* 1898: mov x11, v21.d[1] *)
  [`Q21`]; (* 1899: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 1900: adc x3, x13, x12 *)
  []; (* 1901: adds x12, x5, x9 *)
  []; (* 1902: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1903: adcs x11, x11, xzr *)
  [`X7`]; (* 1904: adds x12, x7, x12 *)
  []; (* 1905: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 1906: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1907: adcs x11, x11, xzr *)
  []; (* 1908: cmn x2, #0x1 *)
  [`X12`]; (* 1909: adcs x16, x12, x16 *)
  [`X7`]; (* 1910: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 1911: adc x2, x11, x2 *)
  [`X19`; `X5`]; (* 1912: adds x7, x5, x19 *)
  [`X16`; `X20`]; (* 1913: adcs x15, x16, x20 *)
  [`X17`; `X4`]; (* 1914: eor x5, x17, x4 *)
  [`X1`; `X25`]; (* 1915: adcs x9, x1, x25 *)
  [`X10`]; (* 1916: eor x1, x10, x5 *)
  [`X2`; `X26`]; (* 1917: adcs x16, x2, x26 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1918: adc x2, xzr, xzr *)
  []; (* 1919: cmn x5, #0x1 *)
  [`X14`]; (* 1920: eor x13, x14, x5 *)
  [`X1`]; (* 1921: adcs x14, x1, x7 *)
  [`X6`]; (* 1922: eor x1, x6, x5 *)
  [`X13`]; (* 1923: adcs x6, x13, x15 *)
  [`X1`]; (* 1924: adcs x10, x1, x9 *)
  [`X3`]; (* 1925: eor x4, x3, x5 *)
  []; (* 1926: mov x1, #0xffffffff *)
  [`X4`]; (* 1927: adcs x8, x4, x16 *)
  []; (* 1928: lsr x13, x14, #32 *)
  []; (* 1929: adcs x17, x2, x5 *)
  []; (* 1930: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 1931: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 1932: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 1933: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 1934: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 1935: adcs x9, x11, x16 *)
  []; (* 1936: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 1937: adc x10, x4, x2 *)
  []; (* 1938: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 1939: sbc x4, x14, x13 *)
  [`X6`]; (* 1940: adds x11, x6, x11 *)
  [`X13`]; (* 1941: adcs x12, x12, x13 *)
  []; (* 1942: lsl x15, x11, #32 *)
  [`X7`]; (* 1943: adcs x17, x7, x17 *)
  []; (* 1944: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1945: adc x13, x4, xzr *)
  []; (* 1946: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1947: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 1948: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 1949: adcs x15, x17, x7 *)
  [`X13`]; (* 1950: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1951: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 1952: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 1953: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 1954: adc x13, x10, xzr *)
  []; (* 1955: add x12, x13, #0x1 *)
  []; (* 1956: neg x11, x12 *)
  []; (* 1957: lsl x4, x12, #32 *)
  []; (* 1958: adds x17, x17, x4 *)
  []; (* 1959: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1960: adc x13, x13, xzr *)
  [`X8`]; (* 1961: subs x11, x8, x11 *)
  [`X15`]; (* 1962: sbcs x4, x15, x4 *)
  []; (* 1963: sbcs x7, x7, xzr *)
  []; (* 1964: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 1965: sbcs x13, x13, x12 *)
  []; (* 1966: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 1967: adds x19, x11, x13 *)
  []; (* 1968: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 1969: adcs x20, x4, x1 *)
  [`X12`; `X13`]; (* 1970: and x1, x12, x13 *)
  []; (* 1971: stp x19, x20, [sp, #128] *)
  [`X7`]; (* 1972: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 1973: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 1974: stp x4, x1, [sp, #144] *)
  []; (* 1975: ldr q20, [sp, #64] *)
  []; (* 1976: ldr q0, [sp, #96] *)
  []; (* 1977: ldp x6, x10, [sp, #64] *)
  []; (* 1978: ldp x11, x15, [sp, #112] *)
  []; (* 1979: rev64 v16.4s, v20.4s *)
  []; (* 1980: subs x4, x24, x27 *)
  []; (* 1981: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 1982: cneg x13, x4, cc *)
  []; (* 1983: mul v16.4s, v16.4s, v0.4s *)
  []; (* 1984: umulh x12, x27, x10 *)
  [`Q20`]; (* 1985: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 1986: subs x14, x11, x24 *)
  []; (* 1987: ldr q20, [sp, #80] *)
  [`X27`]; (* 1988: sbcs x5, x15, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1989: ngc x17, xzr *)
  [`X11`; `X15`]; (* 1990: subs x8, x11, x15 *)
  [`Q16`]; (* 1991: uaddlp v27.2d, v16.4s *)
  [`X24`]; (* 1992: umulh x4, x24, x6 *)
  [`Q0`]; (* 1993: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 1994: cneg x11, x8, cc *)
  [`Q27`]; (* 1995: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 1996: csetm x15, cc *)
  []; (* 1997: subs x9, x10, x6 *)
  [`X14`]; (* 1998: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 1999: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 2000: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2001: cinv x9, x3, cc *)
  []; (* 2002: cmn x17, #0x1 *)
  []; (* 2003: ldr q28, [sp, #112] *)
  [`X7`]; (* 2004: adcs x14, x7, xzr *)
  []; (* 2005: mul x7, x13, x8 *)
  [`X5`]; (* 2006: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2007: adcs x5, x1, xzr *)
  []; (* 2008: xtn v1.2s, v20.2d *)
  []; (* 2009: mov x1, v17.d[0] *)
  [`Q17`]; (* 2010: mov x3, v17.d[1] *)
  []; (* 2011: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 2012: umulh x16, x13, x8 *)
  [`X7`]; (* 2013: eor x13, x7, x9 *)
  []; (* 2014: adds x8, x1, x3 *)
  []; (* 2015: adcs x7, x4, x12 *)
  []; (* 2016: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2017: adcs x12, x12, xzr *)
  [`X4`]; (* 2018: adds x8, x4, x8 *)
  [`X7`]; (* 2019: adcs x3, x3, x7 *)
  []; (* 2020: ldp x7, x2, [sp, #80] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2021: adcs x12, x12, xzr *)
  []; (* 2022: cmn x9, #0x1 *)
  [`X13`]; (* 2023: adcs x8, x8, x13 *)
  [`X16`]; (* 2024: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 2025: adcs x16, x3, x13 *)
  []; (* 2026: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 2027: adc x13, x12, x9 *)
  [`X6`]; (* 2028: subs x12, x6, x7 *)
  [`X10`]; (* 2029: sbcs x9, x10, x2 *)
  []; (* 2030: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2031: ngc x4, xzr *)
  [`X2`; `X7`]; (* 2032: subs x6, x2, x7 *)
  [`X15`]; (* 2033: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2034: cneg x6, x6, cc *)
  []; (* 2035: subs x7, x1, x3 *)
  []; (* 2036: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2037: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 2038: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 2039: adcs x3, x16, x10 *)
  []; (* 2040: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 2041: adcs x8, x13, x7 *)
  [`X12`]; (* 2042: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2043: adc x10, x1, xzr *)
  []; (* 2044: cmn x4, #0x1 *)
  [`X11`]; (* 2045: umulh x6, x11, x6 *)
  [`X13`]; (* 2046: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2047: adcs x1, x9, xzr *)
  []; (* 2048: lsl x13, x15, #32 *)
  []; (* 2049: subs x12, x15, x13 *)
  []; (* 2050: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2051: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 2052: adds x24, x3, x13 *)
  [`X7`; `X8`]; (* 2053: adcs x25, x8, x7 *)
  []; (* 2054: umulh x8, x14, x11 *)
  []; (* 2055: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 2056: adcs x26, x10, x12 *)
  []; (* 2057: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2058: adc x27, x15, xzr *)
  [`Q20`]; (* 2059: rev64 v24.4s, v20.4s *)
  []; (* 2060: movi v2.2d, #0xffffffff *)
  []; (* 2061: mul x10, x14, x11 *)
  [`Q24`]; (* 2062: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 2063: subs x13, x14, x5 *)
  [`Q28`]; (* 2064: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 2065: csetm x15, cc *)
  [`Q21`]; (* 2066: usra v3.2d, v21.2d, #32 *)
  []; (* 2067: mul x7, x5, x1 *)
  [`Q16`]; (* 2068: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2069: cneg x13, x13, cc *)
  [`Q4`]; (* 2070: uaddlp v5.2d, v4.4s *)
  []; (* 2071: subs x11, x1, x11 *)
  [`Q2`]; (* 2072: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 2073: umulh x5, x5, x1 *)
  [`Q5`]; (* 2074: shl v24.2d, v5.2d, #32 *)
  []; (* 2075: cneg x11, x11, cc *)
  [`Q19`]; (* 2076: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2077: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 2078: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 2079: adds x15, x10, x7 *)
  []; (* 2080: mul x14, x13, x11 *)
  [`X6`]; (* 2081: eor x1, x6, x2 *)
  []; (* 2082: adcs x6, x8, x5 *)
  [`Q3`]; (* 2083: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2084: adcs x9, x5, xzr *)
  [`X13`]; (* 2085: umulh x11, x13, x11 *)
  [`X8`]; (* 2086: adds x15, x8, x15 *)
  [`X6`]; (* 2087: adcs x7, x7, x6 *)
  [`X14`]; (* 2088: eor x8, x14, x12 *)
  [`Q16`]; (* 2089: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2090: adcs x13, x9, xzr *)
  []; (* 2091: cmn x12, #0x1 *)
  []; (* 2092: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 2093: adcs x14, x15, x8 *)
  [`X11`]; (* 2094: eor x6, x11, x12 *)
  [`X7`]; (* 2095: adcs x6, x7, x6 *)
  [`Q24`]; (* 2096: mov x5, v24.d[0] *)
  []; (* 2097: mov x11, v21.d[1] *)
  [`Q21`]; (* 2098: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 2099: adc x3, x13, x12 *)
  []; (* 2100: adds x12, x5, x9 *)
  []; (* 2101: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2102: adcs x11, x11, xzr *)
  [`X7`]; (* 2103: adds x12, x7, x12 *)
  []; (* 2104: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 2105: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2106: adcs x11, x11, xzr *)
  []; (* 2107: cmn x2, #0x1 *)
  [`X12`]; (* 2108: adcs x16, x12, x16 *)
  [`X7`]; (* 2109: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2110: adc x2, x11, x2 *)
  [`X24`; `X5`]; (* 2111: adds x7, x5, x24 *)
  [`X16`; `X25`]; (* 2112: adcs x15, x16, x25 *)
  [`X17`; `X4`]; (* 2113: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 2114: adcs x9, x1, x26 *)
  [`X10`]; (* 2115: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 2116: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2117: adc x2, xzr, xzr *)
  []; (* 2118: cmn x5, #0x1 *)
  [`X14`]; (* 2119: eor x13, x14, x5 *)
  [`X1`]; (* 2120: adcs x14, x1, x7 *)
  [`X6`]; (* 2121: eor x1, x6, x5 *)
  [`X13`]; (* 2122: adcs x6, x13, x15 *)
  [`X1`]; (* 2123: adcs x10, x1, x9 *)
  [`X3`]; (* 2124: eor x4, x3, x5 *)
  []; (* 2125: mov x1, #0xffffffff *)
  [`X4`]; (* 2126: adcs x8, x4, x16 *)
  []; (* 2127: lsr x13, x14, #32 *)
  []; (* 2128: adcs x17, x2, x5 *)
  []; (* 2129: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2130: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 2131: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 2132: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 2133: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 2134: adcs x9, x11, x16 *)
  []; (* 2135: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 2136: adc x10, x4, x2 *)
  []; (* 2137: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2138: sbc x4, x14, x13 *)
  [`X6`]; (* 2139: adds x11, x6, x11 *)
  [`X13`]; (* 2140: adcs x12, x12, x13 *)
  []; (* 2141: lsl x15, x11, #32 *)
  [`X7`]; (* 2142: adcs x17, x7, x17 *)
  []; (* 2143: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2144: adc x13, x4, xzr *)
  []; (* 2145: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2146: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 2147: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 2148: adcs x15, x17, x7 *)
  [`X13`]; (* 2149: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2150: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 2151: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 2152: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 2153: adc x13, x10, xzr *)
  []; (* 2154: add x12, x13, #0x1 *)
  []; (* 2155: neg x11, x12 *)
  []; (* 2156: lsl x4, x12, #32 *)
  []; (* 2157: adds x17, x17, x4 *)
  []; (* 2158: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2159: adc x13, x13, xzr *)
  [`X8`]; (* 2160: subs x11, x8, x11 *)
  [`X15`]; (* 2161: sbcs x4, x15, x4 *)
  []; (* 2162: sbcs x7, x7, xzr *)
  []; (* 2163: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2164: sbcs x13, x13, x12 *)
  []; (* 2165: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 2166: adds x9, x11, x13 *)
  []; (* 2167: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 2168: adcs x10, x4, x1 *)
  [`X12`; `X13`]; (* 2169: and x1, x12, x13 *)
  []; (* 2170: stp x9, x10, [sp, #64] *)
  [`X7`]; (* 2171: adcs x11, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`; `X17`]; (* 2172: adc x12, x17, x1 *)
  []; (* 2173: stp x11, x12, [sp, #80] *)
  []; (* 2174: mov x0, sp *)
  []; (* 2175: mov x1, sp *)
  []; (* 2176: ldp x5, x6, [x1] *)
  []; (* 2177: subs x5, x5, x19 *)
  []; (* 2178: sbcs x6, x6, x20 *)
  [`X1`]; (* 2179: ldp x7, x8, [x1, #16] *)
  []; (* 2180: ldp x4, x3, [sp, #144] *)
  [`X4`]; (* 2181: sbcs x7, x7, x4 *)
  [`X3`]; (* 2182: sbcs x8, x8, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2183: csetm x3, cc *)
  [`X5`]; (* 2184: adds x24, x5, x3 *)
  []; (* 2185: and x4, x3, #0xffffffff *)
  [`X4`; `X6`]; (* 2186: adcs x25, x6, x4 *)
  []; (* 2187: adcs x7, x7, xzr *)
  [`X3`]; (* 2188: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2189: adc x8, x8, x4 *)
  [`X0`; `X7`; `X8`]; (* 2190: stp x7, x8, [x0, #16] *)
  [`X19`; `X9`]; (* 2191: subs x5, x9, x19 *)
  [`X10`; `X20`]; (* 2192: sbcs x6, x10, x20 *)
  []; (* 2193: ldp x4, x3, [sp, #144] *)
  [`X11`; `X4`]; (* 2194: sbcs x7, x11, x4 *)
  [`X12`; `X3`]; (* 2195: sbcs x8, x12, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2196: csetm x3, cc *)
  []; (* 2197: adds x5, x5, x3 *)
  []; (* 2198: and x4, x3, #0xffffffff *)
  [`X4`]; (* 2199: adcs x6, x6, x4 *)
  []; (* 2200: adcs x7, x7, xzr *)
  [`X3`]; (* 2201: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2202: adc x8, x8, x4 *)
  [`X5`; `X6`]; (* 2203: stp x5, x6, [sp, #96] *)
  [`X7`; `X8`]; (* 2204: stp x7, x8, [sp, #112] *)
  []; (* 2205: ldr q20, [x22, #64] *)
  []; (* 2206: ldp x7, x17, [sp, #160] *)
  []; (* 2207: ldr q0, [sp, #160] *)
  []; (* 2208: ldp x6, x10, [x22, #64] *)
  []; (* 2209: ldp x11, x15, [sp, #176] *)
  []; (* 2210: rev64 v16.4s, v20.4s *)
  []; (* 2211: subs x4, x7, x17 *)
  []; (* 2212: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2213: cneg x13, x4, cc *)
  []; (* 2214: mul v16.4s, v16.4s, v0.4s *)
  []; (* 2215: umulh x12, x17, x10 *)
  [`Q20`]; (* 2216: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 2217: subs x14, x11, x7 *)
  []; (* 2218: ldr q20, [x22, #80] *)
  [`X17`]; (* 2219: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2220: ngc x17, xzr *)
  [`X11`; `X15`]; (* 2221: subs x8, x11, x15 *)
  [`Q16`]; (* 2222: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 2223: umulh x4, x7, x6 *)
  [`Q0`]; (* 2224: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 2225: cneg x11, x8, cc *)
  [`Q27`]; (* 2226: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2227: csetm x15, cc *)
  []; (* 2228: subs x9, x10, x6 *)
  [`X14`]; (* 2229: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 2230: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 2231: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2232: cinv x9, x3, cc *)
  []; (* 2233: cmn x17, #0x1 *)
  []; (* 2234: ldr q28, [sp, #176] *)
  [`X7`]; (* 2235: adcs x14, x7, xzr *)
  []; (* 2236: mul x7, x13, x8 *)
  [`X5`]; (* 2237: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2238: adcs x5, x1, xzr *)
  []; (* 2239: xtn v1.2s, v20.2d *)
  []; (* 2240: mov x1, v17.d[0] *)
  [`Q17`]; (* 2241: mov x3, v17.d[1] *)
  []; (* 2242: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 2243: umulh x16, x13, x8 *)
  [`X7`]; (* 2244: eor x13, x7, x9 *)
  []; (* 2245: adds x8, x1, x3 *)
  []; (* 2246: adcs x7, x4, x12 *)
  []; (* 2247: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2248: adcs x12, x12, xzr *)
  [`X4`]; (* 2249: adds x8, x4, x8 *)
  [`X7`]; (* 2250: adcs x3, x3, x7 *)
  []; (* 2251: ldp x7, x2, [x22, #80] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2252: adcs x12, x12, xzr *)
  []; (* 2253: cmn x9, #0x1 *)
  [`X13`]; (* 2254: adcs x8, x8, x13 *)
  [`X16`]; (* 2255: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 2256: adcs x16, x3, x13 *)
  []; (* 2257: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 2258: adc x13, x12, x9 *)
  [`X6`]; (* 2259: subs x12, x6, x7 *)
  [`X10`]; (* 2260: sbcs x9, x10, x2 *)
  []; (* 2261: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2262: ngc x4, xzr *)
  [`X2`; `X7`]; (* 2263: subs x6, x2, x7 *)
  [`X15`]; (* 2264: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2265: cneg x6, x6, cc *)
  []; (* 2266: subs x7, x1, x3 *)
  []; (* 2267: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2268: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 2269: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 2270: adcs x3, x16, x10 *)
  []; (* 2271: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 2272: adcs x8, x13, x7 *)
  [`X12`]; (* 2273: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2274: adc x10, x1, xzr *)
  []; (* 2275: cmn x4, #0x1 *)
  [`X11`]; (* 2276: umulh x6, x11, x6 *)
  [`X13`]; (* 2277: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2278: adcs x1, x9, xzr *)
  []; (* 2279: lsl x13, x15, #32 *)
  []; (* 2280: subs x12, x15, x13 *)
  []; (* 2281: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2282: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 2283: adds x19, x3, x13 *)
  [`X7`; `X8`]; (* 2284: adcs x20, x8, x7 *)
  []; (* 2285: umulh x8, x14, x11 *)
  []; (* 2286: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 2287: adcs x26, x10, x12 *)
  []; (* 2288: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2289: adc x27, x15, xzr *)
  [`Q20`]; (* 2290: rev64 v24.4s, v20.4s *)
  []; (* 2291: movi v2.2d, #0xffffffff *)
  []; (* 2292: mul x10, x14, x11 *)
  [`Q24`]; (* 2293: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 2294: subs x13, x14, x5 *)
  [`Q28`]; (* 2295: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 2296: csetm x15, cc *)
  [`Q21`]; (* 2297: usra v3.2d, v21.2d, #32 *)
  []; (* 2298: mul x7, x5, x1 *)
  [`Q16`]; (* 2299: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2300: cneg x13, x13, cc *)
  [`Q4`]; (* 2301: uaddlp v5.2d, v4.4s *)
  []; (* 2302: subs x11, x1, x11 *)
  [`Q2`]; (* 2303: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 2304: umulh x5, x5, x1 *)
  [`Q5`]; (* 2305: shl v24.2d, v5.2d, #32 *)
  []; (* 2306: cneg x11, x11, cc *)
  [`Q19`]; (* 2307: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2308: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 2309: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 2310: adds x15, x10, x7 *)
  []; (* 2311: mul x14, x13, x11 *)
  [`X6`]; (* 2312: eor x1, x6, x2 *)
  []; (* 2313: adcs x6, x8, x5 *)
  [`Q3`]; (* 2314: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2315: adcs x9, x5, xzr *)
  [`X13`]; (* 2316: umulh x11, x13, x11 *)
  [`X8`]; (* 2317: adds x15, x8, x15 *)
  [`X6`]; (* 2318: adcs x7, x7, x6 *)
  [`X14`]; (* 2319: eor x8, x14, x12 *)
  [`Q16`]; (* 2320: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2321: adcs x13, x9, xzr *)
  []; (* 2322: cmn x12, #0x1 *)
  []; (* 2323: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 2324: adcs x14, x15, x8 *)
  [`X11`]; (* 2325: eor x6, x11, x12 *)
  [`X7`]; (* 2326: adcs x6, x7, x6 *)
  [`Q24`]; (* 2327: mov x5, v24.d[0] *)
  []; (* 2328: mov x11, v21.d[1] *)
  [`Q21`]; (* 2329: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 2330: adc x3, x13, x12 *)
  []; (* 2331: adds x12, x5, x9 *)
  []; (* 2332: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2333: adcs x11, x11, xzr *)
  [`X7`]; (* 2334: adds x12, x7, x12 *)
  []; (* 2335: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 2336: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2337: adcs x11, x11, xzr *)
  []; (* 2338: cmn x2, #0x1 *)
  [`X12`]; (* 2339: adcs x16, x12, x16 *)
  [`X7`]; (* 2340: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2341: adc x2, x11, x2 *)
  [`X19`; `X5`]; (* 2342: adds x7, x5, x19 *)
  [`X16`; `X20`]; (* 2343: adcs x15, x16, x20 *)
  [`X17`; `X4`]; (* 2344: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 2345: adcs x9, x1, x26 *)
  [`X10`]; (* 2346: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 2347: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2348: adc x2, xzr, xzr *)
  []; (* 2349: cmn x5, #0x1 *)
  [`X14`]; (* 2350: eor x13, x14, x5 *)
  [`X1`]; (* 2351: adcs x14, x1, x7 *)
  [`X6`]; (* 2352: eor x1, x6, x5 *)
  [`X13`]; (* 2353: adcs x6, x13, x15 *)
  [`X1`]; (* 2354: adcs x10, x1, x9 *)
  [`X3`]; (* 2355: eor x4, x3, x5 *)
  []; (* 2356: mov x1, #0xffffffff *)
  [`X4`]; (* 2357: adcs x8, x4, x16 *)
  []; (* 2358: lsr x13, x14, #32 *)
  []; (* 2359: adcs x17, x2, x5 *)
  []; (* 2360: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2361: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 2362: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 2363: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 2364: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 2365: adcs x9, x11, x16 *)
  []; (* 2366: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 2367: adc x10, x4, x2 *)
  []; (* 2368: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2369: sbc x4, x14, x13 *)
  [`X6`]; (* 2370: adds x11, x6, x11 *)
  [`X13`]; (* 2371: adcs x12, x12, x13 *)
  []; (* 2372: lsl x15, x11, #32 *)
  [`X7`]; (* 2373: adcs x17, x7, x17 *)
  []; (* 2374: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2375: adc x13, x4, xzr *)
  []; (* 2376: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2377: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 2378: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 2379: adcs x15, x17, x7 *)
  [`X13`]; (* 2380: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2381: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 2382: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 2383: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 2384: adc x13, x10, xzr *)
  []; (* 2385: add x12, x13, #0x1 *)
  []; (* 2386: neg x11, x12 *)
  []; (* 2387: lsl x4, x12, #32 *)
  []; (* 2388: adds x17, x17, x4 *)
  []; (* 2389: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2390: adc x13, x13, xzr *)
  [`X8`]; (* 2391: subs x11, x8, x11 *)
  [`X15`]; (* 2392: sbcs x4, x15, x4 *)
  []; (* 2393: sbcs x7, x7, xzr *)
  []; (* 2394: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2395: sbcs x13, x13, x12 *)
  []; (* 2396: mov x12, #0xffffffff00000001 *)
  []; (* 2397: adds x11, x11, x13 *)
  []; (* 2398: and x1, x1, x13 *)
  [`X1`]; (* 2399: adcs x4, x4, x1 *)
  [`X12`; `X13`]; (* 2400: and x1, x12, x13 *)
  [`X11`; `X4`]; (* 2401: stp x11, x4, [sp, #160] *)
  [`X7`]; (* 2402: adcs x19, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`; `X17`]; (* 2403: adc x20, x17, x1 *)
  []; (* 2404: stp x19, x20, [sp, #176] *)
  []; (* 2405: mov x0, sp *)
  []; (* 2406: mov x1, sp *)
  []; (* 2407: ldp x4, x3, [sp, #64] *)
  [`X24`; `X4`]; (* 2408: subs x5, x24, x4 *)
  [`X25`; `X3`]; (* 2409: sbcs x6, x25, x3 *)
  [`X1`]; (* 2410: ldp x7, x8, [x1, #16] *)
  []; (* 2411: ldp x4, x3, [sp, #80] *)
  [`X4`]; (* 2412: sbcs x7, x7, x4 *)
  [`X3`]; (* 2413: sbcs x8, x8, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2414: csetm x3, cc *)
  [`X5`]; (* 2415: adds x9, x5, x3 *)
  []; (* 2416: and x4, x3, #0xffffffff *)
  [`X4`; `X6`]; (* 2417: adcs x10, x6, x4 *)
  [`X7`]; (* 2418: adcs x11, x7, xzr *)
  [`X3`]; (* 2419: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X8`]; (* 2420: adc x3, x8, x4 *)
  []; (* 2421: stp x9, x10, [x0] *)
  [`X0`]; (* 2422: stp x11, x3, [x0, #16] *)
  []; (* 2423: ldp x5, x6, [sp, #128] *)
  [`X9`]; (* 2424: subs x5, x5, x9 *)
  [`X10`]; (* 2425: sbcs x6, x6, x10 *)
  []; (* 2426: ldp x7, x8, [sp, #144] *)
  [`X11`]; (* 2427: sbcs x7, x7, x11 *)
  [`X3`]; (* 2428: sbcs x8, x8, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2429: csetm x3, cc *)
  []; (* 2430: adds x5, x5, x3 *)
  []; (* 2431: and x4, x3, #0xffffffff *)
  [`X4`]; (* 2432: adcs x6, x6, x4 *)
  []; (* 2433: adcs x7, x7, xzr *)
  [`X3`]; (* 2434: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2435: adc x8, x8, x4 *)
  [`X5`; `X6`]; (* 2436: stp x5, x6, [sp, #128] *)
  [`X7`; `X8`]; (* 2437: stp x7, x8, [sp, #144] *)
  []; (* 2438: ldr q20, [sp, #192] *)
  []; (* 2439: ldp x7, x17, [sp, #96] *)
  []; (* 2440: ldr q0, [sp, #96] *)
  []; (* 2441: ldp x6, x10, [sp, #192] *)
  []; (* 2442: ldp x11, x15, [sp, #112] *)
  []; (* 2443: rev64 v16.4s, v20.4s *)
  []; (* 2444: subs x4, x7, x17 *)
  []; (* 2445: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2446: cneg x13, x4, cc *)
  []; (* 2447: mul v16.4s, v16.4s, v0.4s *)
  []; (* 2448: umulh x12, x17, x10 *)
  [`Q20`]; (* 2449: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 2450: subs x14, x11, x7 *)
  []; (* 2451: ldr q20, [sp, #208] *)
  [`X17`]; (* 2452: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2453: ngc x17, xzr *)
  [`X11`; `X15`]; (* 2454: subs x8, x11, x15 *)
  [`Q16`]; (* 2455: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 2456: umulh x4, x7, x6 *)
  [`Q0`]; (* 2457: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 2458: cneg x11, x8, cc *)
  [`Q27`]; (* 2459: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2460: csetm x15, cc *)
  []; (* 2461: subs x9, x10, x6 *)
  [`X14`]; (* 2462: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 2463: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 2464: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2465: cinv x9, x3, cc *)
  []; (* 2466: cmn x17, #0x1 *)
  []; (* 2467: ldr q28, [sp, #112] *)
  [`X7`]; (* 2468: adcs x14, x7, xzr *)
  []; (* 2469: mul x7, x13, x8 *)
  [`X5`]; (* 2470: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2471: adcs x5, x1, xzr *)
  []; (* 2472: xtn v1.2s, v20.2d *)
  []; (* 2473: mov x1, v17.d[0] *)
  [`Q17`]; (* 2474: mov x3, v17.d[1] *)
  []; (* 2475: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 2476: umulh x16, x13, x8 *)
  [`X7`]; (* 2477: eor x13, x7, x9 *)
  []; (* 2478: adds x8, x1, x3 *)
  []; (* 2479: adcs x7, x4, x12 *)
  []; (* 2480: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2481: adcs x12, x12, xzr *)
  [`X4`]; (* 2482: adds x8, x4, x8 *)
  [`X7`]; (* 2483: adcs x3, x3, x7 *)
  []; (* 2484: ldp x7, x2, [sp, #208] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2485: adcs x12, x12, xzr *)
  []; (* 2486: cmn x9, #0x1 *)
  [`X13`]; (* 2487: adcs x8, x8, x13 *)
  [`X16`]; (* 2488: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 2489: adcs x16, x3, x13 *)
  []; (* 2490: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 2491: adc x13, x12, x9 *)
  [`X6`]; (* 2492: subs x12, x6, x7 *)
  [`X10`]; (* 2493: sbcs x9, x10, x2 *)
  []; (* 2494: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2495: ngc x4, xzr *)
  [`X2`; `X7`]; (* 2496: subs x6, x2, x7 *)
  [`X15`]; (* 2497: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2498: cneg x6, x6, cc *)
  []; (* 2499: subs x7, x1, x3 *)
  []; (* 2500: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2501: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 2502: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 2503: adcs x3, x16, x10 *)
  []; (* 2504: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 2505: adcs x8, x13, x7 *)
  [`X12`]; (* 2506: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2507: adc x10, x1, xzr *)
  []; (* 2508: cmn x4, #0x1 *)
  [`X11`]; (* 2509: umulh x6, x11, x6 *)
  [`X13`]; (* 2510: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2511: adcs x1, x9, xzr *)
  []; (* 2512: lsl x13, x15, #32 *)
  []; (* 2513: subs x12, x15, x13 *)
  []; (* 2514: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2515: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 2516: adds x24, x3, x13 *)
  [`X7`; `X8`]; (* 2517: adcs x25, x8, x7 *)
  []; (* 2518: umulh x8, x14, x11 *)
  []; (* 2519: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 2520: adcs x26, x10, x12 *)
  []; (* 2521: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2522: adc x27, x15, xzr *)
  [`Q20`]; (* 2523: rev64 v24.4s, v20.4s *)
  []; (* 2524: movi v2.2d, #0xffffffff *)
  []; (* 2525: mul x10, x14, x11 *)
  [`Q24`]; (* 2526: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 2527: subs x13, x14, x5 *)
  [`Q28`]; (* 2528: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 2529: csetm x15, cc *)
  [`Q21`]; (* 2530: usra v3.2d, v21.2d, #32 *)
  []; (* 2531: mul x7, x5, x1 *)
  [`Q16`]; (* 2532: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2533: cneg x13, x13, cc *)
  [`Q4`]; (* 2534: uaddlp v5.2d, v4.4s *)
  []; (* 2535: subs x11, x1, x11 *)
  [`Q2`]; (* 2536: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 2537: umulh x5, x5, x1 *)
  [`Q5`]; (* 2538: shl v24.2d, v5.2d, #32 *)
  []; (* 2539: cneg x11, x11, cc *)
  [`Q19`]; (* 2540: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2541: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 2542: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 2543: adds x15, x10, x7 *)
  []; (* 2544: mul x14, x13, x11 *)
  [`X6`]; (* 2545: eor x1, x6, x2 *)
  []; (* 2546: adcs x6, x8, x5 *)
  [`Q3`]; (* 2547: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2548: adcs x9, x5, xzr *)
  [`X13`]; (* 2549: umulh x11, x13, x11 *)
  [`X8`]; (* 2550: adds x15, x8, x15 *)
  [`X6`]; (* 2551: adcs x7, x7, x6 *)
  [`X14`]; (* 2552: eor x8, x14, x12 *)
  [`Q16`]; (* 2553: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2554: adcs x13, x9, xzr *)
  []; (* 2555: cmn x12, #0x1 *)
  []; (* 2556: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 2557: adcs x14, x15, x8 *)
  [`X11`]; (* 2558: eor x6, x11, x12 *)
  [`X7`]; (* 2559: adcs x6, x7, x6 *)
  [`Q24`]; (* 2560: mov x5, v24.d[0] *)
  []; (* 2561: mov x11, v21.d[1] *)
  [`Q21`]; (* 2562: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 2563: adc x3, x13, x12 *)
  []; (* 2564: adds x12, x5, x9 *)
  []; (* 2565: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2566: adcs x11, x11, xzr *)
  [`X7`]; (* 2567: adds x12, x7, x12 *)
  []; (* 2568: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 2569: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2570: adcs x11, x11, xzr *)
  []; (* 2571: cmn x2, #0x1 *)
  [`X12`]; (* 2572: adcs x16, x12, x16 *)
  [`X7`]; (* 2573: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2574: adc x2, x11, x2 *)
  [`X24`; `X5`]; (* 2575: adds x7, x5, x24 *)
  [`X16`; `X25`]; (* 2576: adcs x15, x16, x25 *)
  [`X17`; `X4`]; (* 2577: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 2578: adcs x9, x1, x26 *)
  [`X10`]; (* 2579: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 2580: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2581: adc x2, xzr, xzr *)
  []; (* 2582: cmn x5, #0x1 *)
  [`X14`]; (* 2583: eor x13, x14, x5 *)
  [`X1`]; (* 2584: adcs x14, x1, x7 *)
  [`X6`]; (* 2585: eor x1, x6, x5 *)
  [`X13`]; (* 2586: adcs x6, x13, x15 *)
  [`X1`]; (* 2587: adcs x10, x1, x9 *)
  [`X3`]; (* 2588: eor x4, x3, x5 *)
  []; (* 2589: mov x1, #0xffffffff *)
  [`X4`]; (* 2590: adcs x8, x4, x16 *)
  []; (* 2591: lsr x13, x14, #32 *)
  []; (* 2592: adcs x17, x2, x5 *)
  []; (* 2593: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2594: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 2595: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 2596: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 2597: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 2598: adcs x9, x11, x16 *)
  []; (* 2599: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 2600: adc x10, x4, x2 *)
  []; (* 2601: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2602: sbc x4, x14, x13 *)
  [`X6`]; (* 2603: adds x11, x6, x11 *)
  [`X13`]; (* 2604: adcs x12, x12, x13 *)
  []; (* 2605: lsl x15, x11, #32 *)
  [`X7`]; (* 2606: adcs x17, x7, x17 *)
  []; (* 2607: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2608: adc x13, x4, xzr *)
  []; (* 2609: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2610: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 2611: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 2612: adcs x15, x17, x7 *)
  [`X13`]; (* 2613: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2614: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 2615: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 2616: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 2617: adc x13, x10, xzr *)
  []; (* 2618: add x12, x13, #0x1 *)
  []; (* 2619: neg x11, x12 *)
  []; (* 2620: lsl x4, x12, #32 *)
  []; (* 2621: adds x17, x17, x4 *)
  []; (* 2622: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2623: adc x13, x13, xzr *)
  [`X8`]; (* 2624: subs x11, x8, x11 *)
  [`X15`]; (* 2625: sbcs x4, x15, x4 *)
  []; (* 2626: sbcs x7, x7, xzr *)
  []; (* 2627: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2628: sbcs x13, x13, x12 *)
  []; (* 2629: mov x12, #0xffffffff00000001 *)
  []; (* 2630: adds x11, x11, x13 *)
  []; (* 2631: and x1, x1, x13 *)
  [`X1`]; (* 2632: adcs x4, x4, x1 *)
  [`X12`; `X13`]; (* 2633: and x1, x12, x13 *)
  [`X11`; `X4`]; (* 2634: stp x11, x4, [sp, #96] *)
  [`X7`]; (* 2635: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 2636: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 2637: stp x4, x1, [sp, #112] *)
  []; (* 2638: ldr q20, [x23, #64] *)
  []; (* 2639: ldp x7, x17, [sp, #160] *)
  []; (* 2640: ldr q0, [sp, #160] *)
  []; (* 2641: ldp x6, x10, [x23, #64] *)
  []; (* 2642: rev64 v16.4s, v20.4s *)
  []; (* 2643: subs x4, x7, x17 *)
  []; (* 2644: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2645: cneg x13, x4, cc *)
  []; (* 2646: mul v16.4s, v16.4s, v0.4s *)
  []; (* 2647: umulh x12, x17, x10 *)
  [`Q20`]; (* 2648: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 2649: subs x14, x19, x7 *)
  []; (* 2650: ldr q20, [x23, #80] *)
  [`X17`]; (* 2651: sbcs x5, x20, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2652: ngc x17, xzr *)
  [`X19`; `X20`]; (* 2653: subs x8, x19, x20 *)
  [`Q16`]; (* 2654: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 2655: umulh x4, x7, x6 *)
  [`Q0`]; (* 2656: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 2657: cneg x11, x8, cc *)
  [`Q27`]; (* 2658: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2659: csetm x15, cc *)
  []; (* 2660: subs x9, x10, x6 *)
  [`X14`]; (* 2661: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 2662: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 2663: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2664: cinv x9, x3, cc *)
  []; (* 2665: cmn x17, #0x1 *)
  []; (* 2666: ldr q28, [sp, #176] *)
  [`X7`]; (* 2667: adcs x14, x7, xzr *)
  []; (* 2668: mul x7, x13, x8 *)
  [`X5`]; (* 2669: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2670: adcs x5, x1, xzr *)
  []; (* 2671: xtn v1.2s, v20.2d *)
  []; (* 2672: mov x1, v17.d[0] *)
  [`Q17`]; (* 2673: mov x3, v17.d[1] *)
  []; (* 2674: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 2675: umulh x16, x13, x8 *)
  [`X7`]; (* 2676: eor x13, x7, x9 *)
  []; (* 2677: adds x8, x1, x3 *)
  []; (* 2678: adcs x7, x4, x12 *)
  []; (* 2679: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2680: adcs x12, x12, xzr *)
  [`X4`]; (* 2681: adds x8, x4, x8 *)
  [`X7`]; (* 2682: adcs x3, x3, x7 *)
  []; (* 2683: ldp x7, x2, [x23, #80] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2684: adcs x12, x12, xzr *)
  []; (* 2685: cmn x9, #0x1 *)
  [`X13`]; (* 2686: adcs x8, x8, x13 *)
  [`X16`]; (* 2687: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 2688: adcs x16, x3, x13 *)
  []; (* 2689: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 2690: adc x13, x12, x9 *)
  [`X6`]; (* 2691: subs x12, x6, x7 *)
  [`X10`]; (* 2692: sbcs x9, x10, x2 *)
  []; (* 2693: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2694: ngc x4, xzr *)
  [`X2`; `X7`]; (* 2695: subs x6, x2, x7 *)
  [`X15`]; (* 2696: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2697: cneg x6, x6, cc *)
  []; (* 2698: subs x7, x1, x3 *)
  []; (* 2699: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2700: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 2701: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 2702: adcs x3, x16, x10 *)
  []; (* 2703: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 2704: adcs x8, x13, x7 *)
  [`X12`]; (* 2705: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2706: adc x10, x1, xzr *)
  []; (* 2707: cmn x4, #0x1 *)
  [`X11`]; (* 2708: umulh x6, x11, x6 *)
  [`X13`]; (* 2709: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2710: adcs x1, x9, xzr *)
  []; (* 2711: lsl x13, x15, #32 *)
  []; (* 2712: subs x12, x15, x13 *)
  []; (* 2713: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2714: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 2715: adds x19, x3, x13 *)
  [`X7`; `X8`]; (* 2716: adcs x20, x8, x7 *)
  []; (* 2717: umulh x8, x14, x11 *)
  []; (* 2718: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 2719: adcs x24, x10, x12 *)
  []; (* 2720: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2721: adc x25, x15, xzr *)
  [`Q20`]; (* 2722: rev64 v24.4s, v20.4s *)
  []; (* 2723: movi v2.2d, #0xffffffff *)
  []; (* 2724: mul x10, x14, x11 *)
  [`Q24`]; (* 2725: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 2726: subs x13, x14, x5 *)
  [`Q28`]; (* 2727: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 2728: csetm x15, cc *)
  [`Q21`]; (* 2729: usra v3.2d, v21.2d, #32 *)
  []; (* 2730: mul x7, x5, x1 *)
  [`Q16`]; (* 2731: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2732: cneg x13, x13, cc *)
  [`Q4`]; (* 2733: uaddlp v5.2d, v4.4s *)
  []; (* 2734: subs x11, x1, x11 *)
  [`Q2`]; (* 2735: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 2736: umulh x5, x5, x1 *)
  [`Q5`]; (* 2737: shl v24.2d, v5.2d, #32 *)
  []; (* 2738: cneg x11, x11, cc *)
  [`Q19`]; (* 2739: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2740: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 2741: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 2742: adds x15, x10, x7 *)
  []; (* 2743: mul x14, x13, x11 *)
  [`X6`]; (* 2744: eor x1, x6, x2 *)
  []; (* 2745: adcs x6, x8, x5 *)
  [`Q3`]; (* 2746: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2747: adcs x9, x5, xzr *)
  [`X13`]; (* 2748: umulh x11, x13, x11 *)
  [`X8`]; (* 2749: adds x15, x8, x15 *)
  [`X6`]; (* 2750: adcs x7, x7, x6 *)
  [`X14`]; (* 2751: eor x8, x14, x12 *)
  [`Q16`]; (* 2752: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2753: adcs x13, x9, xzr *)
  []; (* 2754: cmn x12, #0x1 *)
  []; (* 2755: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 2756: adcs x14, x15, x8 *)
  [`X11`]; (* 2757: eor x6, x11, x12 *)
  [`X7`]; (* 2758: adcs x6, x7, x6 *)
  [`Q24`]; (* 2759: mov x5, v24.d[0] *)
  []; (* 2760: mov x11, v21.d[1] *)
  [`Q21`]; (* 2761: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 2762: adc x3, x13, x12 *)
  []; (* 2763: adds x12, x5, x9 *)
  []; (* 2764: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2765: adcs x11, x11, xzr *)
  [`X7`]; (* 2766: adds x12, x7, x12 *)
  []; (* 2767: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 2768: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2769: adcs x11, x11, xzr *)
  []; (* 2770: cmn x2, #0x1 *)
  [`X12`]; (* 2771: adcs x16, x12, x16 *)
  [`X7`]; (* 2772: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2773: adc x2, x11, x2 *)
  [`X19`; `X5`]; (* 2774: adds x7, x5, x19 *)
  [`X16`; `X20`]; (* 2775: adcs x15, x16, x20 *)
  [`X17`; `X4`]; (* 2776: eor x5, x17, x4 *)
  [`X1`; `X24`]; (* 2777: adcs x9, x1, x24 *)
  [`X10`]; (* 2778: eor x1, x10, x5 *)
  [`X2`; `X25`]; (* 2779: adcs x16, x2, x25 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2780: adc x2, xzr, xzr *)
  []; (* 2781: cmn x5, #0x1 *)
  [`X14`]; (* 2782: eor x13, x14, x5 *)
  [`X1`]; (* 2783: adcs x14, x1, x7 *)
  [`X6`]; (* 2784: eor x1, x6, x5 *)
  [`X13`]; (* 2785: adcs x6, x13, x15 *)
  [`X1`]; (* 2786: adcs x10, x1, x9 *)
  [`X3`]; (* 2787: eor x4, x3, x5 *)
  []; (* 2788: mov x1, #0xffffffff *)
  [`X4`]; (* 2789: adcs x8, x4, x16 *)
  []; (* 2790: lsr x13, x14, #32 *)
  []; (* 2791: adcs x17, x2, x5 *)
  []; (* 2792: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2793: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 2794: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 2795: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 2796: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 2797: adcs x9, x11, x16 *)
  []; (* 2798: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 2799: adc x10, x4, x2 *)
  []; (* 2800: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 2801: sbc x4, x14, x13 *)
  [`X6`]; (* 2802: adds x11, x6, x11 *)
  [`X13`]; (* 2803: adcs x12, x12, x13 *)
  []; (* 2804: lsl x15, x11, #32 *)
  [`X7`]; (* 2805: adcs x17, x7, x17 *)
  []; (* 2806: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2807: adc x13, x4, xzr *)
  []; (* 2808: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2809: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 2810: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 2811: adcs x15, x17, x7 *)
  [`X13`]; (* 2812: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2813: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 2814: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 2815: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 2816: adc x13, x10, xzr *)
  []; (* 2817: add x12, x13, #0x1 *)
  []; (* 2818: neg x11, x12 *)
  []; (* 2819: lsl x4, x12, #32 *)
  []; (* 2820: adds x17, x17, x4 *)
  []; (* 2821: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2822: adc x13, x13, xzr *)
  [`X8`]; (* 2823: subs x11, x8, x11 *)
  [`X15`]; (* 2824: sbcs x4, x15, x4 *)
  []; (* 2825: sbcs x7, x7, xzr *)
  []; (* 2826: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 2827: sbcs x13, x13, x12 *)
  []; (* 2828: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 2829: adds x19, x11, x13 *)
  []; (* 2830: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 2831: adcs x20, x4, x1 *)
  [`X12`; `X13`]; (* 2832: and x1, x12, x13 *)
  []; (* 2833: stp x19, x20, [sp, #160] *)
  [`X7`]; (* 2834: adcs x4, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X17`]; (* 2835: adc x1, x17, x1 *)
  [`X1`; `X4`]; (* 2836: stp x4, x1, [sp, #176] *)
  []; (* 2837: ldr q20, [sp, #128] *)
  []; (* 2838: ldp x7, x17, [sp, #32] *)
  []; (* 2839: ldr q0, [sp, #32] *)
  []; (* 2840: ldp x6, x10, [sp, #128] *)
  []; (* 2841: ldp x11, x15, [sp, #48] *)
  []; (* 2842: rev64 v16.4s, v20.4s *)
  []; (* 2843: subs x4, x7, x17 *)
  []; (* 2844: csetm x3, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 2845: cneg x13, x4, cc *)
  []; (* 2846: mul v16.4s, v16.4s, v0.4s *)
  []; (* 2847: umulh x12, x17, x10 *)
  [`Q20`]; (* 2848: uzp1 v28.4s, v20.4s, v0.4s *)
  []; (* 2849: subs x14, x11, x7 *)
  []; (* 2850: ldr q20, [sp, #144] *)
  [`X17`]; (* 2851: sbcs x5, x15, x17 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2852: ngc x17, xzr *)
  [`X11`; `X15`]; (* 2853: subs x8, x11, x15 *)
  [`Q16`]; (* 2854: uaddlp v27.2d, v16.4s *)
  [`X7`]; (* 2855: umulh x4, x7, x6 *)
  [`Q0`]; (* 2856: uzp1 v21.4s, v0.4s, v0.4s *)
  [`X8`]; (* 2857: cneg x11, x8, cc *)
  [`Q27`]; (* 2858: shl v17.2d, v27.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2859: csetm x15, cc *)
  []; (* 2860: subs x9, x10, x6 *)
  [`X14`]; (* 2861: eor x7, x14, x17 *)
  [`Q21`; `Q28`]; (* 2862: umlal v17.2d, v21.2s, v28.2s *)
  [`X9`]; (* 2863: cneg x8, x9, cc *)
  [`CF`; `NF`; `ZF`; `VF`; `X3`]; (* 2864: cinv x9, x3, cc *)
  []; (* 2865: cmn x17, #0x1 *)
  []; (* 2866: ldr q28, [sp, #48] *)
  [`X7`]; (* 2867: adcs x14, x7, xzr *)
  []; (* 2868: mul x7, x13, x8 *)
  [`X5`]; (* 2869: eor x1, x5, x17 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2870: adcs x5, x1, xzr *)
  []; (* 2871: xtn v1.2s, v20.2d *)
  []; (* 2872: mov x1, v17.d[0] *)
  [`Q17`]; (* 2873: mov x3, v17.d[1] *)
  []; (* 2874: uzp2 v16.4s, v20.4s, v20.4s *)
  [`X13`; `X8`]; (* 2875: umulh x16, x13, x8 *)
  [`X7`]; (* 2876: eor x13, x7, x9 *)
  []; (* 2877: adds x8, x1, x3 *)
  []; (* 2878: adcs x7, x4, x12 *)
  []; (* 2879: xtn v0.2s, v28.2d *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2880: adcs x12, x12, xzr *)
  [`X4`]; (* 2881: adds x8, x4, x8 *)
  [`X7`]; (* 2882: adcs x3, x3, x7 *)
  []; (* 2883: ldp x7, x2, [sp, #144] *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2884: adcs x12, x12, xzr *)
  []; (* 2885: cmn x9, #0x1 *)
  [`X13`]; (* 2886: adcs x8, x8, x13 *)
  [`X16`]; (* 2887: eor x13, x16, x9 *)
  [`X13`; `X3`]; (* 2888: adcs x16, x3, x13 *)
  []; (* 2889: lsl x3, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X9`]; (* 2890: adc x13, x12, x9 *)
  [`X6`]; (* 2891: subs x12, x6, x7 *)
  [`X10`]; (* 2892: sbcs x9, x10, x2 *)
  []; (* 2893: lsr x10, x1, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2894: ngc x4, xzr *)
  [`X2`; `X7`]; (* 2895: subs x6, x2, x7 *)
  [`X15`]; (* 2896: cinv x2, x15, cc *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2897: cneg x6, x6, cc *)
  []; (* 2898: subs x7, x1, x3 *)
  []; (* 2899: eor x9, x9, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2900: sbc x1, x1, x10 *)
  [`X3`; `X8`]; (* 2901: adds x15, x8, x3 *)
  [`X10`; `X16`]; (* 2902: adcs x3, x16, x10 *)
  []; (* 2903: mul x16, x11, x6 *)
  [`X13`; `X7`]; (* 2904: adcs x8, x13, x7 *)
  [`X12`]; (* 2905: eor x13, x12, x4 *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`]; (* 2906: adc x10, x1, xzr *)
  []; (* 2907: cmn x4, #0x1 *)
  [`X11`]; (* 2908: umulh x6, x11, x6 *)
  [`X13`]; (* 2909: adcs x11, x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2910: adcs x1, x9, xzr *)
  []; (* 2911: lsl x13, x15, #32 *)
  []; (* 2912: subs x12, x15, x13 *)
  []; (* 2913: lsr x7, x15, #32 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2914: sbc x15, x15, x7 *)
  [`X13`; `X3`]; (* 2915: adds x24, x3, x13 *)
  [`X7`; `X8`]; (* 2916: adcs x25, x8, x7 *)
  []; (* 2917: umulh x8, x14, x11 *)
  []; (* 2918: umull v21.2d, v0.2s, v1.2s *)
  [`X10`; `X12`]; (* 2919: adcs x26, x10, x12 *)
  []; (* 2920: umull v3.2d, v0.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2921: adc x27, x15, xzr *)
  [`Q20`]; (* 2922: rev64 v24.4s, v20.4s *)
  []; (* 2923: movi v2.2d, #0xffffffff *)
  []; (* 2924: mul x10, x14, x11 *)
  [`Q24`]; (* 2925: mul v4.4s, v24.4s, v28.4s *)
  [`X14`]; (* 2926: subs x13, x14, x5 *)
  [`Q28`]; (* 2927: uzp2 v19.4s, v28.4s, v28.4s *)
  []; (* 2928: csetm x15, cc *)
  [`Q21`]; (* 2929: usra v3.2d, v21.2d, #32 *)
  []; (* 2930: mul x7, x5, x1 *)
  [`Q16`]; (* 2931: umull v21.2d, v19.2s, v16.2s *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2932: cneg x13, x13, cc *)
  [`Q4`]; (* 2933: uaddlp v5.2d, v4.4s *)
  []; (* 2934: subs x11, x1, x11 *)
  [`Q2`]; (* 2935: and v16.16b, v3.16b, v2.16b *)
  [`X1`]; (* 2936: umulh x5, x5, x1 *)
  [`Q5`]; (* 2937: shl v24.2d, v5.2d, #32 *)
  []; (* 2938: cneg x11, x11, cc *)
  [`Q19`]; (* 2939: umlal v16.2d, v19.2s, v1.2s *)
  [`CF`; `NF`; `ZF`; `VF`; `X15`]; (* 2940: cinv x12, x15, cc *)
  [`Q0`; `Q1`]; (* 2941: umlal v24.2d, v0.2s, v1.2s *)
  []; (* 2942: adds x15, x10, x7 *)
  []; (* 2943: mul x14, x13, x11 *)
  [`X6`]; (* 2944: eor x1, x6, x2 *)
  []; (* 2945: adcs x6, x8, x5 *)
  [`Q3`]; (* 2946: usra v21.2d, v3.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2947: adcs x9, x5, xzr *)
  [`X13`]; (* 2948: umulh x11, x13, x11 *)
  [`X8`]; (* 2949: adds x15, x8, x15 *)
  [`X6`]; (* 2950: adcs x7, x7, x6 *)
  [`X14`]; (* 2951: eor x8, x14, x12 *)
  [`Q16`]; (* 2952: usra v21.2d, v16.2d, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X9`]; (* 2953: adcs x13, x9, xzr *)
  []; (* 2954: cmn x12, #0x1 *)
  []; (* 2955: mov x9, v24.d[1] *)
  [`X15`; `X8`]; (* 2956: adcs x14, x15, x8 *)
  [`X11`]; (* 2957: eor x6, x11, x12 *)
  [`X7`]; (* 2958: adcs x6, x7, x6 *)
  [`Q24`]; (* 2959: mov x5, v24.d[0] *)
  []; (* 2960: mov x11, v21.d[1] *)
  [`Q21`]; (* 2961: mov x7, v21.d[0] *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`; `X13`]; (* 2962: adc x3, x13, x12 *)
  []; (* 2963: adds x12, x5, x9 *)
  []; (* 2964: adcs x13, x7, x11 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2965: adcs x11, x11, xzr *)
  [`X7`]; (* 2966: adds x12, x7, x12 *)
  []; (* 2967: eor x16, x16, x2 *)
  [`X13`; `X9`]; (* 2968: adcs x7, x9, x13 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2969: adcs x11, x11, xzr *)
  []; (* 2970: cmn x2, #0x1 *)
  [`X12`]; (* 2971: adcs x16, x12, x16 *)
  [`X7`]; (* 2972: adcs x1, x7, x1 *)
  [`CF`; `NF`; `ZF`; `VF`; `X11`]; (* 2973: adc x2, x11, x2 *)
  [`X24`; `X5`]; (* 2974: adds x7, x5, x24 *)
  [`X16`; `X25`]; (* 2975: adcs x15, x16, x25 *)
  [`X17`; `X4`]; (* 2976: eor x5, x17, x4 *)
  [`X1`; `X26`]; (* 2977: adcs x9, x1, x26 *)
  [`X10`]; (* 2978: eor x1, x10, x5 *)
  [`X2`; `X27`]; (* 2979: adcs x16, x2, x27 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 2980: adc x2, xzr, xzr *)
  []; (* 2981: cmn x5, #0x1 *)
  [`X14`]; (* 2982: eor x13, x14, x5 *)
  [`X1`]; (* 2983: adcs x14, x1, x7 *)
  [`X6`]; (* 2984: eor x1, x6, x5 *)
  [`X13`]; (* 2985: adcs x6, x13, x15 *)
  [`X1`]; (* 2986: adcs x10, x1, x9 *)
  [`X3`]; (* 2987: eor x4, x3, x5 *)
  []; (* 2988: mov x1, #0xffffffff *)
  [`X4`]; (* 2989: adcs x8, x4, x16 *)
  []; (* 2990: lsr x13, x14, #32 *)
  []; (* 2991: adcs x17, x2, x5 *)
  []; (* 2992: adcs x11, x5, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X5`]; (* 2993: adc x4, x5, xzr *)
  [`X10`; `X7`]; (* 2994: adds x12, x10, x7 *)
  [`X15`; `X8`]; (* 2995: adcs x7, x8, x15 *)
  [`X17`; `X9`]; (* 2996: adcs x5, x17, x9 *)
  [`X11`; `X16`]; (* 2997: adcs x9, x11, x16 *)
  []; (* 2998: lsl x11, x14, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X2`; `X4`]; (* 2999: adc x10, x4, x2 *)
  []; (* 3000: subs x17, x14, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X14`]; (* 3001: sbc x4, x14, x13 *)
  [`X6`]; (* 3002: adds x11, x6, x11 *)
  [`X13`]; (* 3003: adcs x12, x12, x13 *)
  []; (* 3004: lsl x15, x11, #32 *)
  [`X7`]; (* 3005: adcs x17, x7, x17 *)
  []; (* 3006: lsr x7, x11, #32 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`]; (* 3007: adc x13, x4, xzr *)
  []; (* 3008: subs x4, x11, x15 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3009: sbc x11, x11, x7 *)
  [`X12`; `X15`]; (* 3010: adds x8, x12, x15 *)
  [`X17`; `X7`]; (* 3011: adcs x15, x17, x7 *)
  [`X13`]; (* 3012: adcs x4, x13, x4 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3013: adc x11, x11, xzr *)
  [`X4`; `X5`]; (* 3014: adds x7, x5, x4 *)
  [`X11`; `X9`]; (* 3015: adcs x17, x9, x11 *)
  [`CF`; `NF`; `ZF`; `VF`; `X10`]; (* 3016: adc x13, x10, xzr *)
  []; (* 3017: add x12, x13, #0x1 *)
  []; (* 3018: neg x11, x12 *)
  []; (* 3019: lsl x4, x12, #32 *)
  []; (* 3020: adds x17, x17, x4 *)
  []; (* 3021: sub x4, x4, #0x1 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3022: adc x13, x13, xzr *)
  [`X8`]; (* 3023: subs x11, x8, x11 *)
  [`X15`]; (* 3024: sbcs x4, x15, x4 *)
  []; (* 3025: sbcs x7, x7, xzr *)
  []; (* 3026: sbcs x17, x17, x12 *)
  [`CF`; `NF`; `ZF`; `VF`; `X12`]; (* 3027: sbcs x13, x13, x12 *)
  []; (* 3028: mov x12, #0xffffffff00000001 *)
  [`X11`]; (* 3029: adds x5, x11, x13 *)
  []; (* 3030: and x1, x1, x13 *)
  [`X1`; `X4`]; (* 3031: adcs x6, x4, x1 *)
  [`X12`; `X13`]; (* 3032: and x1, x12, x13 *)
  []; (* 3033: adcs x7, x7, xzr *)
  [`CF`; `NF`; `ZF`; `VF`; `X1`; `X17`]; (* 3034: adc x9, x17, x1 *)
  []; (* 3035: ldp x4, x3, [sp, #96] *)
  [`X4`]; (* 3036: subs x5, x5, x4 *)
  [`X3`]; (* 3037: sbcs x6, x6, x3 *)
  []; (* 3038: ldp x4, x3, [sp, #112] *)
  [`X4`]; (* 3039: sbcs x7, x7, x4 *)
  [`X3`; `X9`]; (* 3040: sbcs x8, x9, x3 *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3041: csetm x3, cc *)
  [`X5`]; (* 3042: adds x15, x5, x3 *)
  []; (* 3043: and x4, x3, #0xffffffff *)
  [`X4`; `X6`]; (* 3044: adcs x24, x6, x4 *)
  [`X7`]; (* 3045: adcs x25, x7, xzr *)
  [`X3`]; (* 3046: and x4, x3, #0xffffffff00000001 *)
  [`CF`; `NF`; `ZF`; `VF`; `X4`; `X8`]; (* 3047: adc x26, x8, x4 *)
  []; (* 3048: stp x15, x24, [sp, #128] *)
  []; (* 3049: stp x25, x26, [sp, #144] *)
  []; (* 3050: ldp x0, x1, [x22, #64] *)
  []; (* 3051: ldp x2, x3, [x22, #80] *)
  []; (* 3052: orr x12, x0, x1 *)
  []; (* 3053: orr x13, x2, x3 *)
  [`X13`]; (* 3054: orr x12, x12, x13 *)
  [`X12`]; (* 3055: cmp x12, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3056: cset x12, ne *)
  []; (* 3057: ldp x4, x5, [x23, #64] *)
  []; (* 3058: ldp x6, x7, [x23, #80] *)
  []; (* 3059: orr x13, x4, x5 *)
  []; (* 3060: orr x14, x6, x7 *)
  [`X14`]; (* 3061: orr x13, x13, x14 *)
  [`X13`]; (* 3062: cmp x13, xzr *)
  [`CF`; `NF`; `ZF`; `VF`]; (* 3063: cset x13, ne *)
  [`X12`; `X13`]; (* 3064: cmp x13, x12 *)
  [`X0`; `X19`]; (* 3065: csel x8, x0, x19, cc *)
  [`X1`; `X20`]; (* 3066: csel x9, x1, x20, cc *)
  [`X4`]; (* 3067: csel x8, x4, x8, hi *)
  [`X5`]; (* 3068: csel x9, x5, x9, hi *)
  []; (* 3069: ldp x10, x11, [sp, #176] *)
  [`X2`]; (* 3070: csel x10, x2, x10, cc *)
  [`X3`]; (* 3071: csel x11, x3, x11, cc *)
  [`X6`]; (* 3072: csel x10, x6, x10, hi *)
  [`X7`]; (* 3073: csel x11, x7, x11, hi *)
  []; (* 3074: ldp x12, x13, [x22] *)
  []; (* 3075: ldp x0, x1, [sp] *)
  [`X12`]; (* 3076: csel x0, x12, x0, cc *)
  [`X13`]; (* 3077: csel x1, x13, x1, cc *)
  []; (* 3078: ldp x12, x13, [x23] *)
  [`X12`]; (* 3079: csel x0, x12, x0, hi *)
  [`X13`]; (* 3080: csel x1, x13, x1, hi *)
  []; (* 3081: ldp x12, x13, [x22, #16] *)
  []; (* 3082: ldp x2, x3, [sp, #16] *)
  [`X12`]; (* 3083: csel x2, x12, x2, cc *)
  [`X13`]; (* 3084: csel x3, x13, x3, cc *)
  []; (* 3085: ldp x12, x13, [x23, #16] *)
  [`X12`]; (* 3086: csel x2, x12, x2, hi *)
  [`X13`]; (* 3087: csel x3, x13, x3, hi *)
  []; (* 3088: ldp x12, x13, [x22, #32] *)
  [`X12`; `X15`]; (* 3089: csel x4, x12, x15, cc *)
  [`X13`; `X24`]; (* 3090: csel x5, x13, x24, cc *)
  []; (* 3091: ldp x12, x13, [x23, #32] *)
  [`X12`]; (* 3092: csel x4, x12, x4, hi *)
  [`X13`]; (* 3093: csel x5, x13, x5, hi *)
  [`X22`]; (* 3094: ldp x12, x13, [x22, #48] *)
  [`X12`; `X25`]; (* 3095: csel x6, x12, x25, cc *)
  [`X13`; `X26`]; (* 3096: csel x7, x13, x26, cc *)
  [`X23`]; (* 3097: ldp x12, x13, [x23, #48] *)
  [`X12`]; (* 3098: csel x6, x12, x6, hi *)
  [`CF`; `NF`; `ZF`; `VF`; `X13`]; (* 3099: csel x7, x13, x7, hi *)
  [`X0`; `X1`]; (* 3100: stp x0, x1, [x21] *)
  [`X2`; `X3`]; (* 3101: stp x2, x3, [x21, #16] *)
  [`X4`; `X5`]; (* 3102: stp x4, x5, [x21, #32] *)
  [`X6`; `X7`]; (* 3103: stp x6, x7, [x21, #48] *)
  [`X8`; `X9`]; (* 3104: stp x8, x9, [x21, #64] *)
  [`X10`; `X11`; `X21`]; (* 3105: stp x10, x11, [x21, #80] *)
|];;
