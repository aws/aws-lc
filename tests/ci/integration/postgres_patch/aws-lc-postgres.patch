# NOTE: There are also some minor error string differences for AWS-LC
# vs OpenSSL in "src/test/ssl/t/001_ssltests.pl" that are not within
# this patch (AWS-LC uses all caps, OpenSSL uses lower case).
# We use sed in "tests/ci/integration/run_postgres_integration.sh" to
# account for these differences instead to minimize churn in this patch.
# If we do ever get the chance to submit a patch upstream, this patch
# should account for those error string discrepencies.
#
# Ideally we wouldn't be commenting out the test below, but we'd rather
# do an AC_CHECK_FUNCS check against |awslc_version_string| to determine
# whether Postgres is using AWS-LC. That change touches significantly
# more files and causes more churn in our CI however.
# Commit db723116a144386007295521987feed4a6daab2f has a more suitable
# patch that includes the configure script change. That patch would be
# more suitable for upstreaming to postgres whenever we decide to do so. 
#
# Note: The diff in 006_transfer_modes.pl has nothing to do with AWS-LC.
#       It's just to account for a specific error message on Codebuild ARM.

diff --git a/src/bin/pg_upgrade/t/006_transfer_modes.pl b/src/bin/pg_upgrade/t/006_transfer_modes.pl
index 550a63fdf7d..41975ee1c56 100644
--- a/src/bin/pg_upgrade/t/006_transfer_modes.pl
+++ b/src/bin/pg_upgrade/t/006_transfer_modes.pl
@@ -70,7 +70,7 @@ sub test_mode
 			'--new-port' => $new->port,
 			$mode
 		],
-		qr/.* not supported on this platform|could not .* between old and new data directories: .*/,
+		qr/.* not supported on this platform|could not copy file range from .*|could not .* between old and new data directories: .*/,
 		qr/^$/,
 		"pg_upgrade with transfer mode $mode");
 
diff --git a/src/test/ssl/t/002_scram.pl b/src/test/ssl/t/002_scram.pl
index 9e4947f4e3c..bf5edfeef48 100644
--- a/src/test/ssl/t/002_scram.pl
+++ b/src/test/ssl/t/002_scram.pl
@@ -155,14 +155,18 @@ $node->connect_ok(
 # Now test with a server certificate that uses the RSA-PSS algorithm.
 # This checks that the certificate can be loaded and that channel binding
 # works. (see bug #17760)
-if ($supports_rsapss_certs)
-{
-	switch_server_cert($node, certfile => 'server-rsapss');
-	$node->connect_ok(
-		"$common_connstr user=ssltestuser channel_binding=require",
-		"SCRAM with SSL and channel_binding=require, server certificate uses 'rsassaPss'",
-		log_like => [
-			qr/connection authenticated: identity="ssltestuser" method=scram-sha-256/
-		]);
-}
+#
+# AWS-LC does not support RSA-PSS certificates in libssl. If there is a relevant
+# feature request for this, cut an issue to our public repository.
+#
+# if ($supports_rsapss_certs)
+# {
+# 	switch_server_cert($node, certfile => 'server-rsapss');
+# 	$node->connect_ok(
+# 		"$common_connstr user=ssltestuser channel_binding=require",
+# 		"SCRAM with SSL and channel_binding=require, server certificate uses 'rsassaPss'",
+# 		log_like => [
+# 			qr/connection authenticated: identity="ssltestuser" method=scram-sha-256/
+# 		]);
+# }
 done_testing();
