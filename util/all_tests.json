[
  {
    "cmd": ["crypto/crypto_test"],
    "valgrind_supp": ["valgrind_suppressions_crypto_test.supp"],
    "shard": true
  },
  {
    "cmd": ["crypto/crypto_test", "--gtest_also_run_disabled_tests", "--gtest_filter=BNTest.DISABLED_WycheproofPrimality"],
    "skip_valgrind": true
  },
  {
    "cmd": ["crypto/crypto_test", "--gtest_also_run_disabled_tests", "--gtest_filter=RSATest.DISABLED_BlindingCacheConcurrency"],
    "skip_sde": true,
    "skip_valgrind": true
  },
  {
    "cmd": ["crypto/crypto_test"],
    "env": ["OPENSSL_armcap=0x0"],
    "target_arch": "arm",
    "skip_valgrind": true,
    "shard": true
  },
  {
    "cmd": ["crypto/crypto_test"],
    "env": ["OPENSSL_armcap=0x1"],
    "target_arch": "arm",
    "skip_valgrind": true,
    "shard": true
  },
  {
    "cmd": ["crypto/crypto_test"],
    "env": ["OPENSSL_armcap=0x3D"],
    "target_arch": "arm",
    "skip_valgrind": true,
    "shard": true
  },
  {
    "comment": "Test algorithm dispatch without CPU indicator bits",
    "cmd": ["crypto/crypto_test"],
    "env": ["OPENSSL_armcap=~0x7080"],
    "target_arch": "arm",
    "skip_valgrind": true,
    "shard": true
  },
  {
    "comment": "Test algorithm dispatch without CPU indicator or Neon extension capability bits",
    "cmd": ["crypto/crypto_test"],
    "env": ["OPENSSL_armcap=~0x78fc"],
    "target_arch": "arm",
    "skip_valgrind": true,
    "shard": true
  },
  {
    "comment": "Test OPENSSL_ia32cap on crypto_test for x86, as urandom_test is disabled for shared builds on x86",
    "cmd": ["crypto/crypto_test", "--gtest_filter=Crypto.OnDemandIntegrityTest"],
    "env": ["OPENSSL_ia32cap=0:0"],
    "target_arch": "x86"
  },
  {
    "cmd": ["crypto/urandom_test"],
    "skip_valgrind": true
  },
  {
    "comment": "Without RDRAND",
    "cmd": ["crypto/urandom_test"],
    "env": ["OPENSSL_ia32cap=~0x4000000000000000"],
    "skip_valgrind": true,
    "target_arch": "x86"
  },
  {
    "comment": "Run snapsafe detection test suite",
    "cmd": ["crypto/crypto_test",  "--gtest_also_run_disabled_tests", "--gtest_filter=SnapsafeGenerationTest.*"],
    "skip_valgrind": true,
    "shard": false
  },
  {
    "comment": "Potentially with RDRAND, but not Intel",
    "cmd": ["crypto/urandom_test"],
    "env": ["OPENSSL_ia32cap=~0x0000000040000000"],
    "skip_valgrind": true,
    "target_arch": "x86"
  },
  {
    "comment": "Potentially with RDRAND, and forced to Intel",
    "cmd": ["crypto/urandom_test"],
    "env": ["OPENSSL_ia32cap=|0x0000000040000000"],
    "skip_valgrind": true,
    "target_arch": "x86"
  },
  {
    "comment": "No RDRAND and without fork detection",
    "cmd": ["crypto/urandom_test"],
    "env": ["OPENSSL_ia32cap=~0x4000000000000000", "BORINGSSL_IGNORE_MADV_WIPEONFORK=1"],
    "skip_valgrind": true,
    "target_arch": "x86"
  },
  {
    "comment": "Potentially with RDRAND, but not Intel, and without fork detection",
    "cmd": ["crypto/urandom_test"],
    "env": ["OPENSSL_ia32cap=~0x0000000040000000", "BORINGSSL_IGNORE_MADV_WIPEONFORK=1"],
    "skip_valgrind": true,
    "target_arch": "x86"
  },
  {
    "comment": "Run RAND test suite without fork detection",
    "cmd": ["crypto/crypto_test", "--fork_unsafe_buffering", "--gtest_filter=RandTest.*:-RandTest.Fork"],
    "skip_valgrind": true
  },
  {
    "comment": "Run RAND test suite without MADV_WIPEONFORK enabled",
    "cmd": ["crypto/crypto_test", "--gtest_filter=RandTest.*"],
    "env": ["BORINGSSL_IGNORE_MADV_WIPEONFORK=1"],
    "skip_valgrind": true
  },
  {
    "comment": "Run fork detection test suite without MADV_WIPEONFORK enabled",
    "cmd": ["crypto/crypto_test", "--gtest_filter=ForkDetect.*"],
    "env": ["BORINGSSL_IGNORE_MADV_WIPEONFORK=1"],
    "skip_valgrind": true
  },
  {
    "cmd": ["ssl/ssl_test"],
    "shard": true
  },
  {
    "cmd": ["ssl/integration_test"],
    "skip_sde": true
  },
  {
    "cmd": ["crypto/mem_test"]
  },
  {
    "cmd": ["crypto/mem_set_test"]
  },
  {
    "cmd": [
      "crypto/dynamic_loading_test"
    ]
  },
  {
    "cmd": [
      "crypto/rwlock_static_init"
    ]
  },
  {
    "cmd": [
      "tool-openssl/tool_openssl_test"
    ]
  }
]
